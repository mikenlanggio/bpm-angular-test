{"ast":null,"code":"import SnapContext from './SnapContext';\nimport { getChildren, isSnapped, mid } from './SnapUtil';\nimport { isCmd } from '../keyboard/KeyboardUtil';\nimport { forEach, isNumber } from 'min-dash';\nvar HIGHER_PRIORITY = 1250;\n/**\r\n * Snap during create and move.\r\n *\r\n * @param {EventBus} elementRegistry\r\n * @param {EventBus} eventBus\r\n * @param {Snapping} snapping\r\n */\n\nexport default function CreateMoveSnapping(elementRegistry, eventBus, snapping) {\n  var self = this;\n  this._elementRegistry = elementRegistry;\n  eventBus.on(['create.start', 'shape.move.start'], function (event) {\n    self.initSnap(event);\n  });\n  eventBus.on(['create.move', 'create.end', 'shape.move.move', 'shape.move.end'], HIGHER_PRIORITY, function (event) {\n    var context = event.context,\n        shape = context.shape,\n        snapContext = context.snapContext,\n        target = context.target;\n\n    if (event.originalEvent && isCmd(event.originalEvent)) {\n      return;\n    }\n\n    if (isSnapped(event) || !target) {\n      return;\n    }\n\n    var snapPoints = snapContext.pointsForTarget(target);\n\n    if (!snapPoints.initialized) {\n      snapPoints = self.addSnapTargetPoints(snapPoints, shape, target);\n      snapPoints.initialized = true;\n    }\n\n    snapping.snap(event, snapPoints);\n  });\n  eventBus.on(['create.cleanup', 'shape.move.cleanup'], function () {\n    snapping.hide();\n  });\n}\nCreateMoveSnapping.$inject = ['elementRegistry', 'eventBus', 'snapping'];\n\nCreateMoveSnapping.prototype.initSnap = function (event) {\n  var elementRegistry = this._elementRegistry;\n  var context = event.context,\n      shape = context.shape,\n      snapContext = context.snapContext;\n\n  if (!snapContext) {\n    snapContext = context.snapContext = new SnapContext();\n  }\n\n  var shapeMid;\n\n  if (elementRegistry.get(shape.id)) {\n    // move\n    shapeMid = mid(shape, event);\n  } else {\n    // create\n    shapeMid = {\n      x: event.x + mid(shape).x,\n      y: event.y + mid(shape).y\n    };\n  }\n\n  var shapeTopLeft = {\n    x: shapeMid.x - shape.width / 2,\n    y: shapeMid.y - shape.height / 2\n  },\n      shapeBottomRight = {\n    x: shapeMid.x + shape.width / 2,\n    y: shapeMid.y + shape.height / 2\n  };\n  snapContext.setSnapOrigin('mid', {\n    x: shapeMid.x - event.x,\n    y: shapeMid.y - event.y\n  }); // snap labels to mid only\n\n  if (isLabel(shape)) {\n    return snapContext;\n  }\n\n  snapContext.setSnapOrigin('top-left', {\n    x: shapeTopLeft.x - event.x,\n    y: shapeTopLeft.y - event.y\n  });\n  snapContext.setSnapOrigin('bottom-right', {\n    x: shapeBottomRight.x - event.x,\n    y: shapeBottomRight.y - event.y\n  });\n  return snapContext;\n};\n\nCreateMoveSnapping.prototype.addSnapTargetPoints = function (snapPoints, shape, target) {\n  var snapTargets = this.getSnapTargets(shape, target);\n  forEach(snapTargets, function (snapTarget) {\n    // handle labels\n    if (isLabel(snapTarget)) {\n      if (isLabel(shape)) {\n        snapPoints.add('mid', mid(snapTarget));\n      }\n\n      return;\n    } // handle connections\n\n\n    if (isConnection(snapTarget)) {\n      // ignore single segment connections\n      if (snapTarget.waypoints.length < 3) {\n        return;\n      } // ignore first and last waypoint\n\n\n      var waypoints = snapTarget.waypoints.slice(1, -1);\n      forEach(waypoints, function (waypoint) {\n        snapPoints.add('mid', waypoint);\n      });\n      return;\n    } // handle shapes\n\n\n    snapPoints.add('mid', mid(snapTarget));\n  });\n\n  if (!isNumber(shape.x) || !isNumber(shape.y)) {\n    return snapPoints;\n  } // snap to original position when moving\n\n\n  if (this._elementRegistry.get(shape.id)) {\n    snapPoints.add('mid', mid(shape));\n  }\n\n  return snapPoints;\n};\n\nCreateMoveSnapping.prototype.getSnapTargets = function (shape, target) {\n  return getChildren(target).filter(function (child) {\n    return !isHidden(child);\n  });\n}; // helpers //////////\n\n\nfunction isConnection(element) {\n  return !!element.waypoints;\n}\n\nfunction isHidden(element) {\n  return !!element.hidden;\n}\n\nfunction isLabel(element) {\n  return !!element.labelTarget;\n}","map":{"version":3,"names":["SnapContext","getChildren","isSnapped","mid","isCmd","forEach","isNumber","HIGHER_PRIORITY","CreateMoveSnapping","elementRegistry","eventBus","snapping","self","_elementRegistry","on","event","initSnap","context","shape","snapContext","target","originalEvent","snapPoints","pointsForTarget","initialized","addSnapTargetPoints","snap","hide","$inject","prototype","shapeMid","get","id","x","y","shapeTopLeft","width","height","shapeBottomRight","setSnapOrigin","isLabel","snapTargets","getSnapTargets","snapTarget","add","isConnection","waypoints","length","slice","waypoint","filter","child","isHidden","element","hidden","labelTarget"],"sources":["E:/Old_PC/Study/Angular/test-bpm/node_modules/diagram-js/lib/features/snapping/CreateMoveSnapping.js"],"sourcesContent":["import SnapContext from './SnapContext';\r\n\r\nimport {\r\n  getChildren,\r\n  isSnapped,\r\n  mid\r\n} from './SnapUtil';\r\n\r\nimport { isCmd } from '../keyboard/KeyboardUtil';\r\n\r\nimport {\r\n  forEach,\r\n  isNumber\r\n} from 'min-dash';\r\n\r\nvar HIGHER_PRIORITY = 1250;\r\n\r\n\r\n/**\r\n * Snap during create and move.\r\n *\r\n * @param {EventBus} elementRegistry\r\n * @param {EventBus} eventBus\r\n * @param {Snapping} snapping\r\n */\r\nexport default function CreateMoveSnapping(elementRegistry, eventBus, snapping) {\r\n  var self = this;\r\n\r\n  this._elementRegistry = elementRegistry;\r\n\r\n  eventBus.on([\r\n    'create.start',\r\n    'shape.move.start'\r\n  ], function(event) {\r\n    self.initSnap(event);\r\n  });\r\n\r\n  eventBus.on([\r\n    'create.move',\r\n    'create.end',\r\n    'shape.move.move',\r\n    'shape.move.end'\r\n  ], HIGHER_PRIORITY, function(event) {\r\n    var context = event.context,\r\n        shape = context.shape,\r\n        snapContext = context.snapContext,\r\n        target = context.target;\r\n\r\n    if (event.originalEvent && isCmd(event.originalEvent)) {\r\n      return;\r\n    }\r\n\r\n    if (isSnapped(event) || !target) {\r\n      return;\r\n    }\r\n\r\n    var snapPoints = snapContext.pointsForTarget(target);\r\n\r\n    if (!snapPoints.initialized) {\r\n      snapPoints = self.addSnapTargetPoints(snapPoints, shape, target);\r\n\r\n      snapPoints.initialized = true;\r\n    }\r\n\r\n    snapping.snap(event, snapPoints);\r\n  });\r\n\r\n  eventBus.on([\r\n    'create.cleanup',\r\n    'shape.move.cleanup'\r\n  ], function() {\r\n    snapping.hide();\r\n  });\r\n}\r\n\r\nCreateMoveSnapping.$inject = [\r\n  'elementRegistry',\r\n  'eventBus',\r\n  'snapping'\r\n];\r\n\r\nCreateMoveSnapping.prototype.initSnap = function(event) {\r\n  var elementRegistry = this._elementRegistry;\r\n\r\n  var context = event.context,\r\n      shape = context.shape,\r\n      snapContext = context.snapContext;\r\n\r\n  if (!snapContext) {\r\n    snapContext = context.snapContext = new SnapContext();\r\n  }\r\n\r\n  var shapeMid;\r\n\r\n  if (elementRegistry.get(shape.id)) {\r\n\r\n    // move\r\n    shapeMid = mid(shape, event);\r\n  } else {\r\n\r\n    // create\r\n    shapeMid = {\r\n      x: event.x + mid(shape).x,\r\n      y: event.y + mid(shape).y\r\n    };\r\n  }\r\n\r\n  var shapeTopLeft = {\r\n        x: shapeMid.x - shape.width / 2,\r\n        y: shapeMid.y - shape.height / 2\r\n      },\r\n      shapeBottomRight = {\r\n        x: shapeMid.x + shape.width / 2,\r\n        y: shapeMid.y + shape.height / 2\r\n      };\r\n\r\n  snapContext.setSnapOrigin('mid', {\r\n    x: shapeMid.x - event.x,\r\n    y: shapeMid.y - event.y\r\n  });\r\n\r\n  // snap labels to mid only\r\n  if (isLabel(shape)) {\r\n    return snapContext;\r\n  }\r\n\r\n  snapContext.setSnapOrigin('top-left', {\r\n    x: shapeTopLeft.x - event.x,\r\n    y: shapeTopLeft.y - event.y\r\n  });\r\n\r\n  snapContext.setSnapOrigin('bottom-right', {\r\n    x: shapeBottomRight.x - event.x,\r\n    y: shapeBottomRight.y - event.y\r\n  });\r\n\r\n  return snapContext;\r\n};\r\n\r\nCreateMoveSnapping.prototype.addSnapTargetPoints = function(snapPoints, shape, target) {\r\n  var snapTargets = this.getSnapTargets(shape, target);\r\n\r\n  forEach(snapTargets, function(snapTarget) {\r\n\r\n    // handle labels\r\n    if (isLabel(snapTarget)) {\r\n\r\n      if (isLabel(shape)) {\r\n        snapPoints.add('mid', mid(snapTarget));\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    // handle connections\r\n    if (isConnection(snapTarget)) {\r\n\r\n      // ignore single segment connections\r\n      if (snapTarget.waypoints.length < 3) {\r\n        return;\r\n      }\r\n\r\n      // ignore first and last waypoint\r\n      var waypoints = snapTarget.waypoints.slice(1, -1);\r\n\r\n      forEach(waypoints, function(waypoint) {\r\n        snapPoints.add('mid', waypoint);\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    // handle shapes\r\n    snapPoints.add('mid', mid(snapTarget));\r\n  });\r\n\r\n  if (!isNumber(shape.x) || !isNumber(shape.y)) {\r\n    return snapPoints;\r\n  }\r\n\r\n  // snap to original position when moving\r\n  if (this._elementRegistry.get(shape.id)) {\r\n    snapPoints.add('mid', mid(shape));\r\n  }\r\n\r\n  return snapPoints;\r\n};\r\n\r\nCreateMoveSnapping.prototype.getSnapTargets = function(shape, target) {\r\n  return getChildren(target).filter(function(child) {\r\n    return !isHidden(child);\r\n  });\r\n};\r\n\r\n// helpers //////////\r\n\r\nfunction isConnection(element) {\r\n  return !!element.waypoints;\r\n}\r\n\r\nfunction isHidden(element) {\r\n  return !!element.hidden;\r\n}\r\n\r\nfunction isLabel(element) {\r\n  return !!element.labelTarget;\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}