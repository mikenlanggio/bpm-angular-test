{"ast":null,"code":"var MARKER_OK = 'connect-ok',\n    MARKER_NOT_OK = 'connect-not-ok';\n/**\n * @class\n * @constructor\n *\n * @param {EventBus} eventBus\n * @param {Dragging} dragging\n * @param {Connect} connect\n * @param {Canvas} canvas\n * @param {ToolManager} toolManager\n * @param {Rules} rules\n * @param {Mouse} mouse\n */\n\nexport default function GlobalConnect(eventBus, dragging, connect, canvas, toolManager, rules, mouse) {\n  var self = this;\n  this._dragging = dragging;\n  this._rules = rules;\n  this._mouse = mouse;\n  toolManager.registerTool('global-connect', {\n    tool: 'global-connect',\n    dragging: 'global-connect.drag'\n  });\n  eventBus.on('global-connect.hover', function (event) {\n    var context = event.context,\n        startTarget = event.hover;\n    var canStartConnect = context.canStartConnect = self.canStartConnect(startTarget); // simply ignore hover\n\n    if (canStartConnect === null) {\n      return;\n    }\n\n    context.startTarget = startTarget;\n    canvas.addMarker(startTarget, canStartConnect ? MARKER_OK : MARKER_NOT_OK);\n  });\n  eventBus.on(['global-connect.out', 'global-connect.cleanup'], function (event) {\n    var startTarget = event.context.startTarget,\n        canStartConnect = event.context.canStartConnect;\n\n    if (startTarget) {\n      canvas.removeMarker(startTarget, canStartConnect ? MARKER_OK : MARKER_NOT_OK);\n    }\n  });\n  eventBus.on(['global-connect.ended'], function (event) {\n    var context = event.context,\n        startTarget = context.startTarget,\n        startPosition = {\n      x: event.x,\n      y: event.y\n    };\n    var canStartConnect = self.canStartConnect(startTarget);\n\n    if (!canStartConnect) {\n      return;\n    }\n\n    eventBus.once('element.out', function () {\n      eventBus.once(['connect.ended', 'connect.canceled'], function () {\n        eventBus.fire('global-connect.drag.ended');\n      });\n      connect.start(null, startTarget, startPosition);\n    });\n    return false;\n  });\n}\nGlobalConnect.$inject = ['eventBus', 'dragging', 'connect', 'canvas', 'toolManager', 'rules', 'mouse'];\n/**\n * Initiates tool activity.\n */\n\nGlobalConnect.prototype.start = function (event, autoActivate) {\n  this._dragging.init(event, 'global-connect', {\n    autoActivate: autoActivate,\n    trapClick: false,\n    data: {\n      context: {}\n    }\n  });\n};\n\nGlobalConnect.prototype.toggle = function () {\n  if (this.isActive()) {\n    return this._dragging.cancel();\n  }\n\n  var mouseEvent = this._mouse.getLastMoveEvent();\n\n  return this.start(mouseEvent, !!mouseEvent);\n};\n\nGlobalConnect.prototype.isActive = function () {\n  var context = this._dragging.context();\n\n  return context && /^global-connect/.test(context.prefix);\n};\n/**\n * Check if source shape can initiate connection.\n *\n * @param  {Shape} startTarget\n * @return {boolean}\n */\n\n\nGlobalConnect.prototype.canStartConnect = function (startTarget) {\n  return this._rules.allowed('connection.start', {\n    source: startTarget\n  });\n};","map":{"version":3,"names":["MARKER_OK","MARKER_NOT_OK","GlobalConnect","eventBus","dragging","connect","canvas","toolManager","rules","mouse","self","_dragging","_rules","_mouse","registerTool","tool","on","event","context","startTarget","hover","canStartConnect","addMarker","removeMarker","startPosition","x","y","once","fire","start","$inject","prototype","autoActivate","init","trapClick","data","toggle","isActive","cancel","mouseEvent","getLastMoveEvent","test","prefix","allowed","source"],"sources":["E:/Old_PC/Study/Angular/test-bpm/node_modules/diagram-js/lib/features/global-connect/GlobalConnect.js"],"sourcesContent":["var MARKER_OK = 'connect-ok',\n    MARKER_NOT_OK = 'connect-not-ok';\n\n/**\n * @class\n * @constructor\n *\n * @param {EventBus} eventBus\n * @param {Dragging} dragging\n * @param {Connect} connect\n * @param {Canvas} canvas\n * @param {ToolManager} toolManager\n * @param {Rules} rules\n * @param {Mouse} mouse\n */\nexport default function GlobalConnect(\n    eventBus, dragging, connect,\n    canvas, toolManager, rules,\n    mouse) {\n\n  var self = this;\n\n  this._dragging = dragging;\n  this._rules = rules;\n  this._mouse = mouse;\n\n  toolManager.registerTool('global-connect', {\n    tool: 'global-connect',\n    dragging: 'global-connect.drag'\n  });\n\n  eventBus.on('global-connect.hover', function(event) {\n    var context = event.context,\n        startTarget = event.hover;\n\n    var canStartConnect = context.canStartConnect = self.canStartConnect(startTarget);\n\n    // simply ignore hover\n    if (canStartConnect === null) {\n      return;\n    }\n\n    context.startTarget = startTarget;\n\n    canvas.addMarker(startTarget, canStartConnect ? MARKER_OK : MARKER_NOT_OK);\n  });\n\n\n  eventBus.on([ 'global-connect.out', 'global-connect.cleanup' ], function(event) {\n    var startTarget = event.context.startTarget,\n        canStartConnect = event.context.canStartConnect;\n\n    if (startTarget) {\n      canvas.removeMarker(startTarget, canStartConnect ? MARKER_OK : MARKER_NOT_OK);\n    }\n  });\n\n\n  eventBus.on([ 'global-connect.ended' ], function(event) {\n    var context = event.context,\n        startTarget = context.startTarget,\n        startPosition = {\n          x: event.x,\n          y: event.y\n        };\n\n    var canStartConnect = self.canStartConnect(startTarget);\n\n    if (!canStartConnect) {\n      return;\n    }\n\n    eventBus.once('element.out', function() {\n      eventBus.once([ 'connect.ended', 'connect.canceled' ], function() {\n        eventBus.fire('global-connect.drag.ended');\n      });\n\n      connect.start(null, startTarget, startPosition);\n    });\n\n    return false;\n  });\n}\n\nGlobalConnect.$inject = [\n  'eventBus',\n  'dragging',\n  'connect',\n  'canvas',\n  'toolManager',\n  'rules',\n  'mouse'\n];\n\n/**\n * Initiates tool activity.\n */\nGlobalConnect.prototype.start = function(event, autoActivate) {\n  this._dragging.init(event, 'global-connect', {\n    autoActivate: autoActivate,\n    trapClick: false,\n    data: {\n      context: {}\n    }\n  });\n};\n\nGlobalConnect.prototype.toggle = function() {\n\n  if (this.isActive()) {\n    return this._dragging.cancel();\n  }\n\n  var mouseEvent = this._mouse.getLastMoveEvent();\n\n  return this.start(mouseEvent, !!mouseEvent);\n};\n\nGlobalConnect.prototype.isActive = function() {\n  var context = this._dragging.context();\n\n  return context && /^global-connect/.test(context.prefix);\n};\n\n/**\n * Check if source shape can initiate connection.\n *\n * @param  {Shape} startTarget\n * @return {boolean}\n */\nGlobalConnect.prototype.canStartConnect = function(startTarget) {\n  return this._rules.allowed('connection.start', { source: startTarget });\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}