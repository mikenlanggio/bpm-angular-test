{"ast":null,"code":"import { assign, forEach, isArray } from 'min-dash';\nimport { Base } from '../../model';\nimport AlignElementsHandler from './cmd/AlignElementsHandler';\nimport AppendShapeHandler from './cmd/AppendShapeHandler';\nimport CreateConnectionHandler from './cmd/CreateConnectionHandler';\nimport CreateElementsHandler from './cmd/CreateElementsHandler';\nimport CreateLabelHandler from './cmd/CreateLabelHandler';\nimport CreateShapeHandler from './cmd/CreateShapeHandler';\nimport DeleteConnectionHandler from './cmd/DeleteConnectionHandler';\nimport DeleteElementsHandler from './cmd/DeleteElementsHandler';\nimport DeleteShapeHandler from './cmd/DeleteShapeHandler';\nimport DistributeElementsHandler from './cmd/DistributeElementsHandler';\nimport LayoutConnectionHandler from './cmd/LayoutConnectionHandler';\nimport MoveConnectionHandler from './cmd/MoveConnectionHandler';\nimport MoveElementsHandler from './cmd/MoveElementsHandler';\nimport MoveShapeHandler from './cmd/MoveShapeHandler';\nimport ReconnectConnectionHandler from './cmd/ReconnectConnectionHandler';\nimport ReplaceShapeHandler from './cmd/ReplaceShapeHandler';\nimport ResizeShapeHandler from './cmd/ResizeShapeHandler';\nimport SpaceToolHandler from './cmd/SpaceToolHandler';\nimport ToggleShapeCollapseHandler from './cmd/ToggleShapeCollapseHandler';\nimport UpdateAttachmentHandler from './cmd/UpdateAttachmentHandler';\nimport UpdateWaypointsHandler from './cmd/UpdateWaypointsHandler';\n/**\n * The basic modeling entry point.\n *\n * @param {EventBus} eventBus\n * @param {ElementFactory} elementFactory\n * @param {CommandStack} commandStack\n */\n\nexport default function Modeling(eventBus, elementFactory, commandStack) {\n  this._eventBus = eventBus;\n  this._elementFactory = elementFactory;\n  this._commandStack = commandStack;\n  var self = this;\n  eventBus.on('diagram.init', function () {\n    // register modeling handlers\n    self.registerHandlers(commandStack);\n  });\n}\nModeling.$inject = ['eventBus', 'elementFactory', 'commandStack'];\n\nModeling.prototype.getHandlers = function () {\n  return {\n    'shape.append': AppendShapeHandler,\n    'shape.create': CreateShapeHandler,\n    'shape.delete': DeleteShapeHandler,\n    'shape.move': MoveShapeHandler,\n    'shape.resize': ResizeShapeHandler,\n    'shape.replace': ReplaceShapeHandler,\n    'shape.toggleCollapse': ToggleShapeCollapseHandler,\n    'spaceTool': SpaceToolHandler,\n    'label.create': CreateLabelHandler,\n    'connection.create': CreateConnectionHandler,\n    'connection.delete': DeleteConnectionHandler,\n    'connection.move': MoveConnectionHandler,\n    'connection.layout': LayoutConnectionHandler,\n    'connection.updateWaypoints': UpdateWaypointsHandler,\n    'connection.reconnect': ReconnectConnectionHandler,\n    'elements.create': CreateElementsHandler,\n    'elements.move': MoveElementsHandler,\n    'elements.delete': DeleteElementsHandler,\n    'elements.distribute': DistributeElementsHandler,\n    'elements.align': AlignElementsHandler,\n    'element.updateAttachment': UpdateAttachmentHandler\n  };\n};\n/**\n * Register handlers with the command stack\n *\n * @param {CommandStack} commandStack\n */\n\n\nModeling.prototype.registerHandlers = function (commandStack) {\n  forEach(this.getHandlers(), function (handler, id) {\n    commandStack.registerHandler(id, handler);\n  });\n}; // modeling helpers //////////////////////\n\n\nModeling.prototype.moveShape = function (shape, delta, newParent, newParentIndex, hints) {\n  if (typeof newParentIndex === 'object') {\n    hints = newParentIndex;\n    newParentIndex = null;\n  }\n\n  var context = {\n    shape: shape,\n    delta: delta,\n    newParent: newParent,\n    newParentIndex: newParentIndex,\n    hints: hints || {}\n  };\n\n  this._commandStack.execute('shape.move', context);\n};\n/**\n * Update the attachment of the given shape.\n *\n * @param {djs.mode.Base} shape\n * @param {djs.model.Base} [newHost]\n */\n\n\nModeling.prototype.updateAttachment = function (shape, newHost) {\n  var context = {\n    shape: shape,\n    newHost: newHost\n  };\n\n  this._commandStack.execute('element.updateAttachment', context);\n};\n/**\n * Move a number of shapes to a new target, either setting it as\n * the new parent or attaching it.\n *\n * @param {Array<djs.mode.Base>} shapes\n * @param {Point} delta\n * @param {djs.model.Base} [target]\n * @param {Object} [hints]\n * @param {boolean} [hints.attach=false]\n */\n\n\nModeling.prototype.moveElements = function (shapes, delta, target, hints) {\n  hints = hints || {};\n  var attach = hints.attach;\n  var newParent = target,\n      newHost;\n\n  if (attach === true) {\n    newHost = target;\n    newParent = target.parent;\n  } else if (attach === false) {\n    newHost = null;\n  }\n\n  var context = {\n    shapes: shapes,\n    delta: delta,\n    newParent: newParent,\n    newHost: newHost,\n    hints: hints\n  };\n\n  this._commandStack.execute('elements.move', context);\n};\n\nModeling.prototype.moveConnection = function (connection, delta, newParent, newParentIndex, hints) {\n  if (typeof newParentIndex === 'object') {\n    hints = newParentIndex;\n    newParentIndex = undefined;\n  }\n\n  var context = {\n    connection: connection,\n    delta: delta,\n    newParent: newParent,\n    newParentIndex: newParentIndex,\n    hints: hints || {}\n  };\n\n  this._commandStack.execute('connection.move', context);\n};\n\nModeling.prototype.layoutConnection = function (connection, hints) {\n  var context = {\n    connection: connection,\n    hints: hints || {}\n  };\n\n  this._commandStack.execute('connection.layout', context);\n};\n/**\n * Create connection.\n *\n * @param {djs.model.Base} source\n * @param {djs.model.Base} target\n * @param {number} [parentIndex]\n * @param {Object|djs.model.Connection} connection\n * @param {djs.model.Base} parent\n * @param {Object} hints\n *\n * @return {djs.model.Connection} the created connection.\n */\n\n\nModeling.prototype.createConnection = function (source, target, parentIndex, connection, parent, hints) {\n  if (typeof parentIndex === 'object') {\n    hints = parent;\n    parent = connection;\n    connection = parentIndex;\n    parentIndex = undefined;\n  }\n\n  connection = this._create('connection', connection);\n  var context = {\n    source: source,\n    target: target,\n    parent: parent,\n    parentIndex: parentIndex,\n    connection: connection,\n    hints: hints\n  };\n\n  this._commandStack.execute('connection.create', context);\n\n  return context.connection;\n};\n/**\n * Create a shape at the specified position.\n *\n * @param {djs.model.Shape|Object} shape\n * @param {Point} position\n * @param {djs.model.Shape|djs.model.Root} target\n * @param {number} [parentIndex] position in parents children list\n * @param {Object} [hints]\n * @param {boolean} [hints.attach] whether to attach to target or become a child\n *\n * @return {djs.model.Shape} the created shape\n */\n\n\nModeling.prototype.createShape = function (shape, position, target, parentIndex, hints) {\n  if (typeof parentIndex !== 'number') {\n    hints = parentIndex;\n    parentIndex = undefined;\n  }\n\n  hints = hints || {};\n  var attach = hints.attach,\n      parent,\n      host;\n  shape = this._create('shape', shape);\n\n  if (attach) {\n    parent = target.parent;\n    host = target;\n  } else {\n    parent = target;\n  }\n\n  var context = {\n    position: position,\n    shape: shape,\n    parent: parent,\n    parentIndex: parentIndex,\n    host: host,\n    hints: hints\n  };\n\n  this._commandStack.execute('shape.create', context);\n\n  return context.shape;\n};\n\nModeling.prototype.createElements = function (elements, position, parent, parentIndex, hints) {\n  if (!isArray(elements)) {\n    elements = [elements];\n  }\n\n  if (typeof parentIndex !== 'number') {\n    hints = parentIndex;\n    parentIndex = undefined;\n  }\n\n  hints = hints || {};\n  var context = {\n    position: position,\n    elements: elements,\n    parent: parent,\n    parentIndex: parentIndex,\n    hints: hints\n  };\n\n  this._commandStack.execute('elements.create', context);\n\n  return context.elements;\n};\n\nModeling.prototype.createLabel = function (labelTarget, position, label, parent) {\n  label = this._create('label', label);\n  var context = {\n    labelTarget: labelTarget,\n    position: position,\n    parent: parent || labelTarget.parent,\n    shape: label\n  };\n\n  this._commandStack.execute('label.create', context);\n\n  return context.shape;\n};\n/**\n * Append shape to given source, drawing a connection\n * between source and the newly created shape.\n *\n * @param {djs.model.Shape} source\n * @param {djs.model.Shape|Object} shape\n * @param {Point} position\n * @param {djs.model.Shape} target\n * @param {Object} [hints]\n * @param {boolean} [hints.attach]\n * @param {djs.model.Connection|Object} [hints.connection]\n * @param {djs.model.Base} [hints.connectionParent]\n *\n * @return {djs.model.Shape} the newly created shape\n */\n\n\nModeling.prototype.appendShape = function (source, shape, position, target, hints) {\n  hints = hints || {};\n  shape = this._create('shape', shape);\n  var context = {\n    source: source,\n    position: position,\n    target: target,\n    shape: shape,\n    connection: hints.connection,\n    connectionParent: hints.connectionParent,\n    hints: hints\n  };\n\n  this._commandStack.execute('shape.append', context);\n\n  return context.shape;\n};\n\nModeling.prototype.removeElements = function (elements) {\n  var context = {\n    elements: elements\n  };\n\n  this._commandStack.execute('elements.delete', context);\n};\n\nModeling.prototype.distributeElements = function (groups, axis, dimension) {\n  var context = {\n    groups: groups,\n    axis: axis,\n    dimension: dimension\n  };\n\n  this._commandStack.execute('elements.distribute', context);\n};\n\nModeling.prototype.removeShape = function (shape, hints) {\n  var context = {\n    shape: shape,\n    hints: hints || {}\n  };\n\n  this._commandStack.execute('shape.delete', context);\n};\n\nModeling.prototype.removeConnection = function (connection, hints) {\n  var context = {\n    connection: connection,\n    hints: hints || {}\n  };\n\n  this._commandStack.execute('connection.delete', context);\n};\n\nModeling.prototype.replaceShape = function (oldShape, newShape, hints) {\n  var context = {\n    oldShape: oldShape,\n    newData: newShape,\n    hints: hints || {}\n  };\n\n  this._commandStack.execute('shape.replace', context);\n\n  return context.newShape;\n};\n\nModeling.prototype.alignElements = function (elements, alignment) {\n  var context = {\n    elements: elements,\n    alignment: alignment\n  };\n\n  this._commandStack.execute('elements.align', context);\n};\n\nModeling.prototype.resizeShape = function (shape, newBounds, minBounds, hints) {\n  var context = {\n    shape: shape,\n    newBounds: newBounds,\n    minBounds: minBounds,\n    hints: hints\n  };\n\n  this._commandStack.execute('shape.resize', context);\n};\n\nModeling.prototype.createSpace = function (movingShapes, resizingShapes, delta, direction, start) {\n  var context = {\n    delta: delta,\n    direction: direction,\n    movingShapes: movingShapes,\n    resizingShapes: resizingShapes,\n    start: start\n  };\n\n  this._commandStack.execute('spaceTool', context);\n};\n\nModeling.prototype.updateWaypoints = function (connection, newWaypoints, hints) {\n  var context = {\n    connection: connection,\n    newWaypoints: newWaypoints,\n    hints: hints || {}\n  };\n\n  this._commandStack.execute('connection.updateWaypoints', context);\n};\n\nModeling.prototype.reconnect = function (connection, source, target, dockingOrPoints, hints) {\n  var context = {\n    connection: connection,\n    newSource: source,\n    newTarget: target,\n    dockingOrPoints: dockingOrPoints,\n    hints: hints || {}\n  };\n\n  this._commandStack.execute('connection.reconnect', context);\n};\n\nModeling.prototype.reconnectStart = function (connection, newSource, dockingOrPoints, hints) {\n  if (!hints) {\n    hints = {};\n  }\n\n  this.reconnect(connection, newSource, connection.target, dockingOrPoints, assign(hints, {\n    docking: 'source'\n  }));\n};\n\nModeling.prototype.reconnectEnd = function (connection, newTarget, dockingOrPoints, hints) {\n  if (!hints) {\n    hints = {};\n  }\n\n  this.reconnect(connection, connection.source, newTarget, dockingOrPoints, assign(hints, {\n    docking: 'target'\n  }));\n};\n\nModeling.prototype.connect = function (source, target, attrs, hints) {\n  return this.createConnection(source, target, attrs || {}, source.parent, hints);\n};\n\nModeling.prototype._create = function (type, attrs) {\n  if (attrs instanceof Base) {\n    return attrs;\n  } else {\n    return this._elementFactory.create(type, attrs);\n  }\n};\n\nModeling.prototype.toggleCollapse = function (shape, hints) {\n  var context = {\n    shape: shape,\n    hints: hints || {}\n  };\n\n  this._commandStack.execute('shape.toggleCollapse', context);\n};","map":{"version":3,"names":["assign","forEach","isArray","Base","AlignElementsHandler","AppendShapeHandler","CreateConnectionHandler","CreateElementsHandler","CreateLabelHandler","CreateShapeHandler","DeleteConnectionHandler","DeleteElementsHandler","DeleteShapeHandler","DistributeElementsHandler","LayoutConnectionHandler","MoveConnectionHandler","MoveElementsHandler","MoveShapeHandler","ReconnectConnectionHandler","ReplaceShapeHandler","ResizeShapeHandler","SpaceToolHandler","ToggleShapeCollapseHandler","UpdateAttachmentHandler","UpdateWaypointsHandler","Modeling","eventBus","elementFactory","commandStack","_eventBus","_elementFactory","_commandStack","self","on","registerHandlers","$inject","prototype","getHandlers","handler","id","registerHandler","moveShape","shape","delta","newParent","newParentIndex","hints","context","execute","updateAttachment","newHost","moveElements","shapes","target","attach","parent","moveConnection","connection","undefined","layoutConnection","createConnection","source","parentIndex","_create","createShape","position","host","createElements","elements","createLabel","labelTarget","label","appendShape","connectionParent","removeElements","distributeElements","groups","axis","dimension","removeShape","removeConnection","replaceShape","oldShape","newShape","newData","alignElements","alignment","resizeShape","newBounds","minBounds","createSpace","movingShapes","resizingShapes","direction","start","updateWaypoints","newWaypoints","reconnect","dockingOrPoints","newSource","newTarget","reconnectStart","docking","reconnectEnd","connect","attrs","type","create","toggleCollapse"],"sources":["E:/Old_PC/Study/Angular/test-bpm/node_modules/diagram-js/lib/features/modeling/Modeling.js"],"sourcesContent":["import {\n  assign,\n  forEach,\n  isArray\n} from 'min-dash';\n\nimport {\n  Base\n} from '../../model';\n\nimport AlignElementsHandler from './cmd/AlignElementsHandler';\nimport AppendShapeHandler from './cmd/AppendShapeHandler';\nimport CreateConnectionHandler from './cmd/CreateConnectionHandler';\nimport CreateElementsHandler from './cmd/CreateElementsHandler';\nimport CreateLabelHandler from './cmd/CreateLabelHandler';\nimport CreateShapeHandler from './cmd/CreateShapeHandler';\nimport DeleteConnectionHandler from './cmd/DeleteConnectionHandler';\nimport DeleteElementsHandler from './cmd/DeleteElementsHandler';\nimport DeleteShapeHandler from './cmd/DeleteShapeHandler';\nimport DistributeElementsHandler from './cmd/DistributeElementsHandler';\nimport LayoutConnectionHandler from './cmd/LayoutConnectionHandler';\nimport MoveConnectionHandler from './cmd/MoveConnectionHandler';\nimport MoveElementsHandler from './cmd/MoveElementsHandler';\nimport MoveShapeHandler from './cmd/MoveShapeHandler';\nimport ReconnectConnectionHandler from './cmd/ReconnectConnectionHandler';\nimport ReplaceShapeHandler from './cmd/ReplaceShapeHandler';\nimport ResizeShapeHandler from './cmd/ResizeShapeHandler';\nimport SpaceToolHandler from './cmd/SpaceToolHandler';\nimport ToggleShapeCollapseHandler from './cmd/ToggleShapeCollapseHandler';\nimport UpdateAttachmentHandler from './cmd/UpdateAttachmentHandler';\nimport UpdateWaypointsHandler from './cmd/UpdateWaypointsHandler';\n\n\n/**\n * The basic modeling entry point.\n *\n * @param {EventBus} eventBus\n * @param {ElementFactory} elementFactory\n * @param {CommandStack} commandStack\n */\nexport default function Modeling(eventBus, elementFactory, commandStack) {\n  this._eventBus = eventBus;\n  this._elementFactory = elementFactory;\n  this._commandStack = commandStack;\n\n  var self = this;\n\n  eventBus.on('diagram.init', function() {\n\n    // register modeling handlers\n    self.registerHandlers(commandStack);\n  });\n}\n\nModeling.$inject = [ 'eventBus', 'elementFactory', 'commandStack' ];\n\n\nModeling.prototype.getHandlers = function() {\n  return {\n    'shape.append': AppendShapeHandler,\n    'shape.create': CreateShapeHandler,\n    'shape.delete': DeleteShapeHandler,\n    'shape.move': MoveShapeHandler,\n    'shape.resize': ResizeShapeHandler,\n    'shape.replace': ReplaceShapeHandler,\n    'shape.toggleCollapse': ToggleShapeCollapseHandler,\n\n    'spaceTool': SpaceToolHandler,\n\n    'label.create': CreateLabelHandler,\n\n    'connection.create': CreateConnectionHandler,\n    'connection.delete': DeleteConnectionHandler,\n    'connection.move': MoveConnectionHandler,\n    'connection.layout': LayoutConnectionHandler,\n\n    'connection.updateWaypoints': UpdateWaypointsHandler,\n\n    'connection.reconnect': ReconnectConnectionHandler,\n\n    'elements.create': CreateElementsHandler,\n    'elements.move': MoveElementsHandler,\n    'elements.delete': DeleteElementsHandler,\n\n    'elements.distribute': DistributeElementsHandler,\n    'elements.align': AlignElementsHandler,\n\n    'element.updateAttachment': UpdateAttachmentHandler\n  };\n};\n\n/**\n * Register handlers with the command stack\n *\n * @param {CommandStack} commandStack\n */\nModeling.prototype.registerHandlers = function(commandStack) {\n  forEach(this.getHandlers(), function(handler, id) {\n    commandStack.registerHandler(id, handler);\n  });\n};\n\n\n// modeling helpers //////////////////////\n\nModeling.prototype.moveShape = function(shape, delta, newParent, newParentIndex, hints) {\n\n  if (typeof newParentIndex === 'object') {\n    hints = newParentIndex;\n    newParentIndex = null;\n  }\n\n  var context = {\n    shape: shape,\n    delta:  delta,\n    newParent: newParent,\n    newParentIndex: newParentIndex,\n    hints: hints || {}\n  };\n\n  this._commandStack.execute('shape.move', context);\n};\n\n\n/**\n * Update the attachment of the given shape.\n *\n * @param {djs.mode.Base} shape\n * @param {djs.model.Base} [newHost]\n */\nModeling.prototype.updateAttachment = function(shape, newHost) {\n  var context = {\n    shape: shape,\n    newHost: newHost\n  };\n\n  this._commandStack.execute('element.updateAttachment', context);\n};\n\n\n/**\n * Move a number of shapes to a new target, either setting it as\n * the new parent or attaching it.\n *\n * @param {Array<djs.mode.Base>} shapes\n * @param {Point} delta\n * @param {djs.model.Base} [target]\n * @param {Object} [hints]\n * @param {boolean} [hints.attach=false]\n */\nModeling.prototype.moveElements = function(shapes, delta, target, hints) {\n\n  hints = hints || {};\n\n  var attach = hints.attach;\n\n  var newParent = target,\n      newHost;\n\n  if (attach === true) {\n    newHost = target;\n    newParent = target.parent;\n  } else\n\n  if (attach === false) {\n    newHost = null;\n  }\n\n  var context = {\n    shapes: shapes,\n    delta: delta,\n    newParent: newParent,\n    newHost: newHost,\n    hints: hints\n  };\n\n  this._commandStack.execute('elements.move', context);\n};\n\n\nModeling.prototype.moveConnection = function(connection, delta, newParent, newParentIndex, hints) {\n\n  if (typeof newParentIndex === 'object') {\n    hints = newParentIndex;\n    newParentIndex = undefined;\n  }\n\n  var context = {\n    connection: connection,\n    delta: delta,\n    newParent: newParent,\n    newParentIndex: newParentIndex,\n    hints: hints || {}\n  };\n\n  this._commandStack.execute('connection.move', context);\n};\n\n\nModeling.prototype.layoutConnection = function(connection, hints) {\n  var context = {\n    connection: connection,\n    hints: hints || {}\n  };\n\n  this._commandStack.execute('connection.layout', context);\n};\n\n\n/**\n * Create connection.\n *\n * @param {djs.model.Base} source\n * @param {djs.model.Base} target\n * @param {number} [parentIndex]\n * @param {Object|djs.model.Connection} connection\n * @param {djs.model.Base} parent\n * @param {Object} hints\n *\n * @return {djs.model.Connection} the created connection.\n */\nModeling.prototype.createConnection = function(source, target, parentIndex, connection, parent, hints) {\n\n  if (typeof parentIndex === 'object') {\n    hints = parent;\n    parent = connection;\n    connection = parentIndex;\n    parentIndex = undefined;\n  }\n\n  connection = this._create('connection', connection);\n\n  var context = {\n    source: source,\n    target: target,\n    parent: parent,\n    parentIndex: parentIndex,\n    connection: connection,\n    hints: hints\n  };\n\n  this._commandStack.execute('connection.create', context);\n\n  return context.connection;\n};\n\n\n/**\n * Create a shape at the specified position.\n *\n * @param {djs.model.Shape|Object} shape\n * @param {Point} position\n * @param {djs.model.Shape|djs.model.Root} target\n * @param {number} [parentIndex] position in parents children list\n * @param {Object} [hints]\n * @param {boolean} [hints.attach] whether to attach to target or become a child\n *\n * @return {djs.model.Shape} the created shape\n */\nModeling.prototype.createShape = function(shape, position, target, parentIndex, hints) {\n\n  if (typeof parentIndex !== 'number') {\n    hints = parentIndex;\n    parentIndex = undefined;\n  }\n\n  hints = hints || {};\n\n  var attach = hints.attach,\n      parent,\n      host;\n\n  shape = this._create('shape', shape);\n\n  if (attach) {\n    parent = target.parent;\n    host = target;\n  } else {\n    parent = target;\n  }\n\n  var context = {\n    position: position,\n    shape: shape,\n    parent: parent,\n    parentIndex: parentIndex,\n    host: host,\n    hints: hints\n  };\n\n  this._commandStack.execute('shape.create', context);\n\n  return context.shape;\n};\n\n\nModeling.prototype.createElements = function(elements, position, parent, parentIndex, hints) {\n  if (!isArray(elements)) {\n    elements = [ elements ];\n  }\n\n  if (typeof parentIndex !== 'number') {\n    hints = parentIndex;\n    parentIndex = undefined;\n  }\n\n  hints = hints || {};\n\n  var context = {\n    position: position,\n    elements: elements,\n    parent: parent,\n    parentIndex: parentIndex,\n    hints: hints\n  };\n\n  this._commandStack.execute('elements.create', context);\n\n  return context.elements;\n};\n\n\nModeling.prototype.createLabel = function(labelTarget, position, label, parent) {\n\n  label = this._create('label', label);\n\n  var context = {\n    labelTarget: labelTarget,\n    position: position,\n    parent: parent || labelTarget.parent,\n    shape: label\n  };\n\n  this._commandStack.execute('label.create', context);\n\n  return context.shape;\n};\n\n\n/**\n * Append shape to given source, drawing a connection\n * between source and the newly created shape.\n *\n * @param {djs.model.Shape} source\n * @param {djs.model.Shape|Object} shape\n * @param {Point} position\n * @param {djs.model.Shape} target\n * @param {Object} [hints]\n * @param {boolean} [hints.attach]\n * @param {djs.model.Connection|Object} [hints.connection]\n * @param {djs.model.Base} [hints.connectionParent]\n *\n * @return {djs.model.Shape} the newly created shape\n */\nModeling.prototype.appendShape = function(source, shape, position, target, hints) {\n\n  hints = hints || {};\n\n  shape = this._create('shape', shape);\n\n  var context = {\n    source: source,\n    position: position,\n    target: target,\n    shape: shape,\n    connection: hints.connection,\n    connectionParent: hints.connectionParent,\n    hints: hints\n  };\n\n  this._commandStack.execute('shape.append', context);\n\n  return context.shape;\n};\n\n\nModeling.prototype.removeElements = function(elements) {\n  var context = {\n    elements: elements\n  };\n\n  this._commandStack.execute('elements.delete', context);\n};\n\n\nModeling.prototype.distributeElements = function(groups, axis, dimension) {\n  var context = {\n    groups: groups,\n    axis: axis,\n    dimension: dimension\n  };\n\n  this._commandStack.execute('elements.distribute', context);\n};\n\n\nModeling.prototype.removeShape = function(shape, hints) {\n  var context = {\n    shape: shape,\n    hints: hints || {}\n  };\n\n  this._commandStack.execute('shape.delete', context);\n};\n\n\nModeling.prototype.removeConnection = function(connection, hints) {\n  var context = {\n    connection: connection,\n    hints: hints || {}\n  };\n\n  this._commandStack.execute('connection.delete', context);\n};\n\nModeling.prototype.replaceShape = function(oldShape, newShape, hints) {\n  var context = {\n    oldShape: oldShape,\n    newData: newShape,\n    hints: hints || {}\n  };\n\n  this._commandStack.execute('shape.replace', context);\n\n  return context.newShape;\n};\n\nModeling.prototype.alignElements = function(elements, alignment) {\n  var context = {\n    elements: elements,\n    alignment: alignment\n  };\n\n  this._commandStack.execute('elements.align', context);\n};\n\nModeling.prototype.resizeShape = function(shape, newBounds, minBounds, hints) {\n  var context = {\n    shape: shape,\n    newBounds: newBounds,\n    minBounds: minBounds,\n    hints: hints\n  };\n\n  this._commandStack.execute('shape.resize', context);\n};\n\nModeling.prototype.createSpace = function(movingShapes, resizingShapes, delta, direction, start) {\n  var context = {\n    delta: delta,\n    direction: direction,\n    movingShapes: movingShapes,\n    resizingShapes: resizingShapes,\n    start: start\n  };\n\n  this._commandStack.execute('spaceTool', context);\n};\n\nModeling.prototype.updateWaypoints = function(connection, newWaypoints, hints) {\n  var context = {\n    connection: connection,\n    newWaypoints: newWaypoints,\n    hints: hints || {}\n  };\n\n  this._commandStack.execute('connection.updateWaypoints', context);\n};\n\nModeling.prototype.reconnect = function(connection, source, target, dockingOrPoints, hints) {\n  var context = {\n    connection: connection,\n    newSource: source,\n    newTarget: target,\n    dockingOrPoints: dockingOrPoints,\n    hints: hints || {}\n  };\n\n  this._commandStack.execute('connection.reconnect', context);\n};\n\nModeling.prototype.reconnectStart = function(connection, newSource, dockingOrPoints, hints) {\n  if (!hints) {\n    hints = {};\n  }\n\n  this.reconnect(connection, newSource, connection.target, dockingOrPoints, assign(hints, {\n    docking: 'source'\n  }));\n};\n\nModeling.prototype.reconnectEnd = function(connection, newTarget, dockingOrPoints, hints) {\n  if (!hints) {\n    hints = {};\n  }\n\n  this.reconnect(connection, connection.source, newTarget, dockingOrPoints, assign(hints, {\n    docking: 'target'\n  }));\n};\n\nModeling.prototype.connect = function(source, target, attrs, hints) {\n  return this.createConnection(source, target, attrs || {}, source.parent, hints);\n};\n\nModeling.prototype._create = function(type, attrs) {\n  if (attrs instanceof Base) {\n    return attrs;\n  } else {\n    return this._elementFactory.create(type, attrs);\n  }\n};\n\nModeling.prototype.toggleCollapse = function(shape, hints) {\n  var context = {\n    shape: shape,\n    hints: hints || {}\n  };\n\n  this._commandStack.execute('shape.toggleCollapse', context);\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}