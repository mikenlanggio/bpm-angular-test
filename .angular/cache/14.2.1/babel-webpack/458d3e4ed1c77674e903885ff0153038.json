{"ast":null,"code":"import inherits from 'inherits-browser';\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\nimport { forEach } from 'min-dash';\nimport { getMid } from 'diagram-js/lib/layout/LayoutUtil';\nimport { selfAndAllChildren } from 'diagram-js/lib/util/Elements';\nimport { isExpanded } from '../../../util/DiUtil';\nexport default function ToggleCollapseConnectionBehaviour(eventBus, modeling) {\n  CommandInterceptor.call(this, eventBus);\n  this.postExecuted('shape.toggleCollapse', 1500, function (context) {\n    // var shape = context.shape;\n    var shape = context.shape; // only change connections when collapsing\n\n    if (isExpanded(shape)) {\n      return;\n    }\n\n    var allChildren = selfAndAllChildren(shape);\n    allChildren.forEach(function (child) {\n      // Ensure that the connection array is not modified during iteration\n      var incomingConnections = child.incoming.slice(),\n          outgoingConnections = child.outgoing.slice();\n      forEach(incomingConnections, function (c) {\n        handleConnection(c, true);\n      });\n      forEach(outgoingConnections, function (c) {\n        handleConnection(c, false);\n      });\n    });\n\n    function handleConnection(c, incoming) {\n      if (allChildren.indexOf(c.source) !== -1 && allChildren.indexOf(c.target) !== -1) {\n        return;\n      }\n\n      if (incoming) {\n        modeling.reconnectEnd(c, shape, getMid(shape));\n      } else {\n        modeling.reconnectStart(c, shape, getMid(shape));\n      }\n    }\n  }, true);\n}\ninherits(ToggleCollapseConnectionBehaviour, CommandInterceptor);\nToggleCollapseConnectionBehaviour.$inject = ['eventBus', 'modeling'];","map":{"version":3,"names":["inherits","CommandInterceptor","forEach","getMid","selfAndAllChildren","isExpanded","ToggleCollapseConnectionBehaviour","eventBus","modeling","call","postExecuted","context","shape","allChildren","child","incomingConnections","incoming","slice","outgoingConnections","outgoing","c","handleConnection","indexOf","source","target","reconnectEnd","reconnectStart","$inject"],"sources":["E:/Old_PC/Study/Angular/test-bpm/node_modules/bpmn-js/lib/features/modeling/behavior/ToggleCollapseConnectionBehaviour.js"],"sourcesContent":["\nimport inherits from 'inherits-browser';\n\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\n\nimport {\n  forEach\n} from 'min-dash';\n\nimport { getMid } from 'diagram-js/lib/layout/LayoutUtil';\nimport { selfAndAllChildren } from 'diagram-js/lib/util/Elements';\n\nimport { isExpanded } from '../../../util/DiUtil';\n\n\nexport default function ToggleCollapseConnectionBehaviour(\n    eventBus, modeling\n) {\n\n  CommandInterceptor.call(this, eventBus);\n\n  this.postExecuted('shape.toggleCollapse', 1500, function(context) {\n\n    // var shape = context.shape;\n    var shape = context.shape;\n\n    // only change connections when collapsing\n    if (isExpanded(shape)) {\n      return;\n    }\n\n    var allChildren = selfAndAllChildren(shape);\n\n    allChildren.forEach(function(child) {\n\n      // Ensure that the connection array is not modified during iteration\n      var incomingConnections = child.incoming.slice(),\n          outgoingConnections = child.outgoing.slice();\n\n      forEach(incomingConnections, function(c) {\n        handleConnection(c, true);\n      });\n\n      forEach(outgoingConnections, function(c) {\n        handleConnection(c, false);\n      });\n    });\n\n\n    function handleConnection(c, incoming) {\n      if (allChildren.indexOf(c.source) !== -1 && allChildren.indexOf(c.target) !== -1) {\n        return;\n      }\n\n      if (incoming) {\n        modeling.reconnectEnd(c, shape, getMid(shape));\n      } else {\n        modeling.reconnectStart(c, shape, getMid(shape));\n      }\n\n    }\n\n  }, true);\n\n}\n\ninherits(ToggleCollapseConnectionBehaviour, CommandInterceptor);\n\nToggleCollapseConnectionBehaviour.$inject = [\n  'eventBus',\n  'modeling',\n];\n\n\n"],"mappings":"AACA,OAAOA,QAAP,MAAqB,kBAArB;AAEA,OAAOC,kBAAP,MAA+B,2CAA/B;AAEA,SACEC,OADF,QAEO,UAFP;AAIA,SAASC,MAAT,QAAuB,kCAAvB;AACA,SAASC,kBAAT,QAAmC,8BAAnC;AAEA,SAASC,UAAT,QAA2B,sBAA3B;AAGA,eAAe,SAASC,iCAAT,CACXC,QADW,EACDC,QADC,EAEb;EAEAP,kBAAkB,CAACQ,IAAnB,CAAwB,IAAxB,EAA8BF,QAA9B;EAEA,KAAKG,YAAL,CAAkB,sBAAlB,EAA0C,IAA1C,EAAgD,UAASC,OAAT,EAAkB;IAEhE;IACA,IAAIC,KAAK,GAAGD,OAAO,CAACC,KAApB,CAHgE,CAKhE;;IACA,IAAIP,UAAU,CAACO,KAAD,CAAd,EAAuB;MACrB;IACD;;IAED,IAAIC,WAAW,GAAGT,kBAAkB,CAACQ,KAAD,CAApC;IAEAC,WAAW,CAACX,OAAZ,CAAoB,UAASY,KAAT,EAAgB;MAElC;MACA,IAAIC,mBAAmB,GAAGD,KAAK,CAACE,QAAN,CAAeC,KAAf,EAA1B;MAAA,IACIC,mBAAmB,GAAGJ,KAAK,CAACK,QAAN,CAAeF,KAAf,EAD1B;MAGAf,OAAO,CAACa,mBAAD,EAAsB,UAASK,CAAT,EAAY;QACvCC,gBAAgB,CAACD,CAAD,EAAI,IAAJ,CAAhB;MACD,CAFM,CAAP;MAIAlB,OAAO,CAACgB,mBAAD,EAAsB,UAASE,CAAT,EAAY;QACvCC,gBAAgB,CAACD,CAAD,EAAI,KAAJ,CAAhB;MACD,CAFM,CAAP;IAGD,CAbD;;IAgBA,SAASC,gBAAT,CAA0BD,CAA1B,EAA6BJ,QAA7B,EAAuC;MACrC,IAAIH,WAAW,CAACS,OAAZ,CAAoBF,CAAC,CAACG,MAAtB,MAAkC,CAAC,CAAnC,IAAwCV,WAAW,CAACS,OAAZ,CAAoBF,CAAC,CAACI,MAAtB,MAAkC,CAAC,CAA/E,EAAkF;QAChF;MACD;;MAED,IAAIR,QAAJ,EAAc;QACZR,QAAQ,CAACiB,YAAT,CAAsBL,CAAtB,EAAyBR,KAAzB,EAAgCT,MAAM,CAACS,KAAD,CAAtC;MACD,CAFD,MAEO;QACLJ,QAAQ,CAACkB,cAAT,CAAwBN,CAAxB,EAA2BR,KAA3B,EAAkCT,MAAM,CAACS,KAAD,CAAxC;MACD;IAEF;EAEF,CAzCD,EAyCG,IAzCH;AA2CD;AAEDZ,QAAQ,CAACM,iCAAD,EAAoCL,kBAApC,CAAR;AAEAK,iCAAiC,CAACqB,OAAlC,GAA4C,CAC1C,UAD0C,EAE1C,UAF0C,CAA5C"},"metadata":{},"sourceType":"module"}