{"ast":null,"code":"import inherits from 'inherits-browser';\nimport OrderingProvider from 'diagram-js/lib/features/ordering/OrderingProvider';\nimport { isAny } from '../modeling/util/ModelingUtil';\nimport { findIndex, find } from 'min-dash';\n/**\n * a simple ordering provider that makes sure:\n *\n * (0) labels and groups are rendered always on top\n * (1) elements are ordered by a {level} property\n */\n\nexport default function BpmnOrderingProvider(eventBus, canvas, translate) {\n  OrderingProvider.call(this, eventBus);\n  var orders = [{\n    type: 'bpmn:SubProcess',\n    order: {\n      level: 6\n    }\n  }, // handle SequenceFlow(s) like message flows and render them always on top\n  {\n    type: 'bpmn:SequenceFlow',\n    order: {\n      level: 9,\n      containers: ['bpmn:Participant', 'bpmn:FlowElementsContainer']\n    }\n  }, // handle DataAssociation(s) like message flows and render them always on top\n  {\n    type: 'bpmn:DataAssociation',\n    order: {\n      level: 9,\n      containers: ['bpmn:Collaboration', 'bpmn:FlowElementsContainer']\n    }\n  }, {\n    type: 'bpmn:MessageFlow',\n    order: {\n      level: 9,\n      containers: ['bpmn:Collaboration']\n    }\n  }, {\n    type: 'bpmn:Association',\n    order: {\n      level: 6,\n      containers: ['bpmn:Participant', 'bpmn:FlowElementsContainer', 'bpmn:Collaboration']\n    }\n  }, {\n    type: 'bpmn:BoundaryEvent',\n    order: {\n      level: 8\n    }\n  }, {\n    type: 'bpmn:Group',\n    order: {\n      level: 10,\n      containers: ['bpmn:Collaboration', 'bpmn:FlowElementsContainer']\n    }\n  }, {\n    type: 'bpmn:FlowElement',\n    order: {\n      level: 5\n    }\n  }, {\n    type: 'bpmn:Participant',\n    order: {\n      level: -2\n    }\n  }, {\n    type: 'bpmn:Lane',\n    order: {\n      level: -1\n    }\n  }];\n\n  function computeOrder(element) {\n    if (element.labelTarget) {\n      return {\n        level: 10\n      };\n    }\n\n    var entry = find(orders, function (o) {\n      return isAny(element, [o.type]);\n    });\n    return entry && entry.order || {\n      level: 1\n    };\n  }\n\n  function getOrder(element) {\n    var order = element.order;\n\n    if (!order) {\n      element.order = order = computeOrder(element);\n    }\n\n    if (!order) {\n      throw new Error('no order for <' + element.id + '>');\n    }\n\n    return order;\n  }\n\n  function findActualParent(element, newParent, containers) {\n    var actualParent = newParent;\n\n    while (actualParent) {\n      if (isAny(actualParent, containers)) {\n        break;\n      }\n\n      actualParent = actualParent.parent;\n    }\n\n    if (!actualParent) {\n      throw new Error('no parent for <' + element.id + '> in <' + (newParent && newParent.id) + '>');\n    }\n\n    return actualParent;\n  }\n\n  this.getOrdering = function (element, newParent) {\n    // render labels always on top\n    if (element.labelTarget) {\n      return {\n        parent: canvas.findRoot(newParent) || canvas.getRootElement(),\n        index: -1\n      };\n    }\n\n    var elementOrder = getOrder(element);\n\n    if (elementOrder.containers) {\n      newParent = findActualParent(element, newParent, elementOrder.containers);\n    }\n\n    var currentIndex = newParent.children.indexOf(element);\n    var insertIndex = findIndex(newParent.children, function (child) {\n      // do not compare with labels, they are created\n      // in the wrong order (right after elements) during import and\n      // mess up the positioning.\n      if (!element.labelTarget && child.labelTarget) {\n        return false;\n      }\n\n      return elementOrder.level < getOrder(child).level;\n    }); // if the element is already in the child list at\n    // a smaller index, we need to adjust the insert index.\n    // this takes into account that the element is being removed\n    // before being re-inserted\n\n    if (insertIndex !== -1) {\n      if (currentIndex !== -1 && currentIndex < insertIndex) {\n        insertIndex -= 1;\n      }\n    }\n\n    return {\n      index: insertIndex,\n      parent: newParent\n    };\n  };\n}\nBpmnOrderingProvider.$inject = ['eventBus', 'canvas', 'translate'];\ninherits(BpmnOrderingProvider, OrderingProvider);","map":{"version":3,"names":["inherits","OrderingProvider","isAny","findIndex","find","BpmnOrderingProvider","eventBus","canvas","translate","call","orders","type","order","level","containers","computeOrder","element","labelTarget","entry","o","getOrder","Error","id","findActualParent","newParent","actualParent","parent","getOrdering","findRoot","getRootElement","index","elementOrder","currentIndex","children","indexOf","insertIndex","child","$inject"],"sources":["E:/Old_PC/Study/Angular/test-bpm/node_modules/bpmn-js/lib/features/ordering/BpmnOrderingProvider.js"],"sourcesContent":["import inherits from 'inherits-browser';\n\nimport OrderingProvider from 'diagram-js/lib/features/ordering/OrderingProvider';\n\nimport {\n  isAny\n} from '../modeling/util/ModelingUtil';\n\nimport {\n  findIndex,\n  find\n} from 'min-dash';\n\n\n/**\n * a simple ordering provider that makes sure:\n *\n * (0) labels and groups are rendered always on top\n * (1) elements are ordered by a {level} property\n */\nexport default function BpmnOrderingProvider(eventBus, canvas, translate) {\n\n  OrderingProvider.call(this, eventBus);\n\n  var orders = [\n    { type: 'bpmn:SubProcess', order: { level: 6 } },\n\n    // handle SequenceFlow(s) like message flows and render them always on top\n    {\n      type: 'bpmn:SequenceFlow',\n      order: {\n        level: 9,\n        containers: [\n          'bpmn:Participant',\n          'bpmn:FlowElementsContainer'\n        ]\n      }\n    },\n\n    // handle DataAssociation(s) like message flows and render them always on top\n    {\n      type: 'bpmn:DataAssociation',\n      order: {\n        level: 9,\n        containers: [\n          'bpmn:Collaboration',\n          'bpmn:FlowElementsContainer'\n        ]\n      }\n    },\n    {\n      type: 'bpmn:MessageFlow', order: {\n        level: 9,\n        containers: [ 'bpmn:Collaboration' ]\n      }\n    },\n    {\n      type: 'bpmn:Association',\n      order: {\n        level: 6,\n        containers: [\n          'bpmn:Participant',\n          'bpmn:FlowElementsContainer',\n          'bpmn:Collaboration'\n        ]\n      }\n    },\n    { type: 'bpmn:BoundaryEvent', order: { level: 8 } },\n    {\n      type: 'bpmn:Group',\n      order: {\n        level: 10,\n        containers: [\n          'bpmn:Collaboration',\n          'bpmn:FlowElementsContainer'\n        ]\n      }\n    },\n    { type: 'bpmn:FlowElement', order: { level: 5 } },\n    { type: 'bpmn:Participant', order: { level: -2 } },\n    { type: 'bpmn:Lane', order: { level: -1 } }\n  ];\n\n  function computeOrder(element) {\n    if (element.labelTarget) {\n      return { level: 10 };\n    }\n\n    var entry = find(orders, function(o) {\n      return isAny(element, [ o.type ]);\n    });\n\n    return entry && entry.order || { level: 1 };\n  }\n\n  function getOrder(element) {\n\n    var order = element.order;\n\n    if (!order) {\n      element.order = order = computeOrder(element);\n    }\n\n    if (!order) {\n      throw new Error('no order for <' + element.id + '>');\n    }\n\n    return order;\n  }\n\n  function findActualParent(element, newParent, containers) {\n\n    var actualParent = newParent;\n\n    while (actualParent) {\n\n      if (isAny(actualParent, containers)) {\n        break;\n      }\n\n      actualParent = actualParent.parent;\n    }\n\n    if (!actualParent) {\n      throw new Error('no parent for <' + element.id + '> in <' + (newParent && newParent.id) + '>');\n    }\n\n    return actualParent;\n  }\n\n  this.getOrdering = function(element, newParent) {\n\n    // render labels always on top\n    if (element.labelTarget) {\n      return {\n        parent: canvas.findRoot(newParent) || canvas.getRootElement(),\n        index: -1\n      };\n    }\n\n    var elementOrder = getOrder(element);\n\n    if (elementOrder.containers) {\n      newParent = findActualParent(element, newParent, elementOrder.containers);\n    }\n\n    var currentIndex = newParent.children.indexOf(element);\n\n    var insertIndex = findIndex(newParent.children, function(child) {\n\n      // do not compare with labels, they are created\n      // in the wrong order (right after elements) during import and\n      // mess up the positioning.\n      if (!element.labelTarget && child.labelTarget) {\n        return false;\n      }\n\n      return elementOrder.level < getOrder(child).level;\n    });\n\n\n    // if the element is already in the child list at\n    // a smaller index, we need to adjust the insert index.\n    // this takes into account that the element is being removed\n    // before being re-inserted\n    if (insertIndex !== -1) {\n      if (currentIndex !== -1 && currentIndex < insertIndex) {\n        insertIndex -= 1;\n      }\n    }\n\n    return {\n      index: insertIndex,\n      parent: newParent\n    };\n  };\n}\n\nBpmnOrderingProvider.$inject = [ 'eventBus', 'canvas', 'translate' ];\n\ninherits(BpmnOrderingProvider, OrderingProvider);"],"mappings":"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"},"metadata":{},"sourceType":"module"}