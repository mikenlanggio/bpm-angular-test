{"ast":null,"code":"import inherits from 'inherits-browser';\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\nimport { is } from '../../../util/ModelUtil';\nexport default function EventBasedGatewayBehavior(eventBus, modeling) {\n  CommandInterceptor.call(this, eventBus);\n  /**\n   * Remove existing sequence flows of event-based target before connecting\n   * from event-based gateway.\n   */\n\n  this.preExecuted('connection.create', function (event) {\n    var context = event.context,\n        source = context.source,\n        target = context.target,\n        existingIncomingConnections = target.incoming.slice();\n\n    if (context.hints && context.hints.createElementsBehavior === false) {\n      return;\n    }\n\n    if (is(source, 'bpmn:EventBasedGateway') && target.incoming.length) {\n      existingIncomingConnections.filter(isSequenceFlow).forEach(function (sequenceFlow) {\n        modeling.removeConnection(sequenceFlow);\n      });\n    }\n  });\n  /**\n   *  After replacing shape with event-based gateway, remove incoming sequence\n   *  flows of event-based targets which do not belong to event-based gateway\n   *  source.\n   */\n\n  this.preExecuted('shape.replace', function (event) {\n    var newShape = event.context.newShape,\n        newShapeTargets,\n        newShapeTargetsIncomingSequenceFlows;\n\n    if (!is(newShape, 'bpmn:EventBasedGateway')) {\n      return;\n    }\n\n    newShapeTargets = newShape.outgoing.filter(isSequenceFlow).map(function (sequenceFlow) {\n      return sequenceFlow.target;\n    });\n    newShapeTargetsIncomingSequenceFlows = newShapeTargets.reduce(function (sequenceFlows, target) {\n      var incomingSequenceFlows = target.incoming.filter(isSequenceFlow);\n      return sequenceFlows.concat(incomingSequenceFlows);\n    }, []);\n    newShapeTargetsIncomingSequenceFlows.forEach(function (sequenceFlow) {\n      if (sequenceFlow.source !== newShape) {\n        modeling.removeConnection(sequenceFlow);\n      }\n    });\n  });\n}\nEventBasedGatewayBehavior.$inject = ['eventBus', 'modeling'];\ninherits(EventBasedGatewayBehavior, CommandInterceptor); // helpers //////////////////////\n\nfunction isSequenceFlow(connection) {\n  return is(connection, 'bpmn:SequenceFlow');\n}","map":{"version":3,"names":["inherits","CommandInterceptor","is","EventBasedGatewayBehavior","eventBus","modeling","call","preExecuted","event","context","source","target","existingIncomingConnections","incoming","slice","hints","createElementsBehavior","length","filter","isSequenceFlow","forEach","sequenceFlow","removeConnection","newShape","newShapeTargets","newShapeTargetsIncomingSequenceFlows","outgoing","map","reduce","sequenceFlows","incomingSequenceFlows","concat","$inject","connection"],"sources":["E:/Old_PC/Study/Angular/test-bpm/node_modules/bpmn-js/lib/features/modeling/behavior/EventBasedGatewayBehavior.js"],"sourcesContent":["import inherits from 'inherits-browser';\n\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\n\nimport { is } from '../../../util/ModelUtil';\n\nexport default function EventBasedGatewayBehavior(eventBus, modeling) {\n\n  CommandInterceptor.call(this, eventBus);\n\n  /**\n   * Remove existing sequence flows of event-based target before connecting\n   * from event-based gateway.\n   */\n  this.preExecuted('connection.create', function(event) {\n\n    var context = event.context,\n        source = context.source,\n        target = context.target,\n        existingIncomingConnections = target.incoming.slice();\n\n    if (context.hints && context.hints.createElementsBehavior === false) {\n      return;\n    }\n\n    if (\n      is(source, 'bpmn:EventBasedGateway') &&\n      target.incoming.length\n    ) {\n\n      existingIncomingConnections.filter(isSequenceFlow)\n        .forEach(function(sequenceFlow) {\n          modeling.removeConnection(sequenceFlow);\n        });\n    }\n  });\n\n  /**\n   *  After replacing shape with event-based gateway, remove incoming sequence\n   *  flows of event-based targets which do not belong to event-based gateway\n   *  source.\n   */\n  this.preExecuted('shape.replace', function(event) {\n\n    var newShape = event.context.newShape,\n        newShapeTargets,\n        newShapeTargetsIncomingSequenceFlows;\n\n    if (!is(newShape, 'bpmn:EventBasedGateway')) {\n      return;\n    }\n\n    newShapeTargets = newShape.outgoing.filter(isSequenceFlow)\n      .map(function(sequenceFlow) {\n        return sequenceFlow.target;\n      });\n\n    newShapeTargetsIncomingSequenceFlows = newShapeTargets.reduce(function(sequenceFlows, target) {\n      var incomingSequenceFlows = target.incoming.filter(isSequenceFlow);\n\n      return sequenceFlows.concat(incomingSequenceFlows);\n    }, []);\n\n    newShapeTargetsIncomingSequenceFlows.forEach(function(sequenceFlow) {\n      if (sequenceFlow.source !== newShape) {\n        modeling.removeConnection(sequenceFlow);\n      }\n    });\n  });\n}\n\nEventBasedGatewayBehavior.$inject = [\n  'eventBus',\n  'modeling'\n];\n\ninherits(EventBasedGatewayBehavior, CommandInterceptor);\n\n\n\n// helpers //////////////////////\n\nfunction isSequenceFlow(connection) {\n  return is(connection, 'bpmn:SequenceFlow');\n}\n"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,kBAArB;AAEA,OAAOC,kBAAP,MAA+B,2CAA/B;AAEA,SAASC,EAAT,QAAmB,yBAAnB;AAEA,eAAe,SAASC,yBAAT,CAAmCC,QAAnC,EAA6CC,QAA7C,EAAuD;EAEpEJ,kBAAkB,CAACK,IAAnB,CAAwB,IAAxB,EAA8BF,QAA9B;EAEA;AACF;AACA;AACA;;EACE,KAAKG,WAAL,CAAiB,mBAAjB,EAAsC,UAASC,KAAT,EAAgB;IAEpD,IAAIC,OAAO,GAAGD,KAAK,CAACC,OAApB;IAAA,IACIC,MAAM,GAAGD,OAAO,CAACC,MADrB;IAAA,IAEIC,MAAM,GAAGF,OAAO,CAACE,MAFrB;IAAA,IAGIC,2BAA2B,GAAGD,MAAM,CAACE,QAAP,CAAgBC,KAAhB,EAHlC;;IAKA,IAAIL,OAAO,CAACM,KAAR,IAAiBN,OAAO,CAACM,KAAR,CAAcC,sBAAd,KAAyC,KAA9D,EAAqE;MACnE;IACD;;IAED,IACEd,EAAE,CAACQ,MAAD,EAAS,wBAAT,CAAF,IACAC,MAAM,CAACE,QAAP,CAAgBI,MAFlB,EAGE;MAEAL,2BAA2B,CAACM,MAA5B,CAAmCC,cAAnC,EACGC,OADH,CACW,UAASC,YAAT,EAAuB;QAC9BhB,QAAQ,CAACiB,gBAAT,CAA0BD,YAA1B;MACD,CAHH;IAID;EACF,CArBD;EAuBA;AACF;AACA;AACA;AACA;;EACE,KAAKd,WAAL,CAAiB,eAAjB,EAAkC,UAASC,KAAT,EAAgB;IAEhD,IAAIe,QAAQ,GAAGf,KAAK,CAACC,OAAN,CAAcc,QAA7B;IAAA,IACIC,eADJ;IAAA,IAEIC,oCAFJ;;IAIA,IAAI,CAACvB,EAAE,CAACqB,QAAD,EAAW,wBAAX,CAAP,EAA6C;MAC3C;IACD;;IAEDC,eAAe,GAAGD,QAAQ,CAACG,QAAT,CAAkBR,MAAlB,CAAyBC,cAAzB,EACfQ,GADe,CACX,UAASN,YAAT,EAAuB;MAC1B,OAAOA,YAAY,CAACV,MAApB;IACD,CAHe,CAAlB;IAKAc,oCAAoC,GAAGD,eAAe,CAACI,MAAhB,CAAuB,UAASC,aAAT,EAAwBlB,MAAxB,EAAgC;MAC5F,IAAImB,qBAAqB,GAAGnB,MAAM,CAACE,QAAP,CAAgBK,MAAhB,CAAuBC,cAAvB,CAA5B;MAEA,OAAOU,aAAa,CAACE,MAAd,CAAqBD,qBAArB,CAAP;IACD,CAJsC,EAIpC,EAJoC,CAAvC;IAMAL,oCAAoC,CAACL,OAArC,CAA6C,UAASC,YAAT,EAAuB;MAClE,IAAIA,YAAY,CAACX,MAAb,KAAwBa,QAA5B,EAAsC;QACpClB,QAAQ,CAACiB,gBAAT,CAA0BD,YAA1B;MACD;IACF,CAJD;EAKD,CA1BD;AA2BD;AAEDlB,yBAAyB,CAAC6B,OAA1B,GAAoC,CAClC,UADkC,EAElC,UAFkC,CAApC;AAKAhC,QAAQ,CAACG,yBAAD,EAA4BF,kBAA5B,CAAR,C,CAIA;;AAEA,SAASkB,cAAT,CAAwBc,UAAxB,EAAoC;EAClC,OAAO/B,EAAE,CAAC+B,UAAD,EAAa,mBAAb,CAAT;AACD"},"metadata":{},"sourceType":"module"}