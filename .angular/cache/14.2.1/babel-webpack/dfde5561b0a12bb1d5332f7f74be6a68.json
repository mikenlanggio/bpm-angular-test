{"ast":null,"code":"import { getNewShapePosition } from '../../auto-place/BpmnAutoPlaceUtil';\nimport { getMid } from 'diagram-js/lib/layout/LayoutUtil';\nimport { is } from '../../../util/ModelUtil';\nvar HIGH_PRIORITY = 2000;\nexport default function GridSnappingAutoPlaceBehavior(eventBus, gridSnapping) {\n  eventBus.on('autoPlace', HIGH_PRIORITY, function (context) {\n    var source = context.source,\n        sourceMid = getMid(source),\n        shape = context.shape;\n    var position = getNewShapePosition(source, shape);\n    ['x', 'y'].forEach(function (axis) {\n      var options = {}; // do not snap if x/y equal\n\n      if (position[axis] === sourceMid[axis]) {\n        return;\n      }\n\n      if (position[axis] > sourceMid[axis]) {\n        options.min = position[axis];\n      } else {\n        options.max = position[axis];\n      }\n\n      if (is(shape, 'bpmn:TextAnnotation')) {\n        if (isHorizontal(axis)) {\n          options.offset = -shape.width / 2;\n        } else {\n          options.offset = -shape.height / 2;\n        }\n      }\n\n      position[axis] = gridSnapping.snapValue(position[axis], options);\n    }); // must be returned to be considered by auto place\n\n    return position;\n  });\n}\nGridSnappingAutoPlaceBehavior.$inject = ['eventBus', 'gridSnapping']; // helpers //////////\n\nfunction isHorizontal(axis) {\n  return axis === 'x';\n}","map":{"version":3,"names":["getNewShapePosition","getMid","is","HIGH_PRIORITY","GridSnappingAutoPlaceBehavior","eventBus","gridSnapping","on","context","source","sourceMid","shape","position","forEach","axis","options","min","max","isHorizontal","offset","width","height","snapValue","$inject"],"sources":["E:/Old_PC/Study/Angular/test-bpm/node_modules/bpmn-js/lib/features/grid-snapping/behavior/GridSnappingAutoPlaceBehavior.js"],"sourcesContent":["import { getNewShapePosition } from '../../auto-place/BpmnAutoPlaceUtil';\r\n\r\nimport { getMid } from 'diagram-js/lib/layout/LayoutUtil';\r\nimport { is } from '../../../util/ModelUtil';\r\n\r\nvar HIGH_PRIORITY = 2000;\r\n\r\n\r\nexport default function GridSnappingAutoPlaceBehavior(eventBus, gridSnapping) {\r\n  eventBus.on('autoPlace', HIGH_PRIORITY, function(context) {\r\n    var source = context.source,\r\n        sourceMid = getMid(source),\r\n        shape = context.shape;\r\n\r\n    var position = getNewShapePosition(source, shape);\r\n\r\n    [ 'x', 'y' ].forEach(function(axis) {\r\n      var options = {};\r\n\r\n      // do not snap if x/y equal\r\n      if (position[ axis ] === sourceMid[ axis ]) {\r\n        return;\r\n      }\r\n\r\n      if (position[ axis ] > sourceMid[ axis ]) {\r\n        options.min = position[ axis ];\r\n      } else {\r\n        options.max = position[ axis ];\r\n      }\r\n\r\n      if (is(shape, 'bpmn:TextAnnotation')) {\r\n\r\n        if (isHorizontal(axis)) {\r\n          options.offset = -shape.width / 2;\r\n        } else {\r\n          options.offset = -shape.height / 2;\r\n        }\r\n\r\n      }\r\n\r\n      position[ axis ] = gridSnapping.snapValue(position[ axis ], options);\r\n\r\n    });\r\n\r\n    // must be returned to be considered by auto place\r\n    return position;\r\n  });\r\n}\r\n\r\nGridSnappingAutoPlaceBehavior.$inject = [\r\n  'eventBus',\r\n  'gridSnapping'\r\n];\r\n\r\n// helpers //////////\r\n\r\nfunction isHorizontal(axis) {\r\n  return axis === 'x';\r\n}"],"mappings":"AAAA,SAASA,mBAAT,QAAoC,oCAApC;AAEA,SAASC,MAAT,QAAuB,kCAAvB;AACA,SAASC,EAAT,QAAmB,yBAAnB;AAEA,IAAIC,aAAa,GAAG,IAApB;AAGA,eAAe,SAASC,6BAAT,CAAuCC,QAAvC,EAAiDC,YAAjD,EAA+D;EAC5ED,QAAQ,CAACE,EAAT,CAAY,WAAZ,EAAyBJ,aAAzB,EAAwC,UAASK,OAAT,EAAkB;IACxD,IAAIC,MAAM,GAAGD,OAAO,CAACC,MAArB;IAAA,IACIC,SAAS,GAAGT,MAAM,CAACQ,MAAD,CADtB;IAAA,IAEIE,KAAK,GAAGH,OAAO,CAACG,KAFpB;IAIA,IAAIC,QAAQ,GAAGZ,mBAAmB,CAACS,MAAD,EAASE,KAAT,CAAlC;IAEA,CAAE,GAAF,EAAO,GAAP,EAAaE,OAAb,CAAqB,UAASC,IAAT,EAAe;MAClC,IAAIC,OAAO,GAAG,EAAd,CADkC,CAGlC;;MACA,IAAIH,QAAQ,CAAEE,IAAF,CAAR,KAAqBJ,SAAS,CAAEI,IAAF,CAAlC,EAA4C;QAC1C;MACD;;MAED,IAAIF,QAAQ,CAAEE,IAAF,CAAR,GAAmBJ,SAAS,CAAEI,IAAF,CAAhC,EAA0C;QACxCC,OAAO,CAACC,GAAR,GAAcJ,QAAQ,CAAEE,IAAF,CAAtB;MACD,CAFD,MAEO;QACLC,OAAO,CAACE,GAAR,GAAcL,QAAQ,CAAEE,IAAF,CAAtB;MACD;;MAED,IAAIZ,EAAE,CAACS,KAAD,EAAQ,qBAAR,CAAN,EAAsC;QAEpC,IAAIO,YAAY,CAACJ,IAAD,CAAhB,EAAwB;UACtBC,OAAO,CAACI,MAAR,GAAiB,CAACR,KAAK,CAACS,KAAP,GAAe,CAAhC;QACD,CAFD,MAEO;UACLL,OAAO,CAACI,MAAR,GAAiB,CAACR,KAAK,CAACU,MAAP,GAAgB,CAAjC;QACD;MAEF;;MAEDT,QAAQ,CAAEE,IAAF,CAAR,GAAmBR,YAAY,CAACgB,SAAb,CAAuBV,QAAQ,CAAEE,IAAF,CAA/B,EAAyCC,OAAzC,CAAnB;IAED,CA1BD,EAPwD,CAmCxD;;IACA,OAAOH,QAAP;EACD,CArCD;AAsCD;AAEDR,6BAA6B,CAACmB,OAA9B,GAAwC,CACtC,UADsC,EAEtC,cAFsC,CAAxC,C,CAKA;;AAEA,SAASL,YAAT,CAAsBJ,IAAtB,EAA4B;EAC1B,OAAOA,IAAI,KAAK,GAAhB;AACD"},"metadata":{},"sourceType":"module"}