{"ast":null,"code":"import { getType as getElementType } from '../../util/Elements';\n/**\n * Adds change support to the diagram, including\n *\n * <ul>\n *   <li>redrawing shapes and connections on change</li>\n * </ul>\n *\n * @param {EventBus} eventBus\n * @param {Canvas} canvas\n * @param {ElementRegistry} elementRegistry\n * @param {GraphicsFactory} graphicsFactory\n */\n\nexport default function ChangeSupport(eventBus, canvas, elementRegistry, graphicsFactory) {\n  // redraw shapes / connections on change\n  eventBus.on('element.changed', function (event) {\n    var element = event.element; // element might have been deleted and replaced by new element with same ID\n    // thus check for parent of element except for root element\n\n    if (element.parent || element === canvas.getRootElement()) {\n      event.gfx = elementRegistry.getGraphics(element);\n    } // shape + gfx may have been deleted\n\n\n    if (!event.gfx) {\n      return;\n    }\n\n    eventBus.fire(getElementType(element) + '.changed', event);\n  });\n  eventBus.on('elements.changed', function (event) {\n    var elements = event.elements;\n    elements.forEach(function (e) {\n      eventBus.fire('element.changed', {\n        element: e\n      });\n    });\n    graphicsFactory.updateContainments(elements);\n  });\n  eventBus.on('shape.changed', function (event) {\n    graphicsFactory.update('shape', event.element, event.gfx);\n  });\n  eventBus.on('connection.changed', function (event) {\n    graphicsFactory.update('connection', event.element, event.gfx);\n  });\n}\nChangeSupport.$inject = ['eventBus', 'canvas', 'elementRegistry', 'graphicsFactory'];","map":{"version":3,"names":["getType","getElementType","ChangeSupport","eventBus","canvas","elementRegistry","graphicsFactory","on","event","element","parent","getRootElement","gfx","getGraphics","fire","elements","forEach","e","updateContainments","update","$inject"],"sources":["E:/Old_PC/Study/Angular/test-bpm/node_modules/diagram-js/lib/features/change-support/ChangeSupport.js"],"sourcesContent":["import {\n  getType as getElementType\n} from '../../util/Elements';\n\n/**\n * Adds change support to the diagram, including\n *\n * <ul>\n *   <li>redrawing shapes and connections on change</li>\n * </ul>\n *\n * @param {EventBus} eventBus\n * @param {Canvas} canvas\n * @param {ElementRegistry} elementRegistry\n * @param {GraphicsFactory} graphicsFactory\n */\nexport default function ChangeSupport(\n    eventBus, canvas, elementRegistry,\n    graphicsFactory) {\n\n\n  // redraw shapes / connections on change\n\n  eventBus.on('element.changed', function(event) {\n\n    var element = event.element;\n\n    // element might have been deleted and replaced by new element with same ID\n    // thus check for parent of element except for root element\n    if (element.parent || element === canvas.getRootElement()) {\n      event.gfx = elementRegistry.getGraphics(element);\n    }\n\n    // shape + gfx may have been deleted\n    if (!event.gfx) {\n      return;\n    }\n\n    eventBus.fire(getElementType(element) + '.changed', event);\n  });\n\n  eventBus.on('elements.changed', function(event) {\n\n    var elements = event.elements;\n\n    elements.forEach(function(e) {\n      eventBus.fire('element.changed', { element: e });\n    });\n\n    graphicsFactory.updateContainments(elements);\n  });\n\n  eventBus.on('shape.changed', function(event) {\n    graphicsFactory.update('shape', event.element, event.gfx);\n  });\n\n  eventBus.on('connection.changed', function(event) {\n    graphicsFactory.update('connection', event.element, event.gfx);\n  });\n}\n\nChangeSupport.$inject = [\n  'eventBus',\n  'canvas',\n  'elementRegistry',\n  'graphicsFactory'\n];"],"mappings":"AAAA,SACEA,OAAO,IAAIC,cADb,QAEO,qBAFP;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,aAAT,CACXC,QADW,EACDC,MADC,EACOC,eADP,EAEXC,eAFW,EAEM;EAGnB;EAEAH,QAAQ,CAACI,EAAT,CAAY,iBAAZ,EAA+B,UAASC,KAAT,EAAgB;IAE7C,IAAIC,OAAO,GAAGD,KAAK,CAACC,OAApB,CAF6C,CAI7C;IACA;;IACA,IAAIA,OAAO,CAACC,MAAR,IAAkBD,OAAO,KAAKL,MAAM,CAACO,cAAP,EAAlC,EAA2D;MACzDH,KAAK,CAACI,GAAN,GAAYP,eAAe,CAACQ,WAAhB,CAA4BJ,OAA5B,CAAZ;IACD,CAR4C,CAU7C;;;IACA,IAAI,CAACD,KAAK,CAACI,GAAX,EAAgB;MACd;IACD;;IAEDT,QAAQ,CAACW,IAAT,CAAcb,cAAc,CAACQ,OAAD,CAAd,GAA0B,UAAxC,EAAoDD,KAApD;EACD,CAhBD;EAkBAL,QAAQ,CAACI,EAAT,CAAY,kBAAZ,EAAgC,UAASC,KAAT,EAAgB;IAE9C,IAAIO,QAAQ,GAAGP,KAAK,CAACO,QAArB;IAEAA,QAAQ,CAACC,OAAT,CAAiB,UAASC,CAAT,EAAY;MAC3Bd,QAAQ,CAACW,IAAT,CAAc,iBAAd,EAAiC;QAAEL,OAAO,EAAEQ;MAAX,CAAjC;IACD,CAFD;IAIAX,eAAe,CAACY,kBAAhB,CAAmCH,QAAnC;EACD,CATD;EAWAZ,QAAQ,CAACI,EAAT,CAAY,eAAZ,EAA6B,UAASC,KAAT,EAAgB;IAC3CF,eAAe,CAACa,MAAhB,CAAuB,OAAvB,EAAgCX,KAAK,CAACC,OAAtC,EAA+CD,KAAK,CAACI,GAArD;EACD,CAFD;EAIAT,QAAQ,CAACI,EAAT,CAAY,oBAAZ,EAAkC,UAASC,KAAT,EAAgB;IAChDF,eAAe,CAACa,MAAhB,CAAuB,YAAvB,EAAqCX,KAAK,CAACC,OAA3C,EAAoDD,KAAK,CAACI,GAA1D;EACD,CAFD;AAGD;AAEDV,aAAa,CAACkB,OAAd,GAAwB,CACtB,UADsB,EAEtB,QAFsB,EAGtB,iBAHsB,EAItB,iBAJsB,CAAxB"},"metadata":{},"sourceType":"module"}