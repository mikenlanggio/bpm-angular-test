{"ast":null,"code":"import { forEach } from 'min-dash';\nimport { snapTo } from './SnapUtil';\n/**\n * A snap context, containing the (possibly incomplete)\n * mappings of drop targets (to identify the snapping)\n * to computed snap points.\n */\n\nexport default function SnapContext() {\n  /**\n   * Map<String, SnapPoints> mapping drop targets to\n   * a list of possible snappings.\n   *\n   * @type {Object}\n   */\n  this._targets = {};\n  /**\n   * Map<String, Point> initial positioning of element\n   * regarding various snap directions.\n   *\n   * @type {Object}\n   */\n\n  this._snapOrigins = {};\n  /**\n   * List of snap locations\n   *\n   * @type {Array<string>}\n   */\n\n  this._snapLocations = [];\n  /**\n   * Map<String, Array<Point>> of default snapping locations\n   *\n   * @type {Object}\n   */\n\n  this._defaultSnaps = {};\n}\n\nSnapContext.prototype.getSnapOrigin = function (snapLocation) {\n  return this._snapOrigins[snapLocation];\n};\n\nSnapContext.prototype.setSnapOrigin = function (snapLocation, initialValue) {\n  this._snapOrigins[snapLocation] = initialValue;\n\n  if (this._snapLocations.indexOf(snapLocation) === -1) {\n    this._snapLocations.push(snapLocation);\n  }\n};\n\nSnapContext.prototype.addDefaultSnap = function (type, point) {\n  var snapValues = this._defaultSnaps[type];\n\n  if (!snapValues) {\n    snapValues = this._defaultSnaps[type] = [];\n  }\n\n  snapValues.push(point);\n};\n/**\n * Return a number of initialized snaps, i.e. snap locations such as\n * top-left, mid, bottom-right and so forth.\n *\n * @return {Array<string>} snapLocations\n */\n\n\nSnapContext.prototype.getSnapLocations = function () {\n  return this._snapLocations;\n};\n/**\n * Set the snap locations for this context.\n *\n * The order of locations determines precedence.\n *\n * @param {Array<string>} snapLocations\n */\n\n\nSnapContext.prototype.setSnapLocations = function (snapLocations) {\n  this._snapLocations = snapLocations;\n};\n/**\n * Get snap points for a given target\n *\n * @param {Element|string} target\n */\n\n\nSnapContext.prototype.pointsForTarget = function (target) {\n  var targetId = target.id || target;\n  var snapPoints = this._targets[targetId];\n\n  if (!snapPoints) {\n    snapPoints = this._targets[targetId] = new SnapPoints();\n    snapPoints.initDefaults(this._defaultSnaps);\n  }\n\n  return snapPoints;\n};\n/**\n * Creates the snap points and initializes them with the\n * given default values.\n *\n * @param {Object<string, Array<Point>>} [defaultPoints]\n */\n\n\nexport function SnapPoints(defaultSnaps) {\n  /**\n   * Map<String, Map<(x|y), Array<number>>> mapping snap locations,\n   * i.e. top-left, bottom-right, center to actual snap values.\n   *\n   * @type {Object}\n   */\n  this._snapValues = {};\n}\n\nSnapPoints.prototype.add = function (snapLocation, point) {\n  var snapValues = this._snapValues[snapLocation];\n\n  if (!snapValues) {\n    snapValues = this._snapValues[snapLocation] = {\n      x: [],\n      y: []\n    };\n  }\n\n  if (snapValues.x.indexOf(point.x) === -1) {\n    snapValues.x.push(point.x);\n  }\n\n  if (snapValues.y.indexOf(point.y) === -1) {\n    snapValues.y.push(point.y);\n  }\n};\n\nSnapPoints.prototype.snap = function (point, snapLocation, axis, tolerance) {\n  var snappingValues = this._snapValues[snapLocation];\n  return snappingValues && snapTo(point[axis], snappingValues[axis], tolerance);\n};\n/**\n * Initialize a number of default snapping points.\n *\n * @param  {Object} defaultSnaps\n */\n\n\nSnapPoints.prototype.initDefaults = function (defaultSnaps) {\n  var self = this;\n  forEach(defaultSnaps || {}, function (snapPoints, snapLocation) {\n    forEach(snapPoints, function (point) {\n      self.add(snapLocation, point);\n    });\n  });\n};","map":{"version":3,"names":["forEach","snapTo","SnapContext","_targets","_snapOrigins","_snapLocations","_defaultSnaps","prototype","getSnapOrigin","snapLocation","setSnapOrigin","initialValue","indexOf","push","addDefaultSnap","type","point","snapValues","getSnapLocations","setSnapLocations","snapLocations","pointsForTarget","target","targetId","id","snapPoints","SnapPoints","initDefaults","defaultSnaps","_snapValues","add","x","y","snap","axis","tolerance","snappingValues","self"],"sources":["E:/Old_PC/Study/Angular/test-bpm/node_modules/diagram-js/lib/features/snapping/SnapContext.js"],"sourcesContent":["import {\n  forEach\n} from 'min-dash';\n\nimport {\n  snapTo\n} from './SnapUtil';\n\n\n/**\n * A snap context, containing the (possibly incomplete)\n * mappings of drop targets (to identify the snapping)\n * to computed snap points.\n */\nexport default function SnapContext() {\n\n  /**\n   * Map<String, SnapPoints> mapping drop targets to\n   * a list of possible snappings.\n   *\n   * @type {Object}\n   */\n  this._targets = {};\n\n  /**\n   * Map<String, Point> initial positioning of element\n   * regarding various snap directions.\n   *\n   * @type {Object}\n   */\n  this._snapOrigins = {};\n\n  /**\n   * List of snap locations\n   *\n   * @type {Array<string>}\n   */\n  this._snapLocations = [];\n\n  /**\n   * Map<String, Array<Point>> of default snapping locations\n   *\n   * @type {Object}\n   */\n  this._defaultSnaps = {};\n}\n\n\nSnapContext.prototype.getSnapOrigin = function(snapLocation) {\n  return this._snapOrigins[snapLocation];\n};\n\n\nSnapContext.prototype.setSnapOrigin = function(snapLocation, initialValue) {\n  this._snapOrigins[snapLocation] = initialValue;\n\n  if (this._snapLocations.indexOf(snapLocation) === -1) {\n    this._snapLocations.push(snapLocation);\n  }\n};\n\n\nSnapContext.prototype.addDefaultSnap = function(type, point) {\n\n  var snapValues = this._defaultSnaps[type];\n\n  if (!snapValues) {\n    snapValues = this._defaultSnaps[type] = [];\n  }\n\n  snapValues.push(point);\n};\n\n/**\n * Return a number of initialized snaps, i.e. snap locations such as\n * top-left, mid, bottom-right and so forth.\n *\n * @return {Array<string>} snapLocations\n */\nSnapContext.prototype.getSnapLocations = function() {\n  return this._snapLocations;\n};\n\n/**\n * Set the snap locations for this context.\n *\n * The order of locations determines precedence.\n *\n * @param {Array<string>} snapLocations\n */\nSnapContext.prototype.setSnapLocations = function(snapLocations) {\n  this._snapLocations = snapLocations;\n};\n\n/**\n * Get snap points for a given target\n *\n * @param {Element|string} target\n */\nSnapContext.prototype.pointsForTarget = function(target) {\n\n  var targetId = target.id || target;\n\n  var snapPoints = this._targets[targetId];\n\n  if (!snapPoints) {\n    snapPoints = this._targets[targetId] = new SnapPoints();\n    snapPoints.initDefaults(this._defaultSnaps);\n  }\n\n  return snapPoints;\n};\n\n\n/**\n * Creates the snap points and initializes them with the\n * given default values.\n *\n * @param {Object<string, Array<Point>>} [defaultPoints]\n */\nexport function SnapPoints(defaultSnaps) {\n\n  /**\n   * Map<String, Map<(x|y), Array<number>>> mapping snap locations,\n   * i.e. top-left, bottom-right, center to actual snap values.\n   *\n   * @type {Object}\n   */\n  this._snapValues = {};\n}\n\nSnapPoints.prototype.add = function(snapLocation, point) {\n\n  var snapValues = this._snapValues[snapLocation];\n\n  if (!snapValues) {\n    snapValues = this._snapValues[snapLocation] = { x: [], y: [] };\n  }\n\n  if (snapValues.x.indexOf(point.x) === -1) {\n    snapValues.x.push(point.x);\n  }\n\n  if (snapValues.y.indexOf(point.y) === -1) {\n    snapValues.y.push(point.y);\n  }\n};\n\n\nSnapPoints.prototype.snap = function(point, snapLocation, axis, tolerance) {\n  var snappingValues = this._snapValues[snapLocation];\n\n  return snappingValues && snapTo(point[axis], snappingValues[axis], tolerance);\n};\n\n/**\n * Initialize a number of default snapping points.\n *\n * @param  {Object} defaultSnaps\n */\nSnapPoints.prototype.initDefaults = function(defaultSnaps) {\n\n  var self = this;\n\n  forEach(defaultSnaps || {}, function(snapPoints, snapLocation) {\n    forEach(snapPoints, function(point) {\n      self.add(snapLocation, point);\n    });\n  });\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}