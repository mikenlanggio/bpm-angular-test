{"ast":null,"code":"import { domify, classes } from 'min-dom';\nimport { find } from 'min-dash';\nimport { escapeHTML } from 'diagram-js/lib/util/EscapeUtil';\nimport { getBusinessObject, is } from '../../util/ModelUtil';\nimport { getPlaneIdFromShape } from '../../util/DrilldownUtil';\nvar OPEN_CLASS = 'bjs-breadcrumbs-shown';\n/**\n * Adds overlays that allow switching planes on collapsed subprocesses.\n *\n * @param {eventBus} eventBus\n * @param {elementRegistry} elementRegistry\n * @param {overlays} overlays\n * @param {canvas} canvas\n */\n\nexport default function DrilldownBreadcrumbs(eventBus, elementRegistry, overlays, canvas) {\n  var breadcrumbs = domify('<ul class=\"bjs-breadcrumbs\"></ul>');\n  var container = canvas.getContainer();\n  var containerClasses = classes(container);\n  container.appendChild(breadcrumbs);\n  var boParents = []; // update breadcrumbs if name or ID of the primary shape changes\n\n  eventBus.on('element.changed', function (e) {\n    var shape = e.element,\n        bo = getBusinessObject(shape);\n    var isPresent = find(boParents, function (el) {\n      return el === bo;\n    });\n\n    if (!isPresent) {\n      return;\n    }\n\n    updateBreadcrumbs();\n  });\n  /**\n   * Updates the displayed breadcrumbs. If no element is provided, only the\n   * labels are updated.\n   *\n   * @param {djs.model.Base} [element]\n   */\n\n  function updateBreadcrumbs(element) {\n    if (element) {\n      boParents = getBoParentChain(element);\n    }\n\n    var path = boParents.map(function (parent) {\n      var title = escapeHTML(parent.name || parent.id);\n      var link = domify('<li><span class=\"bjs-crumb\"><a title=\"' + title + '\">' + title + '</a></span></li>');\n      var parentPlane = canvas.findRoot(getPlaneIdFromShape(parent)) || canvas.findRoot(parent.id); // when the root is a collaboration, the process does not have a corresponding\n      // element in the elementRegisty. Instead, we search for the corresponding participant\n\n      if (!parentPlane && is(parent, 'bpmn:Process')) {\n        var participant = elementRegistry.find(function (element) {\n          var bo = getBusinessObject(element);\n          return bo && bo.processRef && bo.processRef === parent;\n        });\n        parentPlane = canvas.findRoot(participant.id);\n      }\n\n      link.addEventListener('click', function () {\n        canvas.setRootElement(parentPlane);\n      });\n      return link;\n    });\n    breadcrumbs.innerHTML = ''; // show breadcrumbs and expose state to .djs-container\n\n    var visible = path.length > 1;\n    containerClasses.toggle(OPEN_CLASS, visible);\n    path.forEach(function (el) {\n      breadcrumbs.appendChild(el);\n    });\n  }\n\n  eventBus.on('root.set', function (event) {\n    updateBreadcrumbs(event.element);\n  });\n}\nDrilldownBreadcrumbs.$inject = ['eventBus', 'elementRegistry', 'overlays', 'canvas']; // helpers //////////\n\n/**\n * Returns the parents for the element using the business object chain,\n * starting with the root element.\n *\n * @param {djs.model.Shape} child\n *\n * @returns {Array<djs.model.Shape>} parents\n */\n\nfunction getBoParentChain(child) {\n  var bo = getBusinessObject(child);\n  var parents = [];\n\n  for (var element = bo; element; element = element.$parent) {\n    if (is(element, 'bpmn:SubProcess') || is(element, 'bpmn:Process')) {\n      parents.push(element);\n    }\n  }\n\n  return parents.reverse();\n}","map":{"version":3,"names":["domify","classes","find","escapeHTML","getBusinessObject","is","getPlaneIdFromShape","OPEN_CLASS","DrilldownBreadcrumbs","eventBus","elementRegistry","overlays","canvas","breadcrumbs","container","getContainer","containerClasses","appendChild","boParents","on","e","shape","element","bo","isPresent","el","updateBreadcrumbs","getBoParentChain","path","map","parent","title","name","id","link","parentPlane","findRoot","participant","processRef","addEventListener","setRootElement","innerHTML","visible","length","toggle","forEach","event","$inject","child","parents","$parent","push","reverse"],"sources":["E:/Old_PC/Study/Angular/test-bpm/node_modules/bpmn-js/lib/features/drilldown/DrilldownBreadcrumbs.js"],"sourcesContent":["import { domify, classes } from 'min-dom';\nimport { find } from 'min-dash';\n\nimport { escapeHTML } from 'diagram-js/lib/util/EscapeUtil';\nimport { getBusinessObject, is } from '../../util/ModelUtil';\nimport {\n  getPlaneIdFromShape\n} from '../../util/DrilldownUtil';\n\nvar OPEN_CLASS = 'bjs-breadcrumbs-shown';\n\n\n/**\n * Adds overlays that allow switching planes on collapsed subprocesses.\n *\n * @param {eventBus} eventBus\n * @param {elementRegistry} elementRegistry\n * @param {overlays} overlays\n * @param {canvas} canvas\n */\nexport default function DrilldownBreadcrumbs(eventBus, elementRegistry, overlays, canvas) {\n  var breadcrumbs = domify('<ul class=\"bjs-breadcrumbs\"></ul>');\n  var container = canvas.getContainer();\n  var containerClasses = classes(container);\n  container.appendChild(breadcrumbs);\n\n  var boParents = [];\n\n  // update breadcrumbs if name or ID of the primary shape changes\n  eventBus.on('element.changed', function(e) {\n    var shape = e.element,\n        bo = getBusinessObject(shape);\n\n    var isPresent = find(boParents, function(el) {\n      return el === bo;\n    });\n\n    if (!isPresent) {\n      return;\n    }\n\n    updateBreadcrumbs();\n  });\n\n  /**\n   * Updates the displayed breadcrumbs. If no element is provided, only the\n   * labels are updated.\n   *\n   * @param {djs.model.Base} [element]\n   */\n  function updateBreadcrumbs(element) {\n    if (element) {\n      boParents = getBoParentChain(element);\n    }\n\n    var path = boParents.map(function(parent) {\n      var title = escapeHTML(parent.name || parent.id);\n      var link = domify('<li><span class=\"bjs-crumb\"><a title=\"' + title + '\">' + title + '</a></span></li>');\n\n      var parentPlane = canvas.findRoot(getPlaneIdFromShape(parent)) || canvas.findRoot(parent.id);\n\n      // when the root is a collaboration, the process does not have a corresponding\n      // element in the elementRegisty. Instead, we search for the corresponding participant\n      if (!parentPlane && is(parent, 'bpmn:Process')) {\n        var participant = elementRegistry.find(function(element) {\n          var bo = getBusinessObject(element);\n          return bo && bo.processRef && bo.processRef === parent;\n        });\n\n        parentPlane = canvas.findRoot(participant.id);\n      }\n\n      link.addEventListener('click', function() {\n        canvas.setRootElement(parentPlane);\n      });\n\n      return link;\n    });\n\n    breadcrumbs.innerHTML = '';\n\n    // show breadcrumbs and expose state to .djs-container\n    var visible = path.length > 1;\n    containerClasses.toggle(OPEN_CLASS, visible);\n\n    path.forEach(function(el) {\n      breadcrumbs.appendChild(el);\n    });\n  }\n\n  eventBus.on('root.set', function(event) {\n    updateBreadcrumbs(event.element);\n  });\n\n}\n\nDrilldownBreadcrumbs.$inject = [ 'eventBus', 'elementRegistry', 'overlays', 'canvas' ];\n\n\n// helpers //////////\n\n/**\n * Returns the parents for the element using the business object chain,\n * starting with the root element.\n *\n * @param {djs.model.Shape} child\n *\n * @returns {Array<djs.model.Shape>} parents\n */\nfunction getBoParentChain(child) {\n  var bo = getBusinessObject(child);\n\n  var parents = [];\n\n  for (var element = bo; element; element = element.$parent) {\n    if (is(element, 'bpmn:SubProcess') || is(element, 'bpmn:Process')) {\n      parents.push(element);\n    }\n  }\n\n  return parents.reverse();\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}