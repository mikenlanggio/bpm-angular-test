{"ast":null,"code":"import { filterRedundantWaypoints } from '../../layout/LayoutUtil';\nvar round = Math.round;\nvar RECONNECT_START = 'reconnectStart',\n    RECONNECT_END = 'reconnectEnd',\n    UPDATE_WAYPOINTS = 'updateWaypoints';\n/**\n * Move bendpoints through drag and drop to add/remove bendpoints or reconnect connection.\n */\n\nexport default function BendpointMove(injector, eventBus, canvas, dragging, rules, modeling) {\n  this._injector = injector;\n\n  this.start = function (event, connection, bendpointIndex, insert) {\n    var gfx = canvas.getGraphics(connection),\n        source = connection.source,\n        target = connection.target,\n        waypoints = connection.waypoints,\n        type;\n\n    if (!insert && bendpointIndex === 0) {\n      type = RECONNECT_START;\n    } else if (!insert && bendpointIndex === waypoints.length - 1) {\n      type = RECONNECT_END;\n    } else {\n      type = UPDATE_WAYPOINTS;\n    }\n\n    var command = type === UPDATE_WAYPOINTS ? 'connection.updateWaypoints' : 'connection.reconnect';\n    var allowed = rules.allowed(command, {\n      connection: connection,\n      source: source,\n      target: target\n    });\n\n    if (allowed === false) {\n      allowed = rules.allowed(command, {\n        connection: connection,\n        source: target,\n        target: source\n      });\n    }\n\n    if (allowed === false) {\n      return;\n    }\n\n    dragging.init(event, 'bendpoint.move', {\n      data: {\n        connection: connection,\n        connectionGfx: gfx,\n        context: {\n          allowed: allowed,\n          bendpointIndex: bendpointIndex,\n          connection: connection,\n          source: source,\n          target: target,\n          insert: insert,\n          type: type\n        }\n      }\n    });\n  };\n\n  eventBus.on('bendpoint.move.hover', function (event) {\n    var context = event.context,\n        connection = context.connection,\n        source = connection.source,\n        target = connection.target,\n        hover = event.hover,\n        type = context.type; // cache hover state\n\n    context.hover = hover;\n    var allowed;\n\n    if (!hover) {\n      return;\n    }\n\n    var command = type === UPDATE_WAYPOINTS ? 'connection.updateWaypoints' : 'connection.reconnect';\n    allowed = context.allowed = rules.allowed(command, {\n      connection: connection,\n      source: type === RECONNECT_START ? hover : source,\n      target: type === RECONNECT_END ? hover : target\n    });\n\n    if (allowed) {\n      context.source = type === RECONNECT_START ? hover : source;\n      context.target = type === RECONNECT_END ? hover : target;\n      return;\n    }\n\n    if (allowed === false) {\n      allowed = context.allowed = rules.allowed(command, {\n        connection: connection,\n        source: type === RECONNECT_END ? hover : target,\n        target: type === RECONNECT_START ? hover : source\n      });\n    }\n\n    if (allowed) {\n      context.source = type === RECONNECT_END ? hover : target;\n      context.target = type === RECONNECT_START ? hover : source;\n    }\n  });\n  eventBus.on(['bendpoint.move.out', 'bendpoint.move.cleanup'], function (event) {\n    var context = event.context,\n        type = context.type;\n    context.hover = null;\n    context.source = null;\n    context.target = null;\n\n    if (type !== UPDATE_WAYPOINTS) {\n      context.allowed = false;\n    }\n  });\n  eventBus.on('bendpoint.move.end', function (event) {\n    var context = event.context,\n        allowed = context.allowed,\n        bendpointIndex = context.bendpointIndex,\n        connection = context.connection,\n        insert = context.insert,\n        newWaypoints = connection.waypoints.slice(),\n        source = context.source,\n        target = context.target,\n        type = context.type,\n        hints = context.hints || {}; // ensure integer values (important if zoom level was > 1 during move)\n\n    var docking = {\n      x: round(event.x),\n      y: round(event.y)\n    };\n\n    if (!allowed) {\n      return false;\n    }\n\n    if (type === UPDATE_WAYPOINTS) {\n      if (insert) {\n        // insert new bendpoint\n        newWaypoints.splice(bendpointIndex, 0, docking);\n      } else {\n        // swap previous waypoint with moved one\n        newWaypoints[bendpointIndex] = docking;\n      } // pass hints about actual moved bendpoint\n      // useful for connection/label layout\n\n\n      hints.bendpointMove = {\n        insert: insert,\n        bendpointIndex: bendpointIndex\n      };\n      newWaypoints = this.cropWaypoints(connection, newWaypoints);\n      modeling.updateWaypoints(connection, filterRedundantWaypoints(newWaypoints), hints);\n    } else {\n      if (type === RECONNECT_START) {\n        hints.docking = 'source';\n\n        if (isReverse(context)) {\n          hints.docking = 'target';\n          hints.newWaypoints = newWaypoints.reverse();\n        }\n      } else if (type === RECONNECT_END) {\n        hints.docking = 'target';\n\n        if (isReverse(context)) {\n          hints.docking = 'source';\n          hints.newWaypoints = newWaypoints.reverse();\n        }\n      }\n\n      modeling.reconnect(connection, source, target, docking, hints);\n    }\n  }, this);\n}\nBendpointMove.$inject = ['injector', 'eventBus', 'canvas', 'dragging', 'rules', 'modeling'];\n\nBendpointMove.prototype.cropWaypoints = function (connection, newWaypoints) {\n  var connectionDocking = this._injector.get('connectionDocking', false);\n\n  if (!connectionDocking) {\n    return newWaypoints;\n  }\n\n  var waypoints = connection.waypoints;\n  connection.waypoints = newWaypoints;\n  connection.waypoints = connectionDocking.getCroppedWaypoints(connection);\n  newWaypoints = connection.waypoints;\n  connection.waypoints = waypoints;\n  return newWaypoints;\n}; // helpers //////////\n\n\nexport function isReverse(context) {\n  var hover = context.hover,\n      source = context.source,\n      target = context.target,\n      type = context.type;\n\n  if (type === RECONNECT_START) {\n    return hover && target && hover === target && source !== target;\n  }\n\n  if (type === RECONNECT_END) {\n    return hover && source && hover === source && source !== target;\n  }\n}","map":{"version":3,"names":["filterRedundantWaypoints","round","Math","RECONNECT_START","RECONNECT_END","UPDATE_WAYPOINTS","BendpointMove","injector","eventBus","canvas","dragging","rules","modeling","_injector","start","event","connection","bendpointIndex","insert","gfx","getGraphics","source","target","waypoints","type","length","command","allowed","init","data","connectionGfx","context","on","hover","newWaypoints","slice","hints","docking","x","y","splice","bendpointMove","cropWaypoints","updateWaypoints","isReverse","reverse","reconnect","$inject","prototype","connectionDocking","get","getCroppedWaypoints"],"sources":["E:/Old_PC/Study/Angular/test-bpm/node_modules/diagram-js/lib/features/bendpoints/BendpointMove.js"],"sourcesContent":["import { filterRedundantWaypoints } from '../../layout/LayoutUtil';\n\nvar round = Math.round;\n\nvar RECONNECT_START = 'reconnectStart',\n    RECONNECT_END = 'reconnectEnd',\n    UPDATE_WAYPOINTS = 'updateWaypoints';\n\n\n/**\n * Move bendpoints through drag and drop to add/remove bendpoints or reconnect connection.\n */\nexport default function BendpointMove(injector, eventBus, canvas, dragging, rules, modeling) {\n  this._injector = injector;\n\n  this.start = function(event, connection, bendpointIndex, insert) {\n    var gfx = canvas.getGraphics(connection),\n        source = connection.source,\n        target = connection.target,\n        waypoints = connection.waypoints,\n        type;\n\n    if (!insert && bendpointIndex === 0) {\n      type = RECONNECT_START;\n    } else\n    if (!insert && bendpointIndex === waypoints.length - 1) {\n      type = RECONNECT_END;\n    } else {\n      type = UPDATE_WAYPOINTS;\n    }\n\n    var command = type === UPDATE_WAYPOINTS ? 'connection.updateWaypoints' : 'connection.reconnect';\n\n    var allowed = rules.allowed(command, {\n      connection: connection,\n      source: source,\n      target: target\n    });\n\n    if (allowed === false) {\n      allowed = rules.allowed(command, {\n        connection: connection,\n        source: target,\n        target: source\n      });\n    }\n\n    if (allowed === false) {\n      return;\n    }\n\n    dragging.init(event, 'bendpoint.move', {\n      data: {\n        connection: connection,\n        connectionGfx: gfx,\n        context: {\n          allowed: allowed,\n          bendpointIndex: bendpointIndex,\n          connection: connection,\n          source: source,\n          target: target,\n          insert: insert,\n          type: type\n        }\n      }\n    });\n  };\n\n  eventBus.on('bendpoint.move.hover', function(event) {\n    var context = event.context,\n        connection = context.connection,\n        source = connection.source,\n        target = connection.target,\n        hover = event.hover,\n        type = context.type;\n\n    // cache hover state\n    context.hover = hover;\n\n    var allowed;\n\n    if (!hover) {\n      return;\n    }\n\n    var command = type === UPDATE_WAYPOINTS ? 'connection.updateWaypoints' : 'connection.reconnect';\n\n    allowed = context.allowed = rules.allowed(command, {\n      connection: connection,\n      source: type === RECONNECT_START ? hover : source,\n      target: type === RECONNECT_END ? hover : target\n    });\n\n    if (allowed) {\n      context.source = type === RECONNECT_START ? hover : source;\n      context.target = type === RECONNECT_END ? hover : target;\n\n      return;\n    }\n\n    if (allowed === false) {\n      allowed = context.allowed = rules.allowed(command, {\n        connection: connection,\n        source: type === RECONNECT_END ? hover : target,\n        target: type === RECONNECT_START ? hover : source\n      });\n    }\n\n    if (allowed) {\n      context.source = type === RECONNECT_END ? hover : target;\n      context.target = type === RECONNECT_START ? hover : source;\n    }\n  });\n\n  eventBus.on([ 'bendpoint.move.out', 'bendpoint.move.cleanup' ], function(event) {\n    var context = event.context,\n        type = context.type;\n\n    context.hover = null;\n    context.source = null;\n    context.target = null;\n\n    if (type !== UPDATE_WAYPOINTS) {\n      context.allowed = false;\n    }\n  });\n\n  eventBus.on('bendpoint.move.end', function(event) {\n    var context = event.context,\n        allowed = context.allowed,\n        bendpointIndex = context.bendpointIndex,\n        connection = context.connection,\n        insert = context.insert,\n        newWaypoints = connection.waypoints.slice(),\n        source = context.source,\n        target = context.target,\n        type = context.type,\n        hints = context.hints || {};\n\n    // ensure integer values (important if zoom level was > 1 during move)\n    var docking = {\n      x: round(event.x),\n      y: round(event.y)\n    };\n\n    if (!allowed) {\n      return false;\n    }\n\n    if (type === UPDATE_WAYPOINTS) {\n      if (insert) {\n\n        // insert new bendpoint\n        newWaypoints.splice(bendpointIndex, 0, docking);\n      } else {\n\n        // swap previous waypoint with moved one\n        newWaypoints[bendpointIndex] = docking;\n      }\n\n      // pass hints about actual moved bendpoint\n      // useful for connection/label layout\n      hints.bendpointMove = {\n        insert: insert,\n        bendpointIndex: bendpointIndex\n      };\n\n      newWaypoints = this.cropWaypoints(connection, newWaypoints);\n\n      modeling.updateWaypoints(connection, filterRedundantWaypoints(newWaypoints), hints);\n    } else {\n      if (type === RECONNECT_START) {\n        hints.docking = 'source';\n\n        if (isReverse(context)) {\n          hints.docking = 'target';\n\n          hints.newWaypoints = newWaypoints.reverse();\n        }\n      } else if (type === RECONNECT_END) {\n        hints.docking = 'target';\n\n        if (isReverse(context)) {\n          hints.docking = 'source';\n\n          hints.newWaypoints = newWaypoints.reverse();\n        }\n      }\n\n      modeling.reconnect(connection, source, target, docking, hints);\n    }\n  }, this);\n}\n\nBendpointMove.$inject = [\n  'injector',\n  'eventBus',\n  'canvas',\n  'dragging',\n  'rules',\n  'modeling'\n];\n\nBendpointMove.prototype.cropWaypoints = function(connection, newWaypoints) {\n  var connectionDocking = this._injector.get('connectionDocking', false);\n\n  if (!connectionDocking) {\n    return newWaypoints;\n  }\n\n  var waypoints = connection.waypoints;\n\n  connection.waypoints = newWaypoints;\n\n  connection.waypoints = connectionDocking.getCroppedWaypoints(connection);\n\n  newWaypoints = connection.waypoints;\n\n  connection.waypoints = waypoints;\n\n  return newWaypoints;\n};\n\n\n// helpers //////////\n\nexport function isReverse(context) {\n  var hover = context.hover,\n      source = context.source,\n      target = context.target,\n      type = context.type;\n\n  if (type === RECONNECT_START) {\n    return hover && target && hover === target && source !== target;\n  }\n\n  if (type === RECONNECT_END) {\n    return hover && source && hover === source && source !== target;\n  }\n}"],"mappings":"AAAA,SAASA,wBAAT,QAAyC,yBAAzC;AAEA,IAAIC,KAAK,GAAGC,IAAI,CAACD,KAAjB;AAEA,IAAIE,eAAe,GAAG,gBAAtB;AAAA,IACIC,aAAa,GAAG,cADpB;AAAA,IAEIC,gBAAgB,GAAG,iBAFvB;AAKA;AACA;AACA;;AACA,eAAe,SAASC,aAAT,CAAuBC,QAAvB,EAAiCC,QAAjC,EAA2CC,MAA3C,EAAmDC,QAAnD,EAA6DC,KAA7D,EAAoEC,QAApE,EAA8E;EAC3F,KAAKC,SAAL,GAAiBN,QAAjB;;EAEA,KAAKO,KAAL,GAAa,UAASC,KAAT,EAAgBC,UAAhB,EAA4BC,cAA5B,EAA4CC,MAA5C,EAAoD;IAC/D,IAAIC,GAAG,GAAGV,MAAM,CAACW,WAAP,CAAmBJ,UAAnB,CAAV;IAAA,IACIK,MAAM,GAAGL,UAAU,CAACK,MADxB;IAAA,IAEIC,MAAM,GAAGN,UAAU,CAACM,MAFxB;IAAA,IAGIC,SAAS,GAAGP,UAAU,CAACO,SAH3B;IAAA,IAIIC,IAJJ;;IAMA,IAAI,CAACN,MAAD,IAAWD,cAAc,KAAK,CAAlC,EAAqC;MACnCO,IAAI,GAAGrB,eAAP;IACD,CAFD,MAGA,IAAI,CAACe,MAAD,IAAWD,cAAc,KAAKM,SAAS,CAACE,MAAV,GAAmB,CAArD,EAAwD;MACtDD,IAAI,GAAGpB,aAAP;IACD,CAFD,MAEO;MACLoB,IAAI,GAAGnB,gBAAP;IACD;;IAED,IAAIqB,OAAO,GAAGF,IAAI,KAAKnB,gBAAT,GAA4B,4BAA5B,GAA2D,sBAAzE;IAEA,IAAIsB,OAAO,GAAGhB,KAAK,CAACgB,OAAN,CAAcD,OAAd,EAAuB;MACnCV,UAAU,EAAEA,UADuB;MAEnCK,MAAM,EAAEA,MAF2B;MAGnCC,MAAM,EAAEA;IAH2B,CAAvB,CAAd;;IAMA,IAAIK,OAAO,KAAK,KAAhB,EAAuB;MACrBA,OAAO,GAAGhB,KAAK,CAACgB,OAAN,CAAcD,OAAd,EAAuB;QAC/BV,UAAU,EAAEA,UADmB;QAE/BK,MAAM,EAAEC,MAFuB;QAG/BA,MAAM,EAAED;MAHuB,CAAvB,CAAV;IAKD;;IAED,IAAIM,OAAO,KAAK,KAAhB,EAAuB;MACrB;IACD;;IAEDjB,QAAQ,CAACkB,IAAT,CAAcb,KAAd,EAAqB,gBAArB,EAAuC;MACrCc,IAAI,EAAE;QACJb,UAAU,EAAEA,UADR;QAEJc,aAAa,EAAEX,GAFX;QAGJY,OAAO,EAAE;UACPJ,OAAO,EAAEA,OADF;UAEPV,cAAc,EAAEA,cAFT;UAGPD,UAAU,EAAEA,UAHL;UAIPK,MAAM,EAAEA,MAJD;UAKPC,MAAM,EAAEA,MALD;UAMPJ,MAAM,EAAEA,MAND;UAOPM,IAAI,EAAEA;QAPC;MAHL;IAD+B,CAAvC;EAeD,CAnDD;;EAqDAhB,QAAQ,CAACwB,EAAT,CAAY,sBAAZ,EAAoC,UAASjB,KAAT,EAAgB;IAClD,IAAIgB,OAAO,GAAGhB,KAAK,CAACgB,OAApB;IAAA,IACIf,UAAU,GAAGe,OAAO,CAACf,UADzB;IAAA,IAEIK,MAAM,GAAGL,UAAU,CAACK,MAFxB;IAAA,IAGIC,MAAM,GAAGN,UAAU,CAACM,MAHxB;IAAA,IAIIW,KAAK,GAAGlB,KAAK,CAACkB,KAJlB;IAAA,IAKIT,IAAI,GAAGO,OAAO,CAACP,IALnB,CADkD,CAQlD;;IACAO,OAAO,CAACE,KAAR,GAAgBA,KAAhB;IAEA,IAAIN,OAAJ;;IAEA,IAAI,CAACM,KAAL,EAAY;MACV;IACD;;IAED,IAAIP,OAAO,GAAGF,IAAI,KAAKnB,gBAAT,GAA4B,4BAA5B,GAA2D,sBAAzE;IAEAsB,OAAO,GAAGI,OAAO,CAACJ,OAAR,GAAkBhB,KAAK,CAACgB,OAAN,CAAcD,OAAd,EAAuB;MACjDV,UAAU,EAAEA,UADqC;MAEjDK,MAAM,EAAEG,IAAI,KAAKrB,eAAT,GAA2B8B,KAA3B,GAAmCZ,MAFM;MAGjDC,MAAM,EAAEE,IAAI,KAAKpB,aAAT,GAAyB6B,KAAzB,GAAiCX;IAHQ,CAAvB,CAA5B;;IAMA,IAAIK,OAAJ,EAAa;MACXI,OAAO,CAACV,MAAR,GAAiBG,IAAI,KAAKrB,eAAT,GAA2B8B,KAA3B,GAAmCZ,MAApD;MACAU,OAAO,CAACT,MAAR,GAAiBE,IAAI,KAAKpB,aAAT,GAAyB6B,KAAzB,GAAiCX,MAAlD;MAEA;IACD;;IAED,IAAIK,OAAO,KAAK,KAAhB,EAAuB;MACrBA,OAAO,GAAGI,OAAO,CAACJ,OAAR,GAAkBhB,KAAK,CAACgB,OAAN,CAAcD,OAAd,EAAuB;QACjDV,UAAU,EAAEA,UADqC;QAEjDK,MAAM,EAAEG,IAAI,KAAKpB,aAAT,GAAyB6B,KAAzB,GAAiCX,MAFQ;QAGjDA,MAAM,EAAEE,IAAI,KAAKrB,eAAT,GAA2B8B,KAA3B,GAAmCZ;MAHM,CAAvB,CAA5B;IAKD;;IAED,IAAIM,OAAJ,EAAa;MACXI,OAAO,CAACV,MAAR,GAAiBG,IAAI,KAAKpB,aAAT,GAAyB6B,KAAzB,GAAiCX,MAAlD;MACAS,OAAO,CAACT,MAAR,GAAiBE,IAAI,KAAKrB,eAAT,GAA2B8B,KAA3B,GAAmCZ,MAApD;IACD;EACF,CA5CD;EA8CAb,QAAQ,CAACwB,EAAT,CAAY,CAAE,oBAAF,EAAwB,wBAAxB,CAAZ,EAAgE,UAASjB,KAAT,EAAgB;IAC9E,IAAIgB,OAAO,GAAGhB,KAAK,CAACgB,OAApB;IAAA,IACIP,IAAI,GAAGO,OAAO,CAACP,IADnB;IAGAO,OAAO,CAACE,KAAR,GAAgB,IAAhB;IACAF,OAAO,CAACV,MAAR,GAAiB,IAAjB;IACAU,OAAO,CAACT,MAAR,GAAiB,IAAjB;;IAEA,IAAIE,IAAI,KAAKnB,gBAAb,EAA+B;MAC7B0B,OAAO,CAACJ,OAAR,GAAkB,KAAlB;IACD;EACF,CAXD;EAaAnB,QAAQ,CAACwB,EAAT,CAAY,oBAAZ,EAAkC,UAASjB,KAAT,EAAgB;IAChD,IAAIgB,OAAO,GAAGhB,KAAK,CAACgB,OAApB;IAAA,IACIJ,OAAO,GAAGI,OAAO,CAACJ,OADtB;IAAA,IAEIV,cAAc,GAAGc,OAAO,CAACd,cAF7B;IAAA,IAGID,UAAU,GAAGe,OAAO,CAACf,UAHzB;IAAA,IAIIE,MAAM,GAAGa,OAAO,CAACb,MAJrB;IAAA,IAKIgB,YAAY,GAAGlB,UAAU,CAACO,SAAX,CAAqBY,KAArB,EALnB;IAAA,IAMId,MAAM,GAAGU,OAAO,CAACV,MANrB;IAAA,IAOIC,MAAM,GAAGS,OAAO,CAACT,MAPrB;IAAA,IAQIE,IAAI,GAAGO,OAAO,CAACP,IARnB;IAAA,IASIY,KAAK,GAAGL,OAAO,CAACK,KAAR,IAAiB,EAT7B,CADgD,CAYhD;;IACA,IAAIC,OAAO,GAAG;MACZC,CAAC,EAAErC,KAAK,CAACc,KAAK,CAACuB,CAAP,CADI;MAEZC,CAAC,EAAEtC,KAAK,CAACc,KAAK,CAACwB,CAAP;IAFI,CAAd;;IAKA,IAAI,CAACZ,OAAL,EAAc;MACZ,OAAO,KAAP;IACD;;IAED,IAAIH,IAAI,KAAKnB,gBAAb,EAA+B;MAC7B,IAAIa,MAAJ,EAAY;QAEV;QACAgB,YAAY,CAACM,MAAb,CAAoBvB,cAApB,EAAoC,CAApC,EAAuCoB,OAAvC;MACD,CAJD,MAIO;QAEL;QACAH,YAAY,CAACjB,cAAD,CAAZ,GAA+BoB,OAA/B;MACD,CAT4B,CAW7B;MACA;;;MACAD,KAAK,CAACK,aAAN,GAAsB;QACpBvB,MAAM,EAAEA,MADY;QAEpBD,cAAc,EAAEA;MAFI,CAAtB;MAKAiB,YAAY,GAAG,KAAKQ,aAAL,CAAmB1B,UAAnB,EAA+BkB,YAA/B,CAAf;MAEAtB,QAAQ,CAAC+B,eAAT,CAAyB3B,UAAzB,EAAqChB,wBAAwB,CAACkC,YAAD,CAA7D,EAA6EE,KAA7E;IACD,CArBD,MAqBO;MACL,IAAIZ,IAAI,KAAKrB,eAAb,EAA8B;QAC5BiC,KAAK,CAACC,OAAN,GAAgB,QAAhB;;QAEA,IAAIO,SAAS,CAACb,OAAD,CAAb,EAAwB;UACtBK,KAAK,CAACC,OAAN,GAAgB,QAAhB;UAEAD,KAAK,CAACF,YAAN,GAAqBA,YAAY,CAACW,OAAb,EAArB;QACD;MACF,CARD,MAQO,IAAIrB,IAAI,KAAKpB,aAAb,EAA4B;QACjCgC,KAAK,CAACC,OAAN,GAAgB,QAAhB;;QAEA,IAAIO,SAAS,CAACb,OAAD,CAAb,EAAwB;UACtBK,KAAK,CAACC,OAAN,GAAgB,QAAhB;UAEAD,KAAK,CAACF,YAAN,GAAqBA,YAAY,CAACW,OAAb,EAArB;QACD;MACF;;MAEDjC,QAAQ,CAACkC,SAAT,CAAmB9B,UAAnB,EAA+BK,MAA/B,EAAuCC,MAAvC,EAA+Ce,OAA/C,EAAwDD,KAAxD;IACD;EACF,CAhED,EAgEG,IAhEH;AAiED;AAED9B,aAAa,CAACyC,OAAd,GAAwB,CACtB,UADsB,EAEtB,UAFsB,EAGtB,QAHsB,EAItB,UAJsB,EAKtB,OALsB,EAMtB,UANsB,CAAxB;;AASAzC,aAAa,CAAC0C,SAAd,CAAwBN,aAAxB,GAAwC,UAAS1B,UAAT,EAAqBkB,YAArB,EAAmC;EACzE,IAAIe,iBAAiB,GAAG,KAAKpC,SAAL,CAAeqC,GAAf,CAAmB,mBAAnB,EAAwC,KAAxC,CAAxB;;EAEA,IAAI,CAACD,iBAAL,EAAwB;IACtB,OAAOf,YAAP;EACD;;EAED,IAAIX,SAAS,GAAGP,UAAU,CAACO,SAA3B;EAEAP,UAAU,CAACO,SAAX,GAAuBW,YAAvB;EAEAlB,UAAU,CAACO,SAAX,GAAuB0B,iBAAiB,CAACE,mBAAlB,CAAsCnC,UAAtC,CAAvB;EAEAkB,YAAY,GAAGlB,UAAU,CAACO,SAA1B;EAEAP,UAAU,CAACO,SAAX,GAAuBA,SAAvB;EAEA,OAAOW,YAAP;AACD,CAlBD,C,CAqBA;;;AAEA,OAAO,SAASU,SAAT,CAAmBb,OAAnB,EAA4B;EACjC,IAAIE,KAAK,GAAGF,OAAO,CAACE,KAApB;EAAA,IACIZ,MAAM,GAAGU,OAAO,CAACV,MADrB;EAAA,IAEIC,MAAM,GAAGS,OAAO,CAACT,MAFrB;EAAA,IAGIE,IAAI,GAAGO,OAAO,CAACP,IAHnB;;EAKA,IAAIA,IAAI,KAAKrB,eAAb,EAA8B;IAC5B,OAAO8B,KAAK,IAAIX,MAAT,IAAmBW,KAAK,KAAKX,MAA7B,IAAuCD,MAAM,KAAKC,MAAzD;EACD;;EAED,IAAIE,IAAI,KAAKpB,aAAb,EAA4B;IAC1B,OAAO6B,KAAK,IAAIZ,MAAT,IAAmBY,KAAK,KAAKZ,MAA7B,IAAuCA,MAAM,KAAKC,MAAzD;EACD;AACF"},"metadata":{},"sourceType":"module"}