{"ast":null,"code":"import { assign } from 'min-dash';\nimport { toPoint } from '../../util/Event';\n/**\n * Initiates canvas scrolling if current cursor point is close to a border.\n * Cancelled when current point moves back inside the scrolling borders\n * or cancelled manually.\n *\n * Default options :\n *   scrollThresholdIn: [ 20, 20, 20, 20 ],\n *   scrollThresholdOut: [ 0, 0, 0, 0 ],\n *   scrollRepeatTimeout: 15,\n *   scrollStep: 10\n *\n * Threshold order:\n *   [ left, top, right, bottom ]\n */\n\nexport default function AutoScroll(config, eventBus, canvas) {\n  this._canvas = canvas;\n  this._opts = assign({\n    scrollThresholdIn: [20, 20, 20, 20],\n    scrollThresholdOut: [0, 0, 0, 0],\n    scrollRepeatTimeout: 15,\n    scrollStep: 10\n  }, config);\n  var self = this;\n  eventBus.on('drag.move', function (e) {\n    var point = self._toBorderPoint(e);\n\n    self.startScroll(point);\n  });\n  eventBus.on(['drag.cleanup'], function () {\n    self.stopScroll();\n  });\n}\nAutoScroll.$inject = ['config.autoScroll', 'eventBus', 'canvas'];\n/**\n * Starts scrolling loop.\n * Point is given in global scale in canvas container box plane.\n *\n * @param  {Object} point { x: X, y: Y }\n */\n\nAutoScroll.prototype.startScroll = function (point) {\n  var canvas = this._canvas;\n  var opts = this._opts;\n  var self = this;\n  var clientRect = canvas.getContainer().getBoundingClientRect();\n  var diff = [point.x, point.y, clientRect.width - point.x, clientRect.height - point.y];\n  this.stopScroll();\n  var dx = 0,\n      dy = 0;\n\n  for (var i = 0; i < 4; i++) {\n    if (between(diff[i], opts.scrollThresholdOut[i], opts.scrollThresholdIn[i])) {\n      if (i === 0) {\n        dx = opts.scrollStep;\n      } else if (i == 1) {\n        dy = opts.scrollStep;\n      } else if (i == 2) {\n        dx = -opts.scrollStep;\n      } else if (i == 3) {\n        dy = -opts.scrollStep;\n      }\n    }\n  }\n\n  if (dx !== 0 || dy !== 0) {\n    canvas.scroll({\n      dx: dx,\n      dy: dy\n    });\n    this._scrolling = setTimeout(function () {\n      self.startScroll(point);\n    }, opts.scrollRepeatTimeout);\n  }\n};\n\nfunction between(val, start, end) {\n  if (start < val && val < end) {\n    return true;\n  }\n\n  return false;\n}\n/**\n * Stops scrolling loop.\n */\n\n\nAutoScroll.prototype.stopScroll = function () {\n  clearTimeout(this._scrolling);\n};\n/**\n * Overrides defaults options.\n *\n * @param  {Object} options\n */\n\n\nAutoScroll.prototype.setOptions = function (options) {\n  this._opts = assign({}, this._opts, options);\n};\n/**\n * Converts event to a point in canvas container plane in global scale.\n *\n * @param  {Event} event\n * @return {Point}\n */\n\n\nAutoScroll.prototype._toBorderPoint = function (event) {\n  var clientRect = this._canvas._container.getBoundingClientRect();\n\n  var globalPosition = toPoint(event.originalEvent);\n  return {\n    x: globalPosition.x - clientRect.left,\n    y: globalPosition.y - clientRect.top\n  };\n};","map":{"version":3,"names":["assign","toPoint","AutoScroll","config","eventBus","canvas","_canvas","_opts","scrollThresholdIn","scrollThresholdOut","scrollRepeatTimeout","scrollStep","self","on","e","point","_toBorderPoint","startScroll","stopScroll","$inject","prototype","opts","clientRect","getContainer","getBoundingClientRect","diff","x","y","width","height","dx","dy","i","between","scroll","_scrolling","setTimeout","val","start","end","clearTimeout","setOptions","options","event","_container","globalPosition","originalEvent","left","top"],"sources":["E:/Old_PC/Study/Angular/test-bpm/node_modules/diagram-js/lib/features/auto-scroll/AutoScroll.js"],"sourcesContent":["import { assign } from 'min-dash';\n\nimport {\n  toPoint\n} from '../../util/Event';\n\n\n/**\n * Initiates canvas scrolling if current cursor point is close to a border.\n * Cancelled when current point moves back inside the scrolling borders\n * or cancelled manually.\n *\n * Default options :\n *   scrollThresholdIn: [ 20, 20, 20, 20 ],\n *   scrollThresholdOut: [ 0, 0, 0, 0 ],\n *   scrollRepeatTimeout: 15,\n *   scrollStep: 10\n *\n * Threshold order:\n *   [ left, top, right, bottom ]\n */\nexport default function AutoScroll(config, eventBus, canvas) {\n\n  this._canvas = canvas;\n\n  this._opts = assign({\n    scrollThresholdIn: [ 20, 20, 20, 20 ],\n    scrollThresholdOut: [ 0, 0, 0, 0 ],\n    scrollRepeatTimeout: 15,\n    scrollStep: 10\n  }, config);\n\n  var self = this;\n\n  eventBus.on('drag.move', function(e) {\n    var point = self._toBorderPoint(e);\n\n    self.startScroll(point);\n  });\n\n  eventBus.on([ 'drag.cleanup' ], function() {\n    self.stopScroll();\n  });\n}\n\nAutoScroll.$inject = [\n  'config.autoScroll',\n  'eventBus',\n  'canvas'\n];\n\n\n/**\n * Starts scrolling loop.\n * Point is given in global scale in canvas container box plane.\n *\n * @param  {Object} point { x: X, y: Y }\n */\nAutoScroll.prototype.startScroll = function(point) {\n\n  var canvas = this._canvas;\n  var opts = this._opts;\n  var self = this;\n\n  var clientRect = canvas.getContainer().getBoundingClientRect();\n\n  var diff = [\n    point.x,\n    point.y,\n    clientRect.width - point.x,\n    clientRect.height - point.y\n  ];\n\n  this.stopScroll();\n\n  var dx = 0,\n      dy = 0;\n\n  for (var i = 0; i < 4; i++) {\n    if (between(diff[i], opts.scrollThresholdOut[i], opts.scrollThresholdIn[i])) {\n      if (i === 0) {\n        dx = opts.scrollStep;\n      } else if (i == 1) {\n        dy = opts.scrollStep;\n      } else if (i == 2) {\n        dx = -opts.scrollStep;\n      } else if (i == 3) {\n        dy = -opts.scrollStep;\n      }\n    }\n  }\n\n  if (dx !== 0 || dy !== 0) {\n    canvas.scroll({ dx: dx, dy: dy });\n\n    this._scrolling = setTimeout(function() {\n      self.startScroll(point);\n    }, opts.scrollRepeatTimeout);\n  }\n};\n\nfunction between(val, start, end) {\n  if (start < val && val < end) {\n    return true;\n  }\n\n  return false;\n}\n\n\n/**\n * Stops scrolling loop.\n */\nAutoScroll.prototype.stopScroll = function() {\n  clearTimeout(this._scrolling);\n};\n\n\n/**\n * Overrides defaults options.\n *\n * @param  {Object} options\n */\nAutoScroll.prototype.setOptions = function(options) {\n  this._opts = assign({}, this._opts, options);\n};\n\n\n/**\n * Converts event to a point in canvas container plane in global scale.\n *\n * @param  {Event} event\n * @return {Point}\n */\nAutoScroll.prototype._toBorderPoint = function(event) {\n  var clientRect = this._canvas._container.getBoundingClientRect();\n\n  var globalPosition = toPoint(event.originalEvent);\n\n  return {\n    x: globalPosition.x - clientRect.left,\n    y: globalPosition.y - clientRect.top\n  };\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}