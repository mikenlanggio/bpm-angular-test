{"ast":null,"code":"import { flatten, filter, forEach, groupBy, map, unionBy } from 'min-dash';\nimport { saveClear } from '../../util/Removal';\nimport { getNewAttachShapeDelta } from '../../util/AttachUtil';\nimport inherits from 'inherits-browser';\nimport CommandInterceptor from '../../command/CommandInterceptor';\nvar LOW_PRIORITY = 251,\n    HIGH_PRIORITY = 1401;\nvar MARKER_ATTACH = 'attach-ok';\n/**\n * Adds the notion of attached elements to the modeler.\n *\n * Optionally depends on `diagram-js/lib/features/move` to render\n * the attached elements during move preview.\n *\n * Optionally depends on `diagram-js/lib/features/label-support`\n * to render attached labels during move preview.\n *\n * @param {didi.Injector} injector\n * @param {EventBus} eventBus\n * @param {Canvas} canvas\n * @param {Rules} rules\n * @param {Modeling} modeling\n */\n\nexport default function AttachSupport(injector, eventBus, canvas, rules, modeling) {\n  CommandInterceptor.call(this, eventBus);\n  var movePreview = injector.get('movePreview', false); // remove all the attached elements from the shapes to be validated\n  // add all the attached shapes to the overall list of moved shapes\n\n  eventBus.on('shape.move.start', HIGH_PRIORITY, function (e) {\n    var context = e.context,\n        shapes = context.shapes,\n        validatedShapes = context.validatedShapes;\n    context.shapes = addAttached(shapes);\n    context.validatedShapes = removeAttached(validatedShapes);\n  }); // add attachers to the visual's group\n\n  movePreview && eventBus.on('shape.move.start', LOW_PRIORITY, function (e) {\n    var context = e.context,\n        shapes = context.shapes,\n        attachers = getAttachers(shapes);\n    forEach(attachers, function (attacher) {\n      movePreview.makeDraggable(context, attacher, true);\n      forEach(attacher.labels, function (label) {\n        movePreview.makeDraggable(context, label, true);\n      });\n    });\n  }); // add attach-ok marker to current host\n\n  movePreview && eventBus.on('shape.move.start', function (event) {\n    var context = event.context,\n        shapes = context.shapes;\n\n    if (shapes.length !== 1) {\n      return;\n    }\n\n    var shape = shapes[0];\n    var host = shape.host;\n\n    if (host) {\n      canvas.addMarker(host, MARKER_ATTACH);\n      eventBus.once(['shape.move.out', 'shape.move.cleanup'], function () {\n        canvas.removeMarker(host, MARKER_ATTACH);\n      });\n    }\n  }); // add all attachers to move closure\n\n  this.preExecuted('elements.move', HIGH_PRIORITY, function (e) {\n    var context = e.context,\n        closure = context.closure,\n        shapes = context.shapes,\n        attachers = getAttachers(shapes);\n    forEach(attachers, function (attacher) {\n      closure.add(attacher, closure.topLevel[attacher.host.id]);\n    });\n  }); // perform the attaching after shapes are done moving\n\n  this.postExecuted('elements.move', function (e) {\n    var context = e.context,\n        shapes = context.shapes,\n        newHost = context.newHost,\n        attachers; // only single elements can be attached\n    // multiply elements can be detached\n\n    if (newHost && shapes.length !== 1) {\n      return;\n    }\n\n    if (newHost) {\n      attachers = shapes;\n    } else {\n      // find attachers moved without host\n      attachers = filter(shapes, function (shape) {\n        var host = shape.host;\n        return isAttacher(shape) && !includes(shapes, host);\n      });\n    }\n\n    forEach(attachers, function (attacher) {\n      modeling.updateAttachment(attacher, newHost);\n    });\n  }); // ensure invalid attachment connections are removed\n\n  this.postExecuted('elements.move', function (e) {\n    var shapes = e.context.shapes;\n    forEach(shapes, function (shape) {\n      forEach(shape.attachers, function (attacher) {\n        // remove invalid outgoing connections\n        forEach(attacher.outgoing.slice(), function (connection) {\n          var allowed = rules.allowed('connection.reconnect', {\n            connection: connection,\n            source: connection.source,\n            target: connection.target\n          });\n\n          if (!allowed) {\n            modeling.removeConnection(connection);\n          }\n        }); // remove invalid incoming connections\n\n        forEach(attacher.incoming.slice(), function (connection) {\n          var allowed = rules.allowed('connection.reconnect', {\n            connection: connection,\n            source: connection.source,\n            target: connection.target\n          });\n\n          if (!allowed) {\n            modeling.removeConnection(connection);\n          }\n        });\n      });\n    });\n  });\n  this.postExecute('shape.create', function (e) {\n    var context = e.context,\n        shape = context.shape,\n        host = context.host;\n\n    if (host) {\n      modeling.updateAttachment(shape, host);\n    }\n  }); // update attachments if the host is replaced\n\n  this.postExecute('shape.replace', function (e) {\n    var context = e.context,\n        oldShape = context.oldShape,\n        newShape = context.newShape; // move the attachers to the new host\n\n    saveClear(oldShape.attachers, function (attacher) {\n      var allowed = rules.allowed('elements.move', {\n        target: newShape,\n        shapes: [attacher]\n      });\n\n      if (allowed === 'attach') {\n        modeling.updateAttachment(attacher, newShape);\n      } else {\n        modeling.removeShape(attacher);\n      }\n    }); // move attachers if new host has different size\n\n    if (newShape.attachers.length) {\n      forEach(newShape.attachers, function (attacher) {\n        var delta = getNewAttachShapeDelta(attacher, oldShape, newShape);\n        modeling.moveShape(attacher, delta, attacher.parent);\n      });\n    }\n  }); // move shape on host resize\n\n  this.postExecute('shape.resize', function (event) {\n    var context = event.context,\n        shape = context.shape,\n        oldBounds = context.oldBounds,\n        newBounds = context.newBounds,\n        attachers = shape.attachers,\n        hints = context.hints || {};\n\n    if (hints.attachSupport === false) {\n      return;\n    }\n\n    forEach(attachers, function (attacher) {\n      var delta = getNewAttachShapeDelta(attacher, oldBounds, newBounds);\n      modeling.moveShape(attacher, delta, attacher.parent);\n      forEach(attacher.labels, function (label) {\n        modeling.moveShape(label, delta, label.parent);\n      });\n    });\n  }); // remove attachments\n\n  this.preExecute('shape.delete', function (event) {\n    var shape = event.context.shape;\n    saveClear(shape.attachers, function (attacher) {\n      modeling.removeShape(attacher);\n    });\n\n    if (shape.host) {\n      modeling.updateAttachment(shape, null);\n    }\n  });\n}\ninherits(AttachSupport, CommandInterceptor);\nAttachSupport.$inject = ['injector', 'eventBus', 'canvas', 'rules', 'modeling'];\n/**\n * Return attachers of the given shapes\n *\n * @param {Array<djs.model.Base>} shapes\n * @return {Array<djs.model.Base>}\n */\n\nfunction getAttachers(shapes) {\n  return flatten(map(shapes, function (s) {\n    return s.attachers || [];\n  }));\n}\n/**\n * Return a combined list of elements and\n * attachers.\n *\n * @param {Array<djs.model.Base>} elements\n * @return {Array<djs.model.Base>} filtered\n */\n\n\nfunction addAttached(elements) {\n  var attachers = getAttachers(elements);\n  return unionBy('id', elements, attachers);\n}\n/**\n * Return a filtered list of elements that do not\n * contain attached elements with hosts being part\n * of the selection.\n *\n * @param  {Array<djs.model.Base>} elements\n *\n * @return {Array<djs.model.Base>} filtered\n */\n\n\nfunction removeAttached(elements) {\n  var ids = groupBy(elements, 'id');\n  return filter(elements, function (element) {\n    while (element) {\n      // host in selection\n      if (element.host && ids[element.host.id]) {\n        return false;\n      }\n\n      element = element.parent;\n    }\n\n    return true;\n  });\n}\n\nfunction isAttacher(shape) {\n  return !!shape.host;\n}\n\nfunction includes(array, item) {\n  return array.indexOf(item) !== -1;\n}","map":{"version":3,"names":["flatten","filter","forEach","groupBy","map","unionBy","saveClear","getNewAttachShapeDelta","inherits","CommandInterceptor","LOW_PRIORITY","HIGH_PRIORITY","MARKER_ATTACH","AttachSupport","injector","eventBus","canvas","rules","modeling","call","movePreview","get","on","e","context","shapes","validatedShapes","addAttached","removeAttached","attachers","getAttachers","attacher","makeDraggable","labels","label","event","length","shape","host","addMarker","once","removeMarker","preExecuted","closure","add","topLevel","id","postExecuted","newHost","isAttacher","includes","updateAttachment","outgoing","slice","connection","allowed","source","target","removeConnection","incoming","postExecute","oldShape","newShape","removeShape","delta","moveShape","parent","oldBounds","newBounds","hints","attachSupport","preExecute","$inject","s","elements","ids","element","array","item","indexOf"],"sources":["E:/Old_PC/Study/Angular/test-bpm/node_modules/diagram-js/lib/features/attach-support/AttachSupport.js"],"sourcesContent":["import {\n  flatten,\n  filter,\n  forEach,\n  groupBy,\n  map,\n  unionBy\n} from 'min-dash';\n\nimport { saveClear } from '../../util/Removal';\n\nimport { getNewAttachShapeDelta } from '../../util/AttachUtil';\n\nimport inherits from 'inherits-browser';\n\nimport CommandInterceptor from '../../command/CommandInterceptor';\n\nvar LOW_PRIORITY = 251,\n    HIGH_PRIORITY = 1401;\n\nvar MARKER_ATTACH = 'attach-ok';\n\n\n/**\n * Adds the notion of attached elements to the modeler.\n *\n * Optionally depends on `diagram-js/lib/features/move` to render\n * the attached elements during move preview.\n *\n * Optionally depends on `diagram-js/lib/features/label-support`\n * to render attached labels during move preview.\n *\n * @param {didi.Injector} injector\n * @param {EventBus} eventBus\n * @param {Canvas} canvas\n * @param {Rules} rules\n * @param {Modeling} modeling\n */\nexport default function AttachSupport(injector, eventBus, canvas, rules, modeling) {\n\n  CommandInterceptor.call(this, eventBus);\n\n  var movePreview = injector.get('movePreview', false);\n\n\n  // remove all the attached elements from the shapes to be validated\n  // add all the attached shapes to the overall list of moved shapes\n  eventBus.on('shape.move.start', HIGH_PRIORITY, function(e) {\n\n    var context = e.context,\n        shapes = context.shapes,\n        validatedShapes = context.validatedShapes;\n\n    context.shapes = addAttached(shapes);\n\n    context.validatedShapes = removeAttached(validatedShapes);\n  });\n\n  // add attachers to the visual's group\n  movePreview && eventBus.on('shape.move.start', LOW_PRIORITY, function(e) {\n\n    var context = e.context,\n        shapes = context.shapes,\n        attachers = getAttachers(shapes);\n\n    forEach(attachers, function(attacher) {\n      movePreview.makeDraggable(context, attacher, true);\n\n      forEach(attacher.labels, function(label) {\n        movePreview.makeDraggable(context, label, true);\n      });\n    });\n  });\n\n  // add attach-ok marker to current host\n  movePreview && eventBus.on('shape.move.start', function(event) {\n    var context = event.context,\n        shapes = context.shapes;\n\n    if (shapes.length !== 1) {\n      return;\n    }\n\n    var shape = shapes[0];\n\n    var host = shape.host;\n\n    if (host) {\n      canvas.addMarker(host, MARKER_ATTACH);\n\n      eventBus.once([\n        'shape.move.out',\n        'shape.move.cleanup'\n      ], function() {\n        canvas.removeMarker(host, MARKER_ATTACH);\n      });\n    }\n  });\n\n  // add all attachers to move closure\n  this.preExecuted('elements.move', HIGH_PRIORITY, function(e) {\n    var context = e.context,\n        closure = context.closure,\n        shapes = context.shapes,\n        attachers = getAttachers(shapes);\n\n    forEach(attachers, function(attacher) {\n      closure.add(attacher, closure.topLevel[attacher.host.id]);\n    });\n  });\n\n  // perform the attaching after shapes are done moving\n  this.postExecuted('elements.move', function(e) {\n\n    var context = e.context,\n        shapes = context.shapes,\n        newHost = context.newHost,\n        attachers;\n\n    // only single elements can be attached\n    // multiply elements can be detached\n    if (newHost && shapes.length !== 1) {\n      return;\n    }\n\n    if (newHost) {\n      attachers = shapes;\n    } else {\n\n      // find attachers moved without host\n      attachers = filter(shapes, function(shape) {\n        var host = shape.host;\n\n        return isAttacher(shape) && !includes(shapes, host);\n      });\n    }\n\n    forEach(attachers, function(attacher) {\n      modeling.updateAttachment(attacher, newHost);\n    });\n  });\n\n  // ensure invalid attachment connections are removed\n  this.postExecuted('elements.move', function(e) {\n\n    var shapes = e.context.shapes;\n\n    forEach(shapes, function(shape) {\n\n      forEach(shape.attachers, function(attacher) {\n\n        // remove invalid outgoing connections\n        forEach(attacher.outgoing.slice(), function(connection) {\n          var allowed = rules.allowed('connection.reconnect', {\n            connection: connection,\n            source: connection.source,\n            target: connection.target\n          });\n\n          if (!allowed) {\n            modeling.removeConnection(connection);\n          }\n        });\n\n        // remove invalid incoming connections\n        forEach(attacher.incoming.slice(), function(connection) {\n          var allowed = rules.allowed('connection.reconnect', {\n            connection: connection,\n            source: connection.source,\n            target: connection.target\n          });\n\n          if (!allowed) {\n            modeling.removeConnection(connection);\n          }\n        });\n      });\n    });\n  });\n\n  this.postExecute('shape.create', function(e) {\n    var context = e.context,\n        shape = context.shape,\n        host = context.host;\n\n    if (host) {\n      modeling.updateAttachment(shape, host);\n    }\n  });\n\n  // update attachments if the host is replaced\n  this.postExecute('shape.replace', function(e) {\n\n    var context = e.context,\n        oldShape = context.oldShape,\n        newShape = context.newShape;\n\n    // move the attachers to the new host\n    saveClear(oldShape.attachers, function(attacher) {\n      var allowed = rules.allowed('elements.move', {\n        target: newShape,\n        shapes: [ attacher ]\n      });\n\n      if (allowed === 'attach') {\n        modeling.updateAttachment(attacher, newShape);\n      } else {\n        modeling.removeShape(attacher);\n      }\n    });\n\n    // move attachers if new host has different size\n    if (newShape.attachers.length) {\n\n      forEach(newShape.attachers, function(attacher) {\n        var delta = getNewAttachShapeDelta(attacher, oldShape, newShape);\n        modeling.moveShape(attacher, delta, attacher.parent);\n      });\n    }\n\n  });\n\n  // move shape on host resize\n  this.postExecute('shape.resize', function(event) {\n    var context = event.context,\n        shape = context.shape,\n        oldBounds = context.oldBounds,\n        newBounds = context.newBounds,\n        attachers = shape.attachers,\n        hints = context.hints || {};\n\n    if (hints.attachSupport === false) {\n      return;\n    }\n\n    forEach(attachers, function(attacher) {\n      var delta = getNewAttachShapeDelta(attacher, oldBounds, newBounds);\n\n      modeling.moveShape(attacher, delta, attacher.parent);\n\n      forEach(attacher.labels, function(label) {\n        modeling.moveShape(label, delta, label.parent);\n      });\n    });\n  });\n\n  // remove attachments\n  this.preExecute('shape.delete', function(event) {\n\n    var shape = event.context.shape;\n\n    saveClear(shape.attachers, function(attacher) {\n      modeling.removeShape(attacher);\n    });\n\n    if (shape.host) {\n      modeling.updateAttachment(shape, null);\n    }\n  });\n}\n\ninherits(AttachSupport, CommandInterceptor);\n\nAttachSupport.$inject = [\n  'injector',\n  'eventBus',\n  'canvas',\n  'rules',\n  'modeling'\n];\n\n\n/**\n * Return attachers of the given shapes\n *\n * @param {Array<djs.model.Base>} shapes\n * @return {Array<djs.model.Base>}\n */\nfunction getAttachers(shapes) {\n  return flatten(map(shapes, function(s) {\n    return s.attachers || [];\n  }));\n}\n\n/**\n * Return a combined list of elements and\n * attachers.\n *\n * @param {Array<djs.model.Base>} elements\n * @return {Array<djs.model.Base>} filtered\n */\nfunction addAttached(elements) {\n  var attachers = getAttachers(elements);\n\n  return unionBy('id', elements, attachers);\n}\n\n/**\n * Return a filtered list of elements that do not\n * contain attached elements with hosts being part\n * of the selection.\n *\n * @param  {Array<djs.model.Base>} elements\n *\n * @return {Array<djs.model.Base>} filtered\n */\nfunction removeAttached(elements) {\n\n  var ids = groupBy(elements, 'id');\n\n  return filter(elements, function(element) {\n    while (element) {\n\n      // host in selection\n      if (element.host && ids[element.host.id]) {\n        return false;\n      }\n\n      element = element.parent;\n    }\n\n    return true;\n  });\n}\n\nfunction isAttacher(shape) {\n  return !!shape.host;\n}\n\nfunction includes(array, item) {\n  return array.indexOf(item) !== -1;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}