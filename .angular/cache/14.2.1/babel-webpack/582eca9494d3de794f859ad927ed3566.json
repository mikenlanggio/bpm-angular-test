{"ast":null,"code":"import { is } from '../../../util/ModelUtil';\nimport { getParent } from './ModelingUtil';\nimport { asTRBL } from 'diagram-js/lib/layout/LayoutUtil';\nimport { substractTRBL, resizeTRBL } from 'diagram-js/lib/features/resize/ResizeUtil';\nvar abs = Math.abs;\n\nfunction getTRBLResize(oldBounds, newBounds) {\n  return substractTRBL(asTRBL(newBounds), asTRBL(oldBounds));\n}\n\nvar LANE_PARENTS = ['bpmn:Participant', 'bpmn:Process', 'bpmn:SubProcess'];\nexport var LANE_INDENTATION = 30;\n/**\n * Collect all lane shapes in the given paren\n *\n * @param  {djs.model.Shape} shape\n * @param  {Array<djs.model.Base>} [collectedShapes]\n *\n * @return {Array<djs.model.Base>}\n */\n\nexport function collectLanes(shape, collectedShapes) {\n  collectedShapes = collectedShapes || [];\n  shape.children.filter(function (s) {\n    if (is(s, 'bpmn:Lane')) {\n      collectLanes(s, collectedShapes);\n      collectedShapes.push(s);\n    }\n  });\n  return collectedShapes;\n}\n/**\n * Return the lane children of the given element.\n *\n * @param {djs.model.Shape} shape\n *\n * @return {Array<djs.model.Shape>}\n */\n\nexport function getChildLanes(shape) {\n  return shape.children.filter(function (c) {\n    return is(c, 'bpmn:Lane');\n  });\n}\n/**\n * Return the root element containing the given lane shape\n *\n * @param {djs.model.Shape} shape\n *\n * @return {djs.model.Shape}\n */\n\nexport function getLanesRoot(shape) {\n  return getParent(shape, LANE_PARENTS) || shape;\n}\n/**\n * Compute the required resize operations for lanes\n * adjacent to the given shape, assuming it will be\n * resized to the given new bounds.\n *\n * @param {djs.model.Shape} shape\n * @param {Bounds} newBounds\n *\n * @return {Array<Object>}\n */\n\nexport function computeLanesResize(shape, newBounds) {\n  var rootElement = getLanesRoot(shape);\n  var initialShapes = is(rootElement, 'bpmn:Process') ? [] : [rootElement];\n  var allLanes = collectLanes(rootElement, initialShapes),\n      shapeTrbl = asTRBL(shape),\n      shapeNewTrbl = asTRBL(newBounds),\n      trblResize = getTRBLResize(shape, newBounds),\n      resizeNeeded = [];\n  allLanes.forEach(function (other) {\n    if (other === shape) {\n      return;\n    }\n\n    var topResize = 0,\n        rightResize = trblResize.right,\n        bottomResize = 0,\n        leftResize = trblResize.left;\n    var otherTrbl = asTRBL(other);\n\n    if (trblResize.top) {\n      if (abs(otherTrbl.bottom - shapeTrbl.top) < 10) {\n        bottomResize = shapeNewTrbl.top - otherTrbl.bottom;\n      }\n\n      if (abs(otherTrbl.top - shapeTrbl.top) < 5) {\n        topResize = shapeNewTrbl.top - otherTrbl.top;\n      }\n    }\n\n    if (trblResize.bottom) {\n      if (abs(otherTrbl.top - shapeTrbl.bottom) < 10) {\n        topResize = shapeNewTrbl.bottom - otherTrbl.top;\n      }\n\n      if (abs(otherTrbl.bottom - shapeTrbl.bottom) < 5) {\n        bottomResize = shapeNewTrbl.bottom - otherTrbl.bottom;\n      }\n    }\n\n    if (topResize || rightResize || bottomResize || leftResize) {\n      resizeNeeded.push({\n        shape: other,\n        newBounds: resizeTRBL(other, {\n          top: topResize,\n          right: rightResize,\n          bottom: bottomResize,\n          left: leftResize\n        })\n      });\n    }\n  });\n  return resizeNeeded;\n}","map":{"version":3,"names":["is","getParent","asTRBL","substractTRBL","resizeTRBL","abs","Math","getTRBLResize","oldBounds","newBounds","LANE_PARENTS","LANE_INDENTATION","collectLanes","shape","collectedShapes","children","filter","s","push","getChildLanes","c","getLanesRoot","computeLanesResize","rootElement","initialShapes","allLanes","shapeTrbl","shapeNewTrbl","trblResize","resizeNeeded","forEach","other","topResize","rightResize","right","bottomResize","leftResize","left","otherTrbl","top","bottom"],"sources":["E:/Old_PC/Study/Angular/test-bpm/node_modules/bpmn-js/lib/features/modeling/util/LaneUtil.js"],"sourcesContent":["import { is } from '../../../util/ModelUtil';\n\nimport {\n  getParent\n} from './ModelingUtil';\n\nimport {\n  asTRBL\n} from 'diagram-js/lib/layout/LayoutUtil';\n\nimport {\n  substractTRBL,\n  resizeTRBL\n} from 'diagram-js/lib/features/resize/ResizeUtil';\n\nvar abs = Math.abs;\n\n\nfunction getTRBLResize(oldBounds, newBounds) {\n  return substractTRBL(asTRBL(newBounds), asTRBL(oldBounds));\n}\n\n\nvar LANE_PARENTS = [\n  'bpmn:Participant',\n  'bpmn:Process',\n  'bpmn:SubProcess'\n];\n\nexport var LANE_INDENTATION = 30;\n\n\n/**\n * Collect all lane shapes in the given paren\n *\n * @param  {djs.model.Shape} shape\n * @param  {Array<djs.model.Base>} [collectedShapes]\n *\n * @return {Array<djs.model.Base>}\n */\nexport function collectLanes(shape, collectedShapes) {\n\n  collectedShapes = collectedShapes || [];\n\n  shape.children.filter(function(s) {\n    if (is(s, 'bpmn:Lane')) {\n      collectLanes(s, collectedShapes);\n\n      collectedShapes.push(s);\n    }\n  });\n\n  return collectedShapes;\n}\n\n\n/**\n * Return the lane children of the given element.\n *\n * @param {djs.model.Shape} shape\n *\n * @return {Array<djs.model.Shape>}\n */\nexport function getChildLanes(shape) {\n  return shape.children.filter(function(c) {\n    return is(c, 'bpmn:Lane');\n  });\n}\n\n\n/**\n * Return the root element containing the given lane shape\n *\n * @param {djs.model.Shape} shape\n *\n * @return {djs.model.Shape}\n */\nexport function getLanesRoot(shape) {\n  return getParent(shape, LANE_PARENTS) || shape;\n}\n\n\n/**\n * Compute the required resize operations for lanes\n * adjacent to the given shape, assuming it will be\n * resized to the given new bounds.\n *\n * @param {djs.model.Shape} shape\n * @param {Bounds} newBounds\n *\n * @return {Array<Object>}\n */\nexport function computeLanesResize(shape, newBounds) {\n\n  var rootElement = getLanesRoot(shape);\n\n  var initialShapes = is(rootElement, 'bpmn:Process') ? [] : [ rootElement ];\n\n  var allLanes = collectLanes(rootElement, initialShapes),\n      shapeTrbl = asTRBL(shape),\n      shapeNewTrbl = asTRBL(newBounds),\n      trblResize = getTRBLResize(shape, newBounds),\n      resizeNeeded = [];\n\n  allLanes.forEach(function(other) {\n\n    if (other === shape) {\n      return;\n    }\n\n    var topResize = 0,\n        rightResize = trblResize.right,\n        bottomResize = 0,\n        leftResize = trblResize.left;\n\n    var otherTrbl = asTRBL(other);\n\n    if (trblResize.top) {\n      if (abs(otherTrbl.bottom - shapeTrbl.top) < 10) {\n        bottomResize = shapeNewTrbl.top - otherTrbl.bottom;\n      }\n\n      if (abs(otherTrbl.top - shapeTrbl.top) < 5) {\n        topResize = shapeNewTrbl.top - otherTrbl.top;\n      }\n    }\n\n    if (trblResize.bottom) {\n      if (abs(otherTrbl.top - shapeTrbl.bottom) < 10) {\n        topResize = shapeNewTrbl.bottom - otherTrbl.top;\n      }\n\n      if (abs(otherTrbl.bottom - shapeTrbl.bottom) < 5) {\n        bottomResize = shapeNewTrbl.bottom - otherTrbl.bottom;\n      }\n    }\n\n    if (topResize || rightResize || bottomResize || leftResize) {\n\n      resizeNeeded.push({\n        shape: other,\n        newBounds: resizeTRBL(other, {\n          top: topResize,\n          right: rightResize,\n          bottom: bottomResize,\n          left: leftResize\n        })\n      });\n    }\n\n  });\n\n  return resizeNeeded;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}