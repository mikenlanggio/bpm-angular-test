{"ast":null,"code":"import inherits from 'inherits-browser';\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\nimport { is } from '../../../util/ModelUtil';\nimport { isExpanded } from '../../../util/DiUtil.js';\n/**\n * Add start event replacing element with expanded sub process.\n *\n * @param {Injector} injector\n * @param {Modeling} modeling\n */\n\nexport default function SubProcessStartEventBehavior(injector, modeling) {\n  injector.invoke(CommandInterceptor, this);\n  this.postExecuted('shape.replace', function (event) {\n    var oldShape = event.context.oldShape,\n        newShape = event.context.newShape;\n\n    if (!is(newShape, 'bpmn:SubProcess') || !(is(oldShape, 'bpmn:Task') || is(oldShape, 'bpmn:CallActivity')) || !isExpanded(newShape)) {\n      return;\n    }\n\n    var position = getStartEventPosition(newShape);\n    modeling.createShape({\n      type: 'bpmn:StartEvent'\n    }, position, newShape);\n  });\n}\nSubProcessStartEventBehavior.$inject = ['injector', 'modeling'];\ninherits(SubProcessStartEventBehavior, CommandInterceptor); // helpers //////////\n\nfunction getStartEventPosition(shape) {\n  return {\n    x: shape.x + shape.width / 6,\n    y: shape.y + shape.height / 2\n  };\n}","map":{"version":3,"names":["inherits","CommandInterceptor","is","isExpanded","SubProcessStartEventBehavior","injector","modeling","invoke","postExecuted","event","oldShape","context","newShape","position","getStartEventPosition","createShape","type","$inject","shape","x","width","y","height"],"sources":["E:/Old_PC/Study/Angular/test-bpm/node_modules/bpmn-js/lib/features/modeling/behavior/SubProcessStartEventBehavior.js"],"sourcesContent":["import inherits from 'inherits-browser';\n\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\n\nimport { is } from '../../../util/ModelUtil';\nimport { isExpanded } from '../../../util/DiUtil.js';\n\n/**\n * Add start event replacing element with expanded sub process.\n *\n * @param {Injector} injector\n * @param {Modeling} modeling\n */\nexport default function SubProcessStartEventBehavior(injector, modeling) {\n  injector.invoke(CommandInterceptor, this);\n\n  this.postExecuted('shape.replace', function(event) {\n    var oldShape = event.context.oldShape,\n        newShape = event.context.newShape;\n\n    if (\n      !is(newShape, 'bpmn:SubProcess') ||\n      ! (is(oldShape, 'bpmn:Task') || is(oldShape, 'bpmn:CallActivity')) ||\n      !isExpanded(newShape)\n    ) {\n      return;\n    }\n\n    var position = getStartEventPosition(newShape);\n\n    modeling.createShape({ type: 'bpmn:StartEvent' }, position, newShape);\n  });\n}\n\nSubProcessStartEventBehavior.$inject = [\n  'injector',\n  'modeling'\n];\n\ninherits(SubProcessStartEventBehavior, CommandInterceptor);\n\n// helpers //////////\n\nfunction getStartEventPosition(shape) {\n  return {\n    x: shape.x + shape.width / 6,\n    y: shape.y + shape.height / 2\n  };\n}\n"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,kBAArB;AAEA,OAAOC,kBAAP,MAA+B,2CAA/B;AAEA,SAASC,EAAT,QAAmB,yBAAnB;AACA,SAASC,UAAT,QAA2B,yBAA3B;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,4BAAT,CAAsCC,QAAtC,EAAgDC,QAAhD,EAA0D;EACvED,QAAQ,CAACE,MAAT,CAAgBN,kBAAhB,EAAoC,IAApC;EAEA,KAAKO,YAAL,CAAkB,eAAlB,EAAmC,UAASC,KAAT,EAAgB;IACjD,IAAIC,QAAQ,GAAGD,KAAK,CAACE,OAAN,CAAcD,QAA7B;IAAA,IACIE,QAAQ,GAAGH,KAAK,CAACE,OAAN,CAAcC,QAD7B;;IAGA,IACE,CAACV,EAAE,CAACU,QAAD,EAAW,iBAAX,CAAH,IACA,EAAGV,EAAE,CAACQ,QAAD,EAAW,WAAX,CAAF,IAA6BR,EAAE,CAACQ,QAAD,EAAW,mBAAX,CAAlC,CADA,IAEA,CAACP,UAAU,CAACS,QAAD,CAHb,EAIE;MACA;IACD;;IAED,IAAIC,QAAQ,GAAGC,qBAAqB,CAACF,QAAD,CAApC;IAEAN,QAAQ,CAACS,WAAT,CAAqB;MAAEC,IAAI,EAAE;IAAR,CAArB,EAAkDH,QAAlD,EAA4DD,QAA5D;EACD,CAfD;AAgBD;AAEDR,4BAA4B,CAACa,OAA7B,GAAuC,CACrC,UADqC,EAErC,UAFqC,CAAvC;AAKAjB,QAAQ,CAACI,4BAAD,EAA+BH,kBAA/B,CAAR,C,CAEA;;AAEA,SAASa,qBAAT,CAA+BI,KAA/B,EAAsC;EACpC,OAAO;IACLC,CAAC,EAAED,KAAK,CAACC,CAAN,GAAUD,KAAK,CAACE,KAAN,GAAc,CADtB;IAELC,CAAC,EAAEH,KAAK,CAACG,CAAN,GAAUH,KAAK,CAACI,MAAN,GAAe;EAFvB,CAAP;AAID"},"metadata":{},"sourceType":"module"}