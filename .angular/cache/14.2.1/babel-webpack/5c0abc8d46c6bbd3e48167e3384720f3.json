{"ast":null,"code":"import { filter, find, forEach } from 'min-dash';\nimport { elementToString } from './Util';\nimport { ensureCompatDiRef } from '../util/CompatibilityUtil';\n/**\n * Returns true if an element has the given meta-model type\n *\n * @param  {ModdleElement}  element\n * @param  {string}         type\n *\n * @return {boolean}\n */\n\nfunction is(element, type) {\n  return element.$instanceOf(type);\n}\n/**\n * Find a suitable display candidate for definitions where the DI does not\n * correctly specify one.\n */\n\n\nfunction findDisplayCandidate(definitions) {\n  return find(definitions.rootElements, function (e) {\n    return is(e, 'bpmn:Process') || is(e, 'bpmn:Collaboration');\n  });\n}\n\nexport default function BpmnTreeWalker(handler, translate) {\n  // list of containers already walked\n  var handledElements = {}; // list of elements to handle deferred to ensure\n  // prerequisites are drawn\n\n  var deferred = [];\n  var diMap = {}; // Helpers //////////////////////\n\n  function contextual(fn, ctx) {\n    return function (e) {\n      fn(e, ctx);\n    };\n  }\n\n  function handled(element) {\n    handledElements[element.id] = element;\n  }\n\n  function isHandled(element) {\n    return handledElements[element.id];\n  }\n\n  function visit(element, ctx) {\n    var gfx = element.gfx; // avoid multiple rendering of elements\n\n    if (gfx) {\n      throw new Error(translate('already rendered {element}', {\n        element: elementToString(element)\n      }));\n    } // call handler\n\n\n    return handler.element(element, diMap[element.id], ctx);\n  }\n\n  function visitRoot(element, diagram) {\n    return handler.root(element, diMap[element.id], diagram);\n  }\n\n  function visitIfDi(element, ctx) {\n    try {\n      var gfx = diMap[element.id] && visit(element, ctx);\n      handled(element);\n      return gfx;\n    } catch (e) {\n      logError(e.message, {\n        element: element,\n        error: e\n      });\n      console.error(translate('failed to import {element}', {\n        element: elementToString(element)\n      }));\n      console.error(e);\n    }\n  }\n\n  function logError(message, context) {\n    handler.error(message, context);\n  } // DI handling //////////////////////\n\n\n  function registerDi(di) {\n    var bpmnElement = di.bpmnElement;\n\n    if (bpmnElement) {\n      if (diMap[bpmnElement.id]) {\n        logError(translate('multiple DI elements defined for {element}', {\n          element: elementToString(bpmnElement)\n        }), {\n          element: bpmnElement\n        });\n      } else {\n        diMap[bpmnElement.id] = di;\n        ensureCompatDiRef(bpmnElement);\n      }\n    } else {\n      logError(translate('no bpmnElement referenced in {element}', {\n        element: elementToString(di)\n      }), {\n        element: di\n      });\n    }\n  }\n\n  function handleDiagram(diagram) {\n    handlePlane(diagram.plane);\n  }\n\n  function handlePlane(plane) {\n    registerDi(plane);\n    forEach(plane.planeElement, handlePlaneElement);\n  }\n\n  function handlePlaneElement(planeElement) {\n    registerDi(planeElement);\n  } // Semantic handling //////////////////////\n\n  /**\n   * Handle definitions and return the rendered diagram (if any)\n   *\n   * @param {ModdleElement} definitions to walk and import\n   * @param {ModdleElement} [diagram] specific diagram to import and display\n   *\n   * @throws {Error} if no diagram to display could be found\n   */\n\n\n  function handleDefinitions(definitions, diagram) {\n    // make sure we walk the correct bpmnElement\n    var diagrams = definitions.diagrams;\n\n    if (diagram && diagrams.indexOf(diagram) === -1) {\n      throw new Error(translate('diagram not part of bpmn:Definitions'));\n    }\n\n    if (!diagram && diagrams && diagrams.length) {\n      diagram = diagrams[0];\n    } // no diagram -> nothing to import\n\n\n    if (!diagram) {\n      throw new Error(translate('no diagram to display'));\n    } // load DI from selected diagram only\n\n\n    diMap = {};\n    handleDiagram(diagram);\n    var plane = diagram.plane;\n\n    if (!plane) {\n      throw new Error(translate('no plane for {element}', {\n        element: elementToString(diagram)\n      }));\n    }\n\n    var rootElement = plane.bpmnElement; // ensure we default to a suitable display candidate (process or collaboration),\n    // even if non is specified in DI\n\n    if (!rootElement) {\n      rootElement = findDisplayCandidate(definitions);\n\n      if (!rootElement) {\n        throw new Error(translate('no process or collaboration to display'));\n      } else {\n        logError(translate('correcting missing bpmnElement on {plane} to {rootElement}', {\n          plane: elementToString(plane),\n          rootElement: elementToString(rootElement)\n        })); // correct DI on the fly\n\n        plane.bpmnElement = rootElement;\n        registerDi(plane);\n      }\n    }\n\n    var ctx = visitRoot(rootElement, plane);\n\n    if (is(rootElement, 'bpmn:Process') || is(rootElement, 'bpmn:SubProcess')) {\n      handleProcess(rootElement, ctx);\n    } else if (is(rootElement, 'bpmn:Collaboration')) {\n      handleCollaboration(rootElement, ctx); // force drawing of everything not yet drawn that is part of the target DI\n\n      handleUnhandledProcesses(definitions.rootElements, ctx);\n    } else {\n      throw new Error(translate('unsupported bpmnElement for {plane}: {rootElement}', {\n        plane: elementToString(plane),\n        rootElement: elementToString(rootElement)\n      }));\n    } // handle all deferred elements\n\n\n    handleDeferred(deferred);\n  }\n\n  function handleDeferred() {\n    var fn; // drain deferred until empty\n\n    while (deferred.length) {\n      fn = deferred.shift();\n      fn();\n    }\n  }\n\n  function handleProcess(process, context) {\n    handleFlowElementsContainer(process, context);\n    handleIoSpecification(process.ioSpecification, context);\n    handleArtifacts(process.artifacts, context); // log process handled\n\n    handled(process);\n  }\n\n  function handleUnhandledProcesses(rootElements, ctx) {\n    // walk through all processes that have not yet been drawn and draw them\n    // if they contain lanes with DI information.\n    // we do this to pass the free-floating lane test cases in the MIWG test suite\n    var processes = filter(rootElements, function (e) {\n      return !isHandled(e) && is(e, 'bpmn:Process') && e.laneSets;\n    });\n    processes.forEach(contextual(handleProcess, ctx));\n  }\n\n  function handleMessageFlow(messageFlow, context) {\n    visitIfDi(messageFlow, context);\n  }\n\n  function handleMessageFlows(messageFlows, context) {\n    forEach(messageFlows, contextual(handleMessageFlow, context));\n  }\n\n  function handleDataAssociation(association, context) {\n    visitIfDi(association, context);\n  }\n\n  function handleDataInput(dataInput, context) {\n    visitIfDi(dataInput, context);\n  }\n\n  function handleDataOutput(dataOutput, context) {\n    visitIfDi(dataOutput, context);\n  }\n\n  function handleArtifact(artifact, context) {\n    // bpmn:TextAnnotation\n    // bpmn:Group\n    // bpmn:Association\n    visitIfDi(artifact, context);\n  }\n\n  function handleArtifacts(artifacts, context) {\n    forEach(artifacts, function (e) {\n      if (is(e, 'bpmn:Association')) {\n        deferred.push(function () {\n          handleArtifact(e, context);\n        });\n      } else {\n        handleArtifact(e, context);\n      }\n    });\n  }\n\n  function handleIoSpecification(ioSpecification, context) {\n    if (!ioSpecification) {\n      return;\n    }\n\n    forEach(ioSpecification.dataInputs, contextual(handleDataInput, context));\n    forEach(ioSpecification.dataOutputs, contextual(handleDataOutput, context));\n  }\n\n  function handleSubProcess(subProcess, context) {\n    handleFlowElementsContainer(subProcess, context);\n    handleArtifacts(subProcess.artifacts, context);\n  }\n\n  function handleFlowNode(flowNode, context) {\n    var childCtx = visitIfDi(flowNode, context);\n\n    if (is(flowNode, 'bpmn:SubProcess')) {\n      handleSubProcess(flowNode, childCtx || context);\n    }\n\n    if (is(flowNode, 'bpmn:Activity')) {\n      handleIoSpecification(flowNode.ioSpecification, context);\n    } // defer handling of associations\n    // affected types:\n    //\n    //   * bpmn:Activity\n    //   * bpmn:ThrowEvent\n    //   * bpmn:CatchEvent\n    //\n\n\n    deferred.push(function () {\n      forEach(flowNode.dataInputAssociations, contextual(handleDataAssociation, context));\n      forEach(flowNode.dataOutputAssociations, contextual(handleDataAssociation, context));\n    });\n  }\n\n  function handleSequenceFlow(sequenceFlow, context) {\n    visitIfDi(sequenceFlow, context);\n  }\n\n  function handleDataElement(dataObject, context) {\n    visitIfDi(dataObject, context);\n  }\n\n  function handleLane(lane, context) {\n    deferred.push(function () {\n      var newContext = visitIfDi(lane, context);\n\n      if (lane.childLaneSet) {\n        handleLaneSet(lane.childLaneSet, newContext || context);\n      }\n\n      wireFlowNodeRefs(lane);\n    });\n  }\n\n  function handleLaneSet(laneSet, context) {\n    forEach(laneSet.lanes, contextual(handleLane, context));\n  }\n\n  function handleLaneSets(laneSets, context) {\n    forEach(laneSets, contextual(handleLaneSet, context));\n  }\n\n  function handleFlowElementsContainer(container, context) {\n    handleFlowElements(container.flowElements, context);\n\n    if (container.laneSets) {\n      handleLaneSets(container.laneSets, context);\n    }\n  }\n\n  function handleFlowElements(flowElements, context) {\n    forEach(flowElements, function (e) {\n      if (is(e, 'bpmn:SequenceFlow')) {\n        deferred.push(function () {\n          handleSequenceFlow(e, context);\n        });\n      } else if (is(e, 'bpmn:BoundaryEvent')) {\n        deferred.unshift(function () {\n          handleFlowNode(e, context);\n        });\n      } else if (is(e, 'bpmn:FlowNode')) {\n        handleFlowNode(e, context);\n      } else if (is(e, 'bpmn:DataObject')) {// SKIP (assume correct referencing via DataObjectReference)\n      } else if (is(e, 'bpmn:DataStoreReference')) {\n        handleDataElement(e, context);\n      } else if (is(e, 'bpmn:DataObjectReference')) {\n        handleDataElement(e, context);\n      } else {\n        logError(translate('unrecognized flowElement {element} in context {context}', {\n          element: elementToString(e),\n          context: context ? elementToString(context.businessObject) : 'null'\n        }), {\n          element: e,\n          context: context\n        });\n      }\n    });\n  }\n\n  function handleParticipant(participant, context) {\n    var newCtx = visitIfDi(participant, context);\n    var process = participant.processRef;\n\n    if (process) {\n      handleProcess(process, newCtx || context);\n    }\n  }\n\n  function handleCollaboration(collaboration, context) {\n    forEach(collaboration.participants, contextual(handleParticipant, context));\n    handleArtifacts(collaboration.artifacts, context); // handle message flows latest in the process\n\n    deferred.push(function () {\n      handleMessageFlows(collaboration.messageFlows, context);\n    });\n  }\n\n  function wireFlowNodeRefs(lane) {\n    // wire the virtual flowNodeRefs <-> relationship\n    forEach(lane.flowNodeRef, function (flowNode) {\n      var lanes = flowNode.get('lanes');\n\n      if (lanes) {\n        lanes.push(lane);\n      }\n    });\n  } // API //////////////////////\n\n\n  return {\n    handleDeferred: handleDeferred,\n    handleDefinitions: handleDefinitions,\n    handleSubProcess: handleSubProcess,\n    registerDi: registerDi\n  };\n}","map":{"version":3,"names":["filter","find","forEach","elementToString","ensureCompatDiRef","is","element","type","$instanceOf","findDisplayCandidate","definitions","rootElements","e","BpmnTreeWalker","handler","translate","handledElements","deferred","diMap","contextual","fn","ctx","handled","id","isHandled","visit","gfx","Error","visitRoot","diagram","root","visitIfDi","logError","message","error","console","context","registerDi","di","bpmnElement","handleDiagram","handlePlane","plane","planeElement","handlePlaneElement","handleDefinitions","diagrams","indexOf","length","rootElement","handleProcess","handleCollaboration","handleUnhandledProcesses","handleDeferred","shift","process","handleFlowElementsContainer","handleIoSpecification","ioSpecification","handleArtifacts","artifacts","processes","laneSets","handleMessageFlow","messageFlow","handleMessageFlows","messageFlows","handleDataAssociation","association","handleDataInput","dataInput","handleDataOutput","dataOutput","handleArtifact","artifact","push","dataInputs","dataOutputs","handleSubProcess","subProcess","handleFlowNode","flowNode","childCtx","dataInputAssociations","dataOutputAssociations","handleSequenceFlow","sequenceFlow","handleDataElement","dataObject","handleLane","lane","newContext","childLaneSet","handleLaneSet","wireFlowNodeRefs","laneSet","lanes","handleLaneSets","container","handleFlowElements","flowElements","unshift","businessObject","handleParticipant","participant","newCtx","processRef","collaboration","participants","flowNodeRef","get"],"sources":["E:/Old_PC/Study/Angular/test-bpm/node_modules/bpmn-js/lib/import/BpmnTreeWalker.js"],"sourcesContent":["import {\n  filter,\n  find,\n  forEach\n} from 'min-dash';\n\nimport {\n  elementToString\n} from './Util';\n\nimport {\n  ensureCompatDiRef\n} from '../util/CompatibilityUtil';\n\n\n/**\n * Returns true if an element has the given meta-model type\n *\n * @param  {ModdleElement}  element\n * @param  {string}         type\n *\n * @return {boolean}\n */\nfunction is(element, type) {\n  return element.$instanceOf(type);\n}\n\n\n/**\n * Find a suitable display candidate for definitions where the DI does not\n * correctly specify one.\n */\nfunction findDisplayCandidate(definitions) {\n  return find(definitions.rootElements, function(e) {\n    return is(e, 'bpmn:Process') || is(e, 'bpmn:Collaboration');\n  });\n}\n\n\nexport default function BpmnTreeWalker(handler, translate) {\n\n  // list of containers already walked\n  var handledElements = {};\n\n  // list of elements to handle deferred to ensure\n  // prerequisites are drawn\n  var deferred = [];\n\n  var diMap = {};\n\n  // Helpers //////////////////////\n\n  function contextual(fn, ctx) {\n    return function(e) {\n      fn(e, ctx);\n    };\n  }\n\n  function handled(element) {\n    handledElements[element.id] = element;\n  }\n\n  function isHandled(element) {\n    return handledElements[element.id];\n  }\n\n  function visit(element, ctx) {\n\n    var gfx = element.gfx;\n\n    // avoid multiple rendering of elements\n    if (gfx) {\n      throw new Error(\n        translate('already rendered {element}', { element: elementToString(element) })\n      );\n    }\n\n    // call handler\n    return handler.element(element, diMap[element.id], ctx);\n  }\n\n  function visitRoot(element, diagram) {\n    return handler.root(element, diMap[element.id], diagram);\n  }\n\n  function visitIfDi(element, ctx) {\n\n    try {\n      var gfx = diMap[element.id] && visit(element, ctx);\n\n      handled(element);\n\n      return gfx;\n    } catch (e) {\n      logError(e.message, { element: element, error: e });\n\n      console.error(translate('failed to import {element}', { element: elementToString(element) }));\n      console.error(e);\n    }\n  }\n\n  function logError(message, context) {\n    handler.error(message, context);\n  }\n\n  // DI handling //////////////////////\n\n  function registerDi(di) {\n    var bpmnElement = di.bpmnElement;\n\n    if (bpmnElement) {\n      if (diMap[bpmnElement.id]) {\n        logError(\n          translate('multiple DI elements defined for {element}', {\n            element: elementToString(bpmnElement)\n          }),\n          { element: bpmnElement }\n        );\n      } else {\n        diMap[bpmnElement.id] = di;\n\n        ensureCompatDiRef(bpmnElement);\n      }\n    } else {\n      logError(\n        translate('no bpmnElement referenced in {element}', {\n          element: elementToString(di)\n        }),\n        { element: di }\n      );\n    }\n  }\n\n  function handleDiagram(diagram) {\n    handlePlane(diagram.plane);\n  }\n\n  function handlePlane(plane) {\n    registerDi(plane);\n\n    forEach(plane.planeElement, handlePlaneElement);\n  }\n\n  function handlePlaneElement(planeElement) {\n    registerDi(planeElement);\n  }\n\n\n  // Semantic handling //////////////////////\n\n  /**\n   * Handle definitions and return the rendered diagram (if any)\n   *\n   * @param {ModdleElement} definitions to walk and import\n   * @param {ModdleElement} [diagram] specific diagram to import and display\n   *\n   * @throws {Error} if no diagram to display could be found\n   */\n  function handleDefinitions(definitions, diagram) {\n\n    // make sure we walk the correct bpmnElement\n\n    var diagrams = definitions.diagrams;\n\n    if (diagram && diagrams.indexOf(diagram) === -1) {\n      throw new Error(translate('diagram not part of bpmn:Definitions'));\n    }\n\n    if (!diagram && diagrams && diagrams.length) {\n      diagram = diagrams[0];\n    }\n\n    // no diagram -> nothing to import\n    if (!diagram) {\n      throw new Error(translate('no diagram to display'));\n    }\n\n    // load DI from selected diagram only\n    diMap = {};\n    handleDiagram(diagram);\n\n\n    var plane = diagram.plane;\n\n    if (!plane) {\n      throw new Error(translate(\n        'no plane for {element}',\n        { element: elementToString(diagram) }\n      ));\n    }\n\n    var rootElement = plane.bpmnElement;\n\n    // ensure we default to a suitable display candidate (process or collaboration),\n    // even if non is specified in DI\n    if (!rootElement) {\n      rootElement = findDisplayCandidate(definitions);\n\n      if (!rootElement) {\n        throw new Error(translate('no process or collaboration to display'));\n      } else {\n\n        logError(\n          translate('correcting missing bpmnElement on {plane} to {rootElement}', {\n            plane: elementToString(plane),\n            rootElement: elementToString(rootElement)\n          })\n        );\n\n        // correct DI on the fly\n        plane.bpmnElement = rootElement;\n        registerDi(plane);\n      }\n    }\n\n\n    var ctx = visitRoot(rootElement, plane);\n\n    if (is(rootElement, 'bpmn:Process') || is(rootElement, 'bpmn:SubProcess')) {\n      handleProcess(rootElement, ctx);\n    } else if (is(rootElement, 'bpmn:Collaboration')) {\n      handleCollaboration(rootElement, ctx);\n\n      // force drawing of everything not yet drawn that is part of the target DI\n      handleUnhandledProcesses(definitions.rootElements, ctx);\n    } else {\n      throw new Error(\n        translate('unsupported bpmnElement for {plane}: {rootElement}', {\n          plane: elementToString(plane),\n          rootElement: elementToString(rootElement)\n        })\n      );\n    }\n\n    // handle all deferred elements\n    handleDeferred(deferred);\n  }\n\n  function handleDeferred() {\n\n    var fn;\n\n    // drain deferred until empty\n    while (deferred.length) {\n      fn = deferred.shift();\n\n      fn();\n    }\n  }\n\n  function handleProcess(process, context) {\n    handleFlowElementsContainer(process, context);\n    handleIoSpecification(process.ioSpecification, context);\n\n    handleArtifacts(process.artifacts, context);\n\n    // log process handled\n    handled(process);\n  }\n\n  function handleUnhandledProcesses(rootElements, ctx) {\n\n    // walk through all processes that have not yet been drawn and draw them\n    // if they contain lanes with DI information.\n    // we do this to pass the free-floating lane test cases in the MIWG test suite\n    var processes = filter(rootElements, function(e) {\n      return !isHandled(e) && is(e, 'bpmn:Process') && e.laneSets;\n    });\n\n    processes.forEach(contextual(handleProcess, ctx));\n  }\n\n  function handleMessageFlow(messageFlow, context) {\n    visitIfDi(messageFlow, context);\n  }\n\n  function handleMessageFlows(messageFlows, context) {\n    forEach(messageFlows, contextual(handleMessageFlow, context));\n  }\n\n  function handleDataAssociation(association, context) {\n    visitIfDi(association, context);\n  }\n\n  function handleDataInput(dataInput, context) {\n    visitIfDi(dataInput, context);\n  }\n\n  function handleDataOutput(dataOutput, context) {\n    visitIfDi(dataOutput, context);\n  }\n\n  function handleArtifact(artifact, context) {\n\n    // bpmn:TextAnnotation\n    // bpmn:Group\n    // bpmn:Association\n\n    visitIfDi(artifact, context);\n  }\n\n  function handleArtifacts(artifacts, context) {\n\n    forEach(artifacts, function(e) {\n      if (is(e, 'bpmn:Association')) {\n        deferred.push(function() {\n          handleArtifact(e, context);\n        });\n      } else {\n        handleArtifact(e, context);\n      }\n    });\n  }\n\n  function handleIoSpecification(ioSpecification, context) {\n\n    if (!ioSpecification) {\n      return;\n    }\n\n    forEach(ioSpecification.dataInputs, contextual(handleDataInput, context));\n    forEach(ioSpecification.dataOutputs, contextual(handleDataOutput, context));\n  }\n\n  function handleSubProcess(subProcess, context) {\n    handleFlowElementsContainer(subProcess, context);\n    handleArtifacts(subProcess.artifacts, context);\n  }\n\n  function handleFlowNode(flowNode, context) {\n    var childCtx = visitIfDi(flowNode, context);\n\n    if (is(flowNode, 'bpmn:SubProcess')) {\n      handleSubProcess(flowNode, childCtx || context);\n    }\n\n    if (is(flowNode, 'bpmn:Activity')) {\n      handleIoSpecification(flowNode.ioSpecification, context);\n    }\n\n    // defer handling of associations\n    // affected types:\n    //\n    //   * bpmn:Activity\n    //   * bpmn:ThrowEvent\n    //   * bpmn:CatchEvent\n    //\n    deferred.push(function() {\n      forEach(flowNode.dataInputAssociations, contextual(handleDataAssociation, context));\n      forEach(flowNode.dataOutputAssociations, contextual(handleDataAssociation, context));\n    });\n  }\n\n  function handleSequenceFlow(sequenceFlow, context) {\n    visitIfDi(sequenceFlow, context);\n  }\n\n  function handleDataElement(dataObject, context) {\n    visitIfDi(dataObject, context);\n  }\n\n  function handleLane(lane, context) {\n\n    deferred.push(function() {\n\n      var newContext = visitIfDi(lane, context);\n\n      if (lane.childLaneSet) {\n        handleLaneSet(lane.childLaneSet, newContext || context);\n      }\n\n      wireFlowNodeRefs(lane);\n    });\n  }\n\n  function handleLaneSet(laneSet, context) {\n    forEach(laneSet.lanes, contextual(handleLane, context));\n  }\n\n  function handleLaneSets(laneSets, context) {\n    forEach(laneSets, contextual(handleLaneSet, context));\n  }\n\n  function handleFlowElementsContainer(container, context) {\n    handleFlowElements(container.flowElements, context);\n\n    if (container.laneSets) {\n      handleLaneSets(container.laneSets, context);\n    }\n  }\n\n  function handleFlowElements(flowElements, context) {\n    forEach(flowElements, function(e) {\n      if (is(e, 'bpmn:SequenceFlow')) {\n        deferred.push(function() {\n          handleSequenceFlow(e, context);\n        });\n      } else if (is(e, 'bpmn:BoundaryEvent')) {\n        deferred.unshift(function() {\n          handleFlowNode(e, context);\n        });\n      } else if (is(e, 'bpmn:FlowNode')) {\n        handleFlowNode(e, context);\n      } else if (is(e, 'bpmn:DataObject')) {\n\n        // SKIP (assume correct referencing via DataObjectReference)\n      } else if (is(e, 'bpmn:DataStoreReference')) {\n        handleDataElement(e, context);\n      } else if (is(e, 'bpmn:DataObjectReference')) {\n        handleDataElement(e, context);\n      } else {\n        logError(\n          translate('unrecognized flowElement {element} in context {context}', {\n            element: elementToString(e),\n            context: (context ? elementToString(context.businessObject) : 'null')\n          }),\n          { element: e, context: context }\n        );\n      }\n    });\n  }\n\n  function handleParticipant(participant, context) {\n    var newCtx = visitIfDi(participant, context);\n\n    var process = participant.processRef;\n    if (process) {\n      handleProcess(process, newCtx || context);\n    }\n  }\n\n  function handleCollaboration(collaboration, context) {\n\n    forEach(collaboration.participants, contextual(handleParticipant, context));\n\n    handleArtifacts(collaboration.artifacts, context);\n\n    // handle message flows latest in the process\n    deferred.push(function() {\n      handleMessageFlows(collaboration.messageFlows, context);\n    });\n  }\n\n\n  function wireFlowNodeRefs(lane) {\n\n    // wire the virtual flowNodeRefs <-> relationship\n    forEach(lane.flowNodeRef, function(flowNode) {\n      var lanes = flowNode.get('lanes');\n\n      if (lanes) {\n        lanes.push(lane);\n      }\n    });\n  }\n\n  // API //////////////////////\n\n  return {\n    handleDeferred: handleDeferred,\n    handleDefinitions: handleDefinitions,\n    handleSubProcess: handleSubProcess,\n    registerDi: registerDi\n  };\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}