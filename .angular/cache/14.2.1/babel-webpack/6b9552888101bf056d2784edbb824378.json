{"ast":null,"code":"import { forEach } from 'min-dash';\nimport { event as domEvent, closest as domClosest } from 'min-dom';\nimport Hammer from 'hammerjs';\nimport { toPoint } from '../../util/Event';\nvar MIN_ZOOM = 0.2,\n    MAX_ZOOM = 4;\nvar mouseEvents = ['mousedown', 'mouseup', 'mouseover', 'mouseout', 'click', 'dblclick'];\n\nfunction log() {// console.log.apply(console, arguments);\n}\n\nfunction get(service, injector) {\n  return injector.get(service, false);\n}\n\nfunction stopEvent(event) {\n  event.preventDefault();\n\n  if (typeof event.stopPropagation === 'function') {\n    event.stopPropagation();\n  } else if (event.srcEvent && typeof event.srcEvent.stopPropagation === 'function') {\n    // iPhone & iPad\n    event.srcEvent.stopPropagation();\n  }\n\n  if (typeof event.stopImmediatePropagation === 'function') {\n    event.stopImmediatePropagation();\n  }\n}\n\nfunction createTouchRecognizer(node) {\n  function stopMouse(event) {\n    forEach(mouseEvents, function (e) {\n      domEvent.bind(node, e, stopEvent, true);\n    });\n  }\n\n  function allowMouse(event) {\n    setTimeout(function () {\n      forEach(mouseEvents, function (e) {\n        domEvent.unbind(node, e, stopEvent, true);\n      });\n    }, 500);\n  }\n\n  domEvent.bind(node, 'touchstart', stopMouse, true);\n  domEvent.bind(node, 'touchend', allowMouse, true);\n  domEvent.bind(node, 'touchcancel', allowMouse, true); // A touch event recognizer that handles\n  // touch events only (we know, we can already handle\n  // mouse events out of the box)\n\n  var recognizer = new Hammer.Manager(node, {\n    inputClass: Hammer.TouchInput,\n    recognizers: [],\n    domEvents: true\n  });\n  var tap = new Hammer.Tap();\n  var pan = new Hammer.Pan({\n    threshold: 10\n  });\n  var press = new Hammer.Press();\n  var pinch = new Hammer.Pinch();\n  var doubleTap = new Hammer.Tap({\n    event: 'doubletap',\n    taps: 2\n  });\n  pinch.requireFailure(pan);\n  pinch.requireFailure(press);\n  recognizer.add([pan, press, pinch, doubleTap, tap]);\n\n  recognizer.reset = function (force) {\n    var recognizers = this.recognizers,\n        session = this.session;\n\n    if (session.stopped) {\n      return;\n    }\n\n    log('recognizer', 'stop');\n    recognizer.stop(force);\n    setTimeout(function () {\n      var i, r;\n      log('recognizer', 'reset');\n\n      for (i = 0; r = recognizers[i]; i++) {\n        r.reset();\n        r.state = 8; // FAILED STATE\n      }\n\n      session.curRecognizer = null;\n    }, 0);\n  };\n\n  recognizer.on('hammer.input', function (event) {\n    if (event.srcEvent.defaultPrevented) {\n      recognizer.reset(true);\n    }\n  });\n  return recognizer;\n}\n/**\n * A plugin that provides touch events for elements.\n *\n * @param {EventBus} eventBus\n * @param {InteractionEvents} interactionEvents\n */\n\n\nexport default function TouchInteractionEvents(injector, canvas, eventBus, elementRegistry, interactionEvents) {\n  // optional integrations\n  var dragging = get('dragging', injector),\n      move = get('move', injector),\n      contextPad = get('contextPad', injector),\n      palette = get('palette', injector); // the touch recognizer\n\n  var recognizer;\n\n  function handler(type, buttonType) {\n    return function (event) {\n      log('element', type, event);\n      var gfx = getGfx(event.target),\n          element = gfx && elementRegistry.get(gfx); // translate into an actual mouse click event\n\n      if (buttonType) {\n        event.srcEvent.button = buttonType;\n      }\n\n      return interactionEvents.fire(type, event, element);\n    };\n  }\n\n  function getGfx(target) {\n    var node = domClosest(target, 'svg, .djs-element', true);\n    return node;\n  }\n\n  function initEvents(svg) {\n    // touch recognizer\n    recognizer = createTouchRecognizer(svg);\n\n    function startGrabCanvas(event) {\n      log('canvas', 'grab start');\n      var lx = 0,\n          ly = 0;\n\n      function update(e) {\n        var dx = e.deltaX - lx,\n            dy = e.deltaY - ly;\n        canvas.scroll({\n          dx: dx,\n          dy: dy\n        });\n        lx = e.deltaX;\n        ly = e.deltaY;\n      }\n\n      function end(e) {\n        recognizer.off('panmove', update);\n        recognizer.off('panend', end);\n        recognizer.off('pancancel', end);\n        log('canvas', 'grab end');\n      }\n\n      recognizer.on('panmove', update);\n      recognizer.on('panend', end);\n      recognizer.on('pancancel', end);\n    }\n\n    function startGrab(event) {\n      var gfx = getGfx(event.target),\n          element = gfx && elementRegistry.get(gfx); // recognizer\n\n      if (move && canvas.getRootElement() !== element) {\n        log('element', 'move start', element, event, true);\n        return move.start(event, element, true);\n      } else {\n        startGrabCanvas(event);\n      }\n    }\n\n    function startZoom(e) {\n      log('canvas', 'zoom start');\n      var zoom = canvas.zoom(),\n          mid = e.center;\n\n      function update(e) {\n        var ratio = 1 - (1 - e.scale) / 1.50,\n            newZoom = Math.max(MIN_ZOOM, Math.min(MAX_ZOOM, ratio * zoom));\n        canvas.zoom(newZoom, mid);\n        stopEvent(e);\n      }\n\n      function end(e) {\n        recognizer.off('pinchmove', update);\n        recognizer.off('pinchend', end);\n        recognizer.off('pinchcancel', end);\n        recognizer.reset(true);\n        log('canvas', 'zoom end');\n      }\n\n      recognizer.on('pinchmove', update);\n      recognizer.on('pinchend', end);\n      recognizer.on('pinchcancel', end);\n    }\n\n    recognizer.on('tap', handler('element.click'));\n    recognizer.on('doubletap', handler('element.dblclick', 1));\n    recognizer.on('panstart', startGrab);\n    recognizer.on('press', startGrab);\n    recognizer.on('pinchstart', startZoom);\n  }\n\n  if (dragging) {\n    // simulate hover during dragging\n    eventBus.on('drag.move', function (event) {\n      var originalEvent = event.originalEvent;\n\n      if (!originalEvent || originalEvent instanceof MouseEvent) {\n        return;\n      }\n\n      var position = toPoint(originalEvent); // this gets really expensive ...\n\n      var node = document.elementFromPoint(position.x, position.y),\n          gfx = getGfx(node),\n          element = gfx && elementRegistry.get(gfx);\n\n      if (element !== event.hover) {\n        if (event.hover) {\n          dragging.out(event);\n        }\n\n        if (element) {\n          dragging.hover({\n            element: element,\n            gfx: gfx\n          });\n          event.hover = element;\n          event.hoverGfx = gfx;\n        }\n      }\n    });\n  }\n\n  if (contextPad) {\n    eventBus.on('contextPad.create', function (event) {\n      var node = event.pad.html; // touch recognizer\n\n      var padRecognizer = createTouchRecognizer(node);\n      padRecognizer.on('panstart', function (event) {\n        log('context-pad', 'panstart', event);\n        contextPad.trigger('dragstart', event, true);\n      });\n      padRecognizer.on('press', function (event) {\n        log('context-pad', 'press', event);\n        contextPad.trigger('dragstart', event, true);\n      });\n      padRecognizer.on('tap', function (event) {\n        log('context-pad', 'tap', event);\n        contextPad.trigger('click', event);\n      });\n    });\n  }\n\n  if (palette) {\n    eventBus.on('palette.create', function (event) {\n      var node = event.container; // touch recognizer\n\n      var padRecognizer = createTouchRecognizer(node);\n      padRecognizer.on('panstart', function (event) {\n        log('palette', 'panstart', event);\n        palette.trigger('dragstart', event, true);\n      });\n      padRecognizer.on('press', function (event) {\n        log('palette', 'press', event);\n        palette.trigger('dragstart', event, true);\n      });\n      padRecognizer.on('tap', function (event) {\n        log('palette', 'tap', event);\n        palette.trigger('click', event);\n      });\n    });\n  }\n\n  eventBus.on('canvas.init', function (event) {\n    initEvents(event.svg);\n  });\n}\nTouchInteractionEvents.$inject = ['injector', 'canvas', 'eventBus', 'elementRegistry', 'interactionEvents', 'touchFix'];","map":{"version":3,"names":["forEach","event","domEvent","closest","domClosest","Hammer","toPoint","MIN_ZOOM","MAX_ZOOM","mouseEvents","log","get","service","injector","stopEvent","preventDefault","stopPropagation","srcEvent","stopImmediatePropagation","createTouchRecognizer","node","stopMouse","e","bind","allowMouse","setTimeout","unbind","recognizer","Manager","inputClass","TouchInput","recognizers","domEvents","tap","Tap","pan","Pan","threshold","press","Press","pinch","Pinch","doubleTap","taps","requireFailure","add","reset","force","session","stopped","stop","i","r","state","curRecognizer","on","defaultPrevented","TouchInteractionEvents","canvas","eventBus","elementRegistry","interactionEvents","dragging","move","contextPad","palette","handler","type","buttonType","gfx","getGfx","target","element","button","fire","initEvents","svg","startGrabCanvas","lx","ly","update","dx","deltaX","dy","deltaY","scroll","end","off","startGrab","getRootElement","start","startZoom","zoom","mid","center","ratio","scale","newZoom","Math","max","min","originalEvent","MouseEvent","position","document","elementFromPoint","x","y","hover","out","hoverGfx","pad","html","padRecognizer","trigger","container","$inject"],"sources":["E:/Old_PC/Study/Angular/test-bpm/node_modules/diagram-js/lib/features/touch/TouchInteractionEvents.js"],"sourcesContent":["import {\n  forEach\n} from 'min-dash';\n\nimport {\n  event as domEvent,\n  closest as domClosest\n} from 'min-dom';\n\nimport Hammer from 'hammerjs';\n\nimport {\n  toPoint\n} from '../../util/Event';\n\nvar MIN_ZOOM = 0.2,\n    MAX_ZOOM = 4;\n\nvar mouseEvents = [\n  'mousedown',\n  'mouseup',\n  'mouseover',\n  'mouseout',\n  'click',\n  'dblclick'\n];\n\nfunction log() {\n\n  // console.log.apply(console, arguments);\n}\n\nfunction get(service, injector) {\n  return injector.get(service, false);\n}\n\nfunction stopEvent(event) {\n\n  event.preventDefault();\n\n  if (typeof event.stopPropagation === 'function') {\n    event.stopPropagation();\n  } else if (event.srcEvent && typeof event.srcEvent.stopPropagation === 'function') {\n\n    // iPhone & iPad\n    event.srcEvent.stopPropagation();\n  }\n\n  if (typeof event.stopImmediatePropagation === 'function') {\n    event.stopImmediatePropagation();\n  }\n}\n\n\nfunction createTouchRecognizer(node) {\n\n  function stopMouse(event) {\n\n    forEach(mouseEvents, function(e) {\n      domEvent.bind(node, e, stopEvent, true);\n    });\n  }\n\n  function allowMouse(event) {\n    setTimeout(function() {\n      forEach(mouseEvents, function(e) {\n        domEvent.unbind(node, e, stopEvent, true);\n      });\n    }, 500);\n  }\n\n  domEvent.bind(node, 'touchstart', stopMouse, true);\n  domEvent.bind(node, 'touchend', allowMouse, true);\n  domEvent.bind(node, 'touchcancel', allowMouse, true);\n\n  // A touch event recognizer that handles\n  // touch events only (we know, we can already handle\n  // mouse events out of the box)\n\n  var recognizer = new Hammer.Manager(node, {\n    inputClass: Hammer.TouchInput,\n    recognizers: [],\n    domEvents: true\n  });\n\n\n  var tap = new Hammer.Tap();\n  var pan = new Hammer.Pan({ threshold: 10 });\n  var press = new Hammer.Press();\n  var pinch = new Hammer.Pinch();\n\n  var doubleTap = new Hammer.Tap({ event: 'doubletap', taps: 2 });\n\n  pinch.requireFailure(pan);\n  pinch.requireFailure(press);\n\n  recognizer.add([ pan, press, pinch, doubleTap, tap ]);\n\n  recognizer.reset = function(force) {\n    var recognizers = this.recognizers,\n        session = this.session;\n\n    if (session.stopped) {\n      return;\n    }\n\n    log('recognizer', 'stop');\n\n    recognizer.stop(force);\n\n    setTimeout(function() {\n      var i, r;\n\n      log('recognizer', 'reset');\n      for (i = 0; (r = recognizers[i]); i++) {\n        r.reset();\n        r.state = 8; // FAILED STATE\n      }\n\n      session.curRecognizer = null;\n    }, 0);\n  };\n\n  recognizer.on('hammer.input', function(event) {\n    if (event.srcEvent.defaultPrevented) {\n      recognizer.reset(true);\n    }\n  });\n\n  return recognizer;\n}\n\n/**\n * A plugin that provides touch events for elements.\n *\n * @param {EventBus} eventBus\n * @param {InteractionEvents} interactionEvents\n */\nexport default function TouchInteractionEvents(\n    injector, canvas, eventBus,\n    elementRegistry, interactionEvents) {\n\n  // optional integrations\n  var dragging = get('dragging', injector),\n      move = get('move', injector),\n      contextPad = get('contextPad', injector),\n      palette = get('palette', injector);\n\n  // the touch recognizer\n  var recognizer;\n\n  function handler(type, buttonType) {\n\n    return function(event) {\n      log('element', type, event);\n\n      var gfx = getGfx(event.target),\n          element = gfx && elementRegistry.get(gfx);\n\n      // translate into an actual mouse click event\n      if (buttonType) {\n        event.srcEvent.button = buttonType;\n      }\n\n      return interactionEvents.fire(type, event, element);\n    };\n  }\n\n\n  function getGfx(target) {\n    var node = domClosest(target, 'svg, .djs-element', true);\n    return node;\n  }\n\n  function initEvents(svg) {\n\n    // touch recognizer\n    recognizer = createTouchRecognizer(svg);\n\n    function startGrabCanvas(event) {\n\n      log('canvas', 'grab start');\n\n      var lx = 0, ly = 0;\n\n      function update(e) {\n\n        var dx = e.deltaX - lx,\n            dy = e.deltaY - ly;\n\n        canvas.scroll({ dx: dx, dy: dy });\n\n        lx = e.deltaX;\n        ly = e.deltaY;\n      }\n\n      function end(e) {\n        recognizer.off('panmove', update);\n        recognizer.off('panend', end);\n        recognizer.off('pancancel', end);\n\n        log('canvas', 'grab end');\n      }\n\n      recognizer.on('panmove', update);\n      recognizer.on('panend', end);\n      recognizer.on('pancancel', end);\n    }\n\n    function startGrab(event) {\n\n      var gfx = getGfx(event.target),\n          element = gfx && elementRegistry.get(gfx);\n\n      // recognizer\n      if (move && canvas.getRootElement() !== element) {\n        log('element', 'move start', element, event, true);\n        return move.start(event, element, true);\n      } else {\n        startGrabCanvas(event);\n      }\n    }\n\n    function startZoom(e) {\n\n      log('canvas', 'zoom start');\n\n      var zoom = canvas.zoom(),\n          mid = e.center;\n\n      function update(e) {\n\n        var ratio = 1 - (1 - e.scale) / 1.50,\n            newZoom = Math.max(MIN_ZOOM, Math.min(MAX_ZOOM, ratio * zoom));\n\n        canvas.zoom(newZoom, mid);\n\n        stopEvent(e);\n      }\n\n      function end(e) {\n        recognizer.off('pinchmove', update);\n        recognizer.off('pinchend', end);\n        recognizer.off('pinchcancel', end);\n\n        recognizer.reset(true);\n\n        log('canvas', 'zoom end');\n      }\n\n      recognizer.on('pinchmove', update);\n      recognizer.on('pinchend', end);\n      recognizer.on('pinchcancel', end);\n    }\n\n    recognizer.on('tap', handler('element.click'));\n    recognizer.on('doubletap', handler('element.dblclick', 1));\n\n    recognizer.on('panstart', startGrab);\n    recognizer.on('press', startGrab);\n\n    recognizer.on('pinchstart', startZoom);\n  }\n\n  if (dragging) {\n\n    // simulate hover during dragging\n    eventBus.on('drag.move', function(event) {\n\n      var originalEvent = event.originalEvent;\n\n      if (!originalEvent || originalEvent instanceof MouseEvent) {\n        return;\n      }\n\n      var position = toPoint(originalEvent);\n\n      // this gets really expensive ...\n      var node = document.elementFromPoint(position.x, position.y),\n          gfx = getGfx(node),\n          element = gfx && elementRegistry.get(gfx);\n\n      if (element !== event.hover) {\n        if (event.hover) {\n          dragging.out(event);\n        }\n\n        if (element) {\n          dragging.hover({ element: element, gfx: gfx });\n\n          event.hover = element;\n          event.hoverGfx = gfx;\n        }\n      }\n    });\n  }\n\n  if (contextPad) {\n\n    eventBus.on('contextPad.create', function(event) {\n      var node = event.pad.html;\n\n      // touch recognizer\n      var padRecognizer = createTouchRecognizer(node);\n\n      padRecognizer.on('panstart', function(event) {\n        log('context-pad', 'panstart', event);\n        contextPad.trigger('dragstart', event, true);\n      });\n\n      padRecognizer.on('press', function(event) {\n        log('context-pad', 'press', event);\n        contextPad.trigger('dragstart', event, true);\n      });\n\n      padRecognizer.on('tap', function(event) {\n        log('context-pad', 'tap', event);\n        contextPad.trigger('click', event);\n      });\n    });\n  }\n\n  if (palette) {\n    eventBus.on('palette.create', function(event) {\n      var node = event.container;\n\n      // touch recognizer\n      var padRecognizer = createTouchRecognizer(node);\n\n      padRecognizer.on('panstart', function(event) {\n        log('palette', 'panstart', event);\n        palette.trigger('dragstart', event, true);\n      });\n\n      padRecognizer.on('press', function(event) {\n        log('palette', 'press', event);\n        palette.trigger('dragstart', event, true);\n      });\n\n      padRecognizer.on('tap', function(event) {\n        log('palette', 'tap', event);\n        palette.trigger('click', event);\n      });\n    });\n  }\n\n  eventBus.on('canvas.init', function(event) {\n    initEvents(event.svg);\n  });\n}\n\n\nTouchInteractionEvents.$inject = [\n  'injector',\n  'canvas',\n  'eventBus',\n  'elementRegistry',\n  'interactionEvents',\n  'touchFix'\n];\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}