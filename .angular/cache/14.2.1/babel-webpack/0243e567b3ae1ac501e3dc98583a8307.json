{"ast":null,"code":"import { some } from 'min-dash';\n/**\n * A handler that implements reversible appending of shapes\n * to a source shape.\n *\n * @param {canvas} Canvas\n * @param {elementFactory} ElementFactory\n * @param {modeling} Modeling\n */\n\nexport default function AppendShapeHandler(modeling) {\n  this._modeling = modeling;\n}\nAppendShapeHandler.$inject = ['modeling']; // api //////////////////////\n\n/**\n * Creates a new shape\n *\n * @param {Object} context\n * @param {ElementDescriptor} context.shape the new shape\n * @param {ElementDescriptor} context.source the source object\n * @param {ElementDescriptor} context.parent the parent object\n * @param {Point} context.position position of the new element\n */\n\nAppendShapeHandler.prototype.preExecute = function (context) {\n  var source = context.source;\n\n  if (!source) {\n    throw new Error('source required');\n  }\n\n  var target = context.target || source.parent,\n      shape = context.shape,\n      hints = context.hints || {};\n  shape = context.shape = this._modeling.createShape(shape, context.position, target, {\n    attach: hints.attach\n  });\n  context.shape = shape;\n};\n\nAppendShapeHandler.prototype.postExecute = function (context) {\n  var hints = context.hints || {};\n\n  if (!existsConnection(context.source, context.shape)) {\n    // create connection\n    if (hints.connectionTarget === context.source) {\n      this._modeling.connect(context.shape, context.source, context.connection);\n    } else {\n      this._modeling.connect(context.source, context.shape, context.connection);\n    }\n  }\n};\n\nfunction existsConnection(source, target) {\n  return some(source.outgoing, function (c) {\n    return c.target === target;\n  });\n}","map":{"version":3,"names":["some","AppendShapeHandler","modeling","_modeling","$inject","prototype","preExecute","context","source","Error","target","parent","shape","hints","createShape","position","attach","postExecute","existsConnection","connectionTarget","connect","connection","outgoing","c"],"sources":["E:/Old_PC/Study/Angular/test-bpm/node_modules/diagram-js/lib/features/modeling/cmd/AppendShapeHandler.js"],"sourcesContent":["import { some } from 'min-dash';\n\n\n/**\n * A handler that implements reversible appending of shapes\n * to a source shape.\n *\n * @param {canvas} Canvas\n * @param {elementFactory} ElementFactory\n * @param {modeling} Modeling\n */\nexport default function AppendShapeHandler(modeling) {\n  this._modeling = modeling;\n}\n\nAppendShapeHandler.$inject = [ 'modeling' ];\n\n\n// api //////////////////////\n\n\n/**\n * Creates a new shape\n *\n * @param {Object} context\n * @param {ElementDescriptor} context.shape the new shape\n * @param {ElementDescriptor} context.source the source object\n * @param {ElementDescriptor} context.parent the parent object\n * @param {Point} context.position position of the new element\n */\nAppendShapeHandler.prototype.preExecute = function(context) {\n\n  var source = context.source;\n\n  if (!source) {\n    throw new Error('source required');\n  }\n\n  var target = context.target || source.parent,\n      shape = context.shape,\n      hints = context.hints || {};\n\n  shape = context.shape =\n    this._modeling.createShape(\n      shape,\n      context.position,\n      target, { attach: hints.attach });\n\n  context.shape = shape;\n};\n\nAppendShapeHandler.prototype.postExecute = function(context) {\n  var hints = context.hints || {};\n\n  if (!existsConnection(context.source, context.shape)) {\n\n    // create connection\n    if (hints.connectionTarget === context.source) {\n      this._modeling.connect(context.shape, context.source, context.connection);\n    } else {\n      this._modeling.connect(context.source, context.shape, context.connection);\n    }\n  }\n};\n\n\nfunction existsConnection(source, target) {\n  return some(source.outgoing, function(c) {\n    return c.target === target;\n  });\n}"],"mappings":"AAAA,SAASA,IAAT,QAAqB,UAArB;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,kBAAT,CAA4BC,QAA5B,EAAsC;EACnD,KAAKC,SAAL,GAAiBD,QAAjB;AACD;AAEDD,kBAAkB,CAACG,OAAnB,GAA6B,CAAE,UAAF,CAA7B,C,CAGA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAH,kBAAkB,CAACI,SAAnB,CAA6BC,UAA7B,GAA0C,UAASC,OAAT,EAAkB;EAE1D,IAAIC,MAAM,GAAGD,OAAO,CAACC,MAArB;;EAEA,IAAI,CAACA,MAAL,EAAa;IACX,MAAM,IAAIC,KAAJ,CAAU,iBAAV,CAAN;EACD;;EAED,IAAIC,MAAM,GAAGH,OAAO,CAACG,MAAR,IAAkBF,MAAM,CAACG,MAAtC;EAAA,IACIC,KAAK,GAAGL,OAAO,CAACK,KADpB;EAAA,IAEIC,KAAK,GAAGN,OAAO,CAACM,KAAR,IAAiB,EAF7B;EAIAD,KAAK,GAAGL,OAAO,CAACK,KAAR,GACN,KAAKT,SAAL,CAAeW,WAAf,CACEF,KADF,EAEEL,OAAO,CAACQ,QAFV,EAGEL,MAHF,EAGU;IAAEM,MAAM,EAAEH,KAAK,CAACG;EAAhB,CAHV,CADF;EAMAT,OAAO,CAACK,KAAR,GAAgBA,KAAhB;AACD,CAnBD;;AAqBAX,kBAAkB,CAACI,SAAnB,CAA6BY,WAA7B,GAA2C,UAASV,OAAT,EAAkB;EAC3D,IAAIM,KAAK,GAAGN,OAAO,CAACM,KAAR,IAAiB,EAA7B;;EAEA,IAAI,CAACK,gBAAgB,CAACX,OAAO,CAACC,MAAT,EAAiBD,OAAO,CAACK,KAAzB,CAArB,EAAsD;IAEpD;IACA,IAAIC,KAAK,CAACM,gBAAN,KAA2BZ,OAAO,CAACC,MAAvC,EAA+C;MAC7C,KAAKL,SAAL,CAAeiB,OAAf,CAAuBb,OAAO,CAACK,KAA/B,EAAsCL,OAAO,CAACC,MAA9C,EAAsDD,OAAO,CAACc,UAA9D;IACD,CAFD,MAEO;MACL,KAAKlB,SAAL,CAAeiB,OAAf,CAAuBb,OAAO,CAACC,MAA/B,EAAuCD,OAAO,CAACK,KAA/C,EAAsDL,OAAO,CAACc,UAA9D;IACD;EACF;AACF,CAZD;;AAeA,SAASH,gBAAT,CAA0BV,MAA1B,EAAkCE,MAAlC,EAA0C;EACxC,OAAOV,IAAI,CAACQ,MAAM,CAACc,QAAR,EAAkB,UAASC,CAAT,EAAY;IACvC,OAAOA,CAAC,CAACb,MAAF,KAAaA,MAApB;EACD,CAFU,CAAX;AAGD"},"metadata":{},"sourceType":"module"}