{"ast":null,"code":"import { forEach, sortBy } from 'min-dash';\n/**\n * A handler that distributes elements evenly.\n */\n\nexport default function DistributeElements(modeling) {\n  this._modeling = modeling;\n}\nDistributeElements.$inject = ['modeling'];\nvar OFF_AXIS = {\n  x: 'y',\n  y: 'x'\n};\n\nDistributeElements.prototype.preExecute = function (context) {\n  var modeling = this._modeling;\n  var groups = context.groups,\n      axis = context.axis,\n      dimension = context.dimension;\n\n  function updateRange(group, element) {\n    group.range.min = Math.min(element[axis], group.range.min);\n    group.range.max = Math.max(element[axis] + element[dimension], group.range.max);\n  }\n\n  function center(element) {\n    return element[axis] + element[dimension] / 2;\n  }\n\n  function lastIdx(arr) {\n    return arr.length - 1;\n  }\n\n  function rangeDiff(range) {\n    return range.max - range.min;\n  }\n\n  function centerElement(refCenter, element) {\n    var delta = {\n      y: 0\n    };\n    delta[axis] = refCenter - center(element);\n\n    if (delta[axis]) {\n      delta[OFF_AXIS[axis]] = 0;\n      modeling.moveElements([element], delta, element.parent);\n    }\n  }\n\n  var firstGroup = groups[0],\n      lastGroupIdx = lastIdx(groups),\n      lastGroup = groups[lastGroupIdx];\n  var margin,\n      spaceInBetween,\n      groupsSize = 0; // the size of each range\n\n  forEach(groups, function (group, idx) {\n    var sortedElements, refElem, refCenter;\n\n    if (group.elements.length < 2) {\n      if (idx && idx !== groups.length - 1) {\n        updateRange(group, group.elements[0]);\n        groupsSize += rangeDiff(group.range);\n      }\n\n      return;\n    }\n\n    sortedElements = sortBy(group.elements, axis);\n    refElem = sortedElements[0];\n\n    if (idx === lastGroupIdx) {\n      refElem = sortedElements[lastIdx(sortedElements)];\n    }\n\n    refCenter = center(refElem); // wanna update the ranges after the shapes have been centered\n\n    group.range = null;\n    forEach(sortedElements, function (element) {\n      centerElement(refCenter, element);\n\n      if (group.range === null) {\n        group.range = {\n          min: element[axis],\n          max: element[axis] + element[dimension]\n        };\n        return;\n      } // update group's range after centering the range elements\n\n\n      updateRange(group, element);\n    });\n\n    if (idx && idx !== groups.length - 1) {\n      groupsSize += rangeDiff(group.range);\n    }\n  });\n  spaceInBetween = Math.abs(lastGroup.range.min - firstGroup.range.max);\n  margin = Math.round((spaceInBetween - groupsSize) / (groups.length - 1));\n\n  if (margin < groups.length - 1) {\n    return;\n  }\n\n  forEach(groups, function (group, groupIdx) {\n    var delta = {},\n        prevGroup;\n\n    if (group === firstGroup || group === lastGroup) {\n      return;\n    }\n\n    prevGroup = groups[groupIdx - 1];\n    group.range.max = 0;\n    forEach(group.elements, function (element, idx) {\n      delta[OFF_AXIS[axis]] = 0;\n      delta[axis] = prevGroup.range.max - element[axis] + margin;\n\n      if (group.range.min !== element[axis]) {\n        delta[axis] += element[axis] - group.range.min;\n      }\n\n      if (delta[axis]) {\n        modeling.moveElements([element], delta, element.parent);\n      }\n\n      group.range.max = Math.max(element[axis] + element[dimension], idx ? group.range.max : 0);\n    });\n  });\n};\n\nDistributeElements.prototype.postExecute = function (context) {};","map":{"version":3,"names":["forEach","sortBy","DistributeElements","modeling","_modeling","$inject","OFF_AXIS","x","y","prototype","preExecute","context","groups","axis","dimension","updateRange","group","element","range","min","Math","max","center","lastIdx","arr","length","rangeDiff","centerElement","refCenter","delta","moveElements","parent","firstGroup","lastGroupIdx","lastGroup","margin","spaceInBetween","groupsSize","idx","sortedElements","refElem","elements","abs","round","groupIdx","prevGroup","postExecute"],"sources":["E:/Old_PC/Study/Angular/test-bpm/node_modules/diagram-js/lib/features/modeling/cmd/DistributeElementsHandler.js"],"sourcesContent":["import {\n  forEach,\n  sortBy\n} from 'min-dash';\n\n\n/**\n * A handler that distributes elements evenly.\n */\nexport default function DistributeElements(modeling) {\n  this._modeling = modeling;\n}\n\nDistributeElements.$inject = [ 'modeling' ];\n\nvar OFF_AXIS = {\n  x: 'y',\n  y: 'x'\n};\n\nDistributeElements.prototype.preExecute = function(context) {\n  var modeling = this._modeling;\n\n  var groups = context.groups,\n      axis = context.axis,\n      dimension = context.dimension;\n\n  function updateRange(group, element) {\n    group.range.min = Math.min(element[axis], group.range.min);\n    group.range.max = Math.max(element[axis] + element[dimension], group.range.max);\n  }\n\n  function center(element) {\n    return element[axis] + element[dimension] / 2;\n  }\n\n  function lastIdx(arr) {\n    return arr.length - 1;\n  }\n\n  function rangeDiff(range) {\n    return range.max - range.min;\n  }\n\n  function centerElement(refCenter, element) {\n    var delta = { y: 0 };\n\n    delta[axis] = refCenter - center(element);\n\n    if (delta[axis]) {\n\n      delta[OFF_AXIS[axis]] = 0;\n\n      modeling.moveElements([ element ], delta, element.parent);\n    }\n  }\n\n  var firstGroup = groups[0],\n      lastGroupIdx = lastIdx(groups),\n      lastGroup = groups[ lastGroupIdx ];\n\n  var margin,\n      spaceInBetween,\n      groupsSize = 0; // the size of each range\n\n  forEach(groups, function(group, idx) {\n    var sortedElements,\n        refElem,\n        refCenter;\n\n    if (group.elements.length < 2) {\n      if (idx && idx !== groups.length - 1) {\n        updateRange(group, group.elements[0]);\n\n        groupsSize += rangeDiff(group.range);\n      }\n      return;\n    }\n\n    sortedElements = sortBy(group.elements, axis);\n\n    refElem = sortedElements[0];\n\n    if (idx === lastGroupIdx) {\n      refElem = sortedElements[lastIdx(sortedElements)];\n    }\n\n    refCenter = center(refElem);\n\n    // wanna update the ranges after the shapes have been centered\n    group.range = null;\n\n    forEach(sortedElements, function(element) {\n\n      centerElement(refCenter, element);\n\n      if (group.range === null) {\n        group.range = {\n          min: element[axis],\n          max: element[axis] + element[dimension]\n        };\n\n        return;\n      }\n\n      // update group's range after centering the range elements\n      updateRange(group, element);\n    });\n\n    if (idx && idx !== groups.length - 1) {\n      groupsSize += rangeDiff(group.range);\n    }\n  });\n\n  spaceInBetween = Math.abs(lastGroup.range.min - firstGroup.range.max);\n\n  margin = Math.round((spaceInBetween - groupsSize) / (groups.length - 1));\n\n  if (margin < groups.length - 1) {\n    return;\n  }\n\n  forEach(groups, function(group, groupIdx) {\n    var delta = {},\n        prevGroup;\n\n    if (group === firstGroup || group === lastGroup) {\n      return;\n    }\n\n    prevGroup = groups[groupIdx - 1];\n\n    group.range.max = 0;\n\n    forEach(group.elements, function(element, idx) {\n      delta[OFF_AXIS[axis]] = 0;\n      delta[axis] = (prevGroup.range.max - element[axis]) + margin;\n\n      if (group.range.min !== element[axis]) {\n        delta[axis] += element[axis] - group.range.min;\n      }\n\n      if (delta[axis]) {\n        modeling.moveElements([ element ], delta, element.parent);\n      }\n\n      group.range.max = Math.max(element[axis] + element[dimension], idx ? group.range.max : 0);\n    });\n  });\n};\n\nDistributeElements.prototype.postExecute = function(context) {\n\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}