{"ast":null,"code":"import inherits from 'inherits-browser';\nimport CommandInterceptor from '../../command/CommandInterceptor';\n/**\n * A modeling behavior that ensures we set the correct root element\n * as we undo and redo commands.\n *\n * @param {Canvas} canvas\n * @param {didi.Injector} injector\n */\n\nexport default function RootElementsBehavior(canvas, injector) {\n  injector.invoke(CommandInterceptor, this);\n  this.executed(function (event) {\n    var context = event.context;\n\n    if (context.rootElement) {\n      canvas.setRootElement(context.rootElement);\n    } else {\n      context.rootElement = canvas.getRootElement();\n    }\n  });\n  this.revert(function (event) {\n    var context = event.context;\n\n    if (context.rootElement) {\n      canvas.setRootElement(context.rootElement);\n    }\n  });\n}\ninherits(RootElementsBehavior, CommandInterceptor);\nRootElementsBehavior.$inject = ['canvas', 'injector'];","map":{"version":3,"names":["inherits","CommandInterceptor","RootElementsBehavior","canvas","injector","invoke","executed","event","context","rootElement","setRootElement","getRootElement","revert","$inject"],"sources":["E:/Old_PC/Study/Angular/test-bpm/node_modules/diagram-js/lib/features/root-elements/RootElementsBehavior.js"],"sourcesContent":["import inherits from 'inherits-browser';\n\nimport CommandInterceptor from '../../command/CommandInterceptor';\n\n\n/**\n * A modeling behavior that ensures we set the correct root element\n * as we undo and redo commands.\n *\n * @param {Canvas} canvas\n * @param {didi.Injector} injector\n */\nexport default function RootElementsBehavior(canvas, injector) {\n\n  injector.invoke(CommandInterceptor, this);\n\n  this.executed(function(event) {\n    var context = event.context;\n\n    if (context.rootElement) {\n      canvas.setRootElement(context.rootElement);\n    } else {\n      context.rootElement = canvas.getRootElement();\n    }\n  });\n\n  this.revert(function(event) {\n    var context = event.context;\n\n    if (context.rootElement) {\n      canvas.setRootElement(context.rootElement);\n    }\n  });\n}\n\ninherits(RootElementsBehavior, CommandInterceptor);\n\nRootElementsBehavior.$inject = [ 'canvas', 'injector' ];"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,kBAArB;AAEA,OAAOC,kBAAP,MAA+B,kCAA/B;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,oBAAT,CAA8BC,MAA9B,EAAsCC,QAAtC,EAAgD;EAE7DA,QAAQ,CAACC,MAAT,CAAgBJ,kBAAhB,EAAoC,IAApC;EAEA,KAAKK,QAAL,CAAc,UAASC,KAAT,EAAgB;IAC5B,IAAIC,OAAO,GAAGD,KAAK,CAACC,OAApB;;IAEA,IAAIA,OAAO,CAACC,WAAZ,EAAyB;MACvBN,MAAM,CAACO,cAAP,CAAsBF,OAAO,CAACC,WAA9B;IACD,CAFD,MAEO;MACLD,OAAO,CAACC,WAAR,GAAsBN,MAAM,CAACQ,cAAP,EAAtB;IACD;EACF,CARD;EAUA,KAAKC,MAAL,CAAY,UAASL,KAAT,EAAgB;IAC1B,IAAIC,OAAO,GAAGD,KAAK,CAACC,OAApB;;IAEA,IAAIA,OAAO,CAACC,WAAZ,EAAyB;MACvBN,MAAM,CAACO,cAAP,CAAsBF,OAAO,CAACC,WAA9B;IACD;EACF,CAND;AAOD;AAEDT,QAAQ,CAACE,oBAAD,EAAuBD,kBAAvB,CAAR;AAEAC,oBAAoB,CAACW,OAArB,GAA+B,CAAE,QAAF,EAAY,UAAZ,CAA/B"},"metadata":{},"sourceType":"module"}