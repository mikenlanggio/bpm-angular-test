{"ast":null,"code":"import inherits from 'inherits-browser';\nimport BaseModeler from './BaseModeler';\nimport Viewer from './Viewer';\nimport NavigatedViewer from './NavigatedViewer';\nimport KeyboardMoveModule from 'diagram-js/lib/navigation/keyboard-move';\nimport MoveCanvasModule from 'diagram-js/lib/navigation/movecanvas';\nimport TouchModule from 'diagram-js/lib/navigation/touch';\nimport ZoomScrollModule from 'diagram-js/lib/navigation/zoomscroll';\nimport AlignElementsModule from './features/align-elements';\nimport AutoPlaceModule from './features/auto-place';\nimport AutoResizeModule from './features/auto-resize';\nimport AutoScrollModule from 'diagram-js/lib/features/auto-scroll';\nimport BendpointsModule from 'diagram-js/lib/features/bendpoints';\nimport ConnectModule from 'diagram-js/lib/features/connect';\nimport ConnectionPreviewModule from 'diagram-js/lib/features/connection-preview';\nimport ContextPadModule from './features/context-pad';\nimport CopyPasteModule from './features/copy-paste';\nimport CreateModule from 'diagram-js/lib/features/create';\nimport DistributeElementsModule from './features/distribute-elements';\nimport EditorActionsModule from './features/editor-actions';\nimport GridSnappingModule from './features/grid-snapping';\nimport InteractionEventsModule from './features/interaction-events';\nimport KeyboardModule from './features/keyboard';\nimport KeyboardMoveSelectionModule from 'diagram-js/lib/features/keyboard-move-selection';\nimport LabelEditingModule from './features/label-editing';\nimport ModelingModule from './features/modeling';\nimport MoveModule from 'diagram-js/lib/features/move';\nimport PaletteModule from './features/palette';\nimport ReplacePreviewModule from './features/replace-preview';\nimport ResizeModule from 'diagram-js/lib/features/resize';\nimport SnappingModule from './features/snapping';\nimport SearchModule from './features/search';\nimport { wrapForCompatibility } from './util/CompatibilityUtil';\nvar initialDiagram = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>' + '<bpmn:definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" ' + 'xmlns:bpmn=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" ' + 'xmlns:bpmndi=\"http://www.omg.org/spec/BPMN/20100524/DI\" ' + 'xmlns:dc=\"http://www.omg.org/spec/DD/20100524/DC\" ' + 'targetNamespace=\"http://bpmn.io/schema/bpmn\" ' + 'id=\"Definitions_1\">' + '<bpmn:process id=\"Process_1\" isExecutable=\"false\">' + '<bpmn:startEvent id=\"StartEvent_1\"/>' + '</bpmn:process>' + '<bpmndi:BPMNDiagram id=\"BPMNDiagram_1\">' + '<bpmndi:BPMNPlane id=\"BPMNPlane_1\" bpmnElement=\"Process_1\">' + '<bpmndi:BPMNShape id=\"_BPMNShape_StartEvent_2\" bpmnElement=\"StartEvent_1\">' + '<dc:Bounds height=\"36.0\" width=\"36.0\" x=\"173.0\" y=\"102.0\"/>' + '</bpmndi:BPMNShape>' + '</bpmndi:BPMNPlane>' + '</bpmndi:BPMNDiagram>' + '</bpmn:definitions>';\n/**\n * A modeler for BPMN 2.0 diagrams.\n *\n *\n * ## Extending the Modeler\n *\n * In order to extend the viewer pass extension modules to bootstrap via the\n * `additionalModules` option. An extension module is an object that exposes\n * named services.\n *\n * The following example depicts the integration of a simple\n * logging component that integrates with interaction events:\n *\n *\n * ```javascript\n *\n * // logging component\n * function InteractionLogger(eventBus) {\n *   eventBus.on('element.hover', function(event) {\n *     console.log()\n *   })\n * }\n *\n * InteractionLogger.$inject = [ 'eventBus' ]; // minification save\n *\n * // extension module\n * var extensionModule = {\n *   __init__: [ 'interactionLogger' ],\n *   interactionLogger: [ 'type', InteractionLogger ]\n * };\n *\n * // extend the viewer\n * var bpmnModeler = new Modeler({ additionalModules: [ extensionModule ] });\n * bpmnModeler.importXML(...);\n * ```\n *\n *\n * ## Customizing / Replacing Components\n *\n * You can replace individual diagram components by redefining them in override modules.\n * This works for all components, including those defined in the core.\n *\n * Pass in override modules via the `options.additionalModules` flag like this:\n *\n * ```javascript\n * function CustomContextPadProvider(contextPad) {\n *\n *   contextPad.registerProvider(this);\n *\n *   this.getContextPadEntries = function(element) {\n *     // no entries, effectively disable the context pad\n *     return {};\n *   };\n * }\n *\n * CustomContextPadProvider.$inject = [ 'contextPad' ];\n *\n * var overrideModule = {\n *   contextPadProvider: [ 'type', CustomContextPadProvider ]\n * };\n *\n * var bpmnModeler = new Modeler({ additionalModules: [ overrideModule ]});\n * ```\n *\n * @param {Object} [options] configuration options to pass to the viewer\n * @param {DOMElement} [options.container] the container to render the viewer in, defaults to body.\n * @param {string|number} [options.width] the width of the viewer\n * @param {string|number} [options.height] the height of the viewer\n * @param {Object} [options.moddleExtensions] extension packages to provide\n * @param {Array<didi.Module>} [options.modules] a list of modules to override the default modules\n * @param {Array<didi.Module>} [options.additionalModules] a list of modules to use with the default modules\n */\n\nexport default function Modeler(options) {\n  BaseModeler.call(this, options);\n}\ninherits(Modeler, BaseModeler);\nModeler.Viewer = Viewer;\nModeler.NavigatedViewer = NavigatedViewer;\n/**\n* The createDiagram result.\n*\n* @typedef {Object} CreateDiagramResult\n*\n* @property {Array<string>} warnings\n*/\n\n/**\n* The createDiagram error.\n*\n* @typedef {Error} CreateDiagramError\n*\n* @property {Array<string>} warnings\n*/\n\n/**\n * Create a new diagram to start modeling.\n *\n * Returns {Promise<CreateDiagramResult, CreateDiagramError>}\n */\n\nModeler.prototype.createDiagram = wrapForCompatibility(function createDiagram() {\n  return this.importXML(initialDiagram);\n});\nModeler.prototype._interactionModules = [// non-modeling components\nKeyboardMoveModule, MoveCanvasModule, TouchModule, ZoomScrollModule];\nModeler.prototype._modelingModules = [// modeling components\nAlignElementsModule, AutoPlaceModule, AutoScrollModule, AutoResizeModule, BendpointsModule, ConnectModule, ConnectionPreviewModule, ContextPadModule, CopyPasteModule, CreateModule, DistributeElementsModule, EditorActionsModule, GridSnappingModule, InteractionEventsModule, KeyboardModule, KeyboardMoveSelectionModule, LabelEditingModule, ModelingModule, MoveModule, PaletteModule, ReplacePreviewModule, ResizeModule, SnappingModule, SearchModule]; // modules the modeler is composed of\n//\n// - viewer modules\n// - interaction modules\n// - modeling modules\n\nModeler.prototype._modules = [].concat(Viewer.prototype._modules, Modeler.prototype._interactionModules, Modeler.prototype._modelingModules);","map":{"version":3,"names":["inherits","BaseModeler","Viewer","NavigatedViewer","KeyboardMoveModule","MoveCanvasModule","TouchModule","ZoomScrollModule","AlignElementsModule","AutoPlaceModule","AutoResizeModule","AutoScrollModule","BendpointsModule","ConnectModule","ConnectionPreviewModule","ContextPadModule","CopyPasteModule","CreateModule","DistributeElementsModule","EditorActionsModule","GridSnappingModule","InteractionEventsModule","KeyboardModule","KeyboardMoveSelectionModule","LabelEditingModule","ModelingModule","MoveModule","PaletteModule","ReplacePreviewModule","ResizeModule","SnappingModule","SearchModule","wrapForCompatibility","initialDiagram","Modeler","options","call","prototype","createDiagram","importXML","_interactionModules","_modelingModules","_modules","concat"],"sources":["E:/Old_PC/Study/Angular/test-bpm/node_modules/bpmn-js/lib/Modeler.js"],"sourcesContent":["import inherits from 'inherits-browser';\n\nimport BaseModeler from './BaseModeler';\n\nimport Viewer from './Viewer';\nimport NavigatedViewer from './NavigatedViewer';\n\nimport KeyboardMoveModule from 'diagram-js/lib/navigation/keyboard-move';\nimport MoveCanvasModule from 'diagram-js/lib/navigation/movecanvas';\nimport TouchModule from 'diagram-js/lib/navigation/touch';\nimport ZoomScrollModule from 'diagram-js/lib/navigation/zoomscroll';\n\nimport AlignElementsModule from './features/align-elements';\nimport AutoPlaceModule from './features/auto-place';\nimport AutoResizeModule from './features/auto-resize';\nimport AutoScrollModule from 'diagram-js/lib/features/auto-scroll';\nimport BendpointsModule from 'diagram-js/lib/features/bendpoints';\nimport ConnectModule from 'diagram-js/lib/features/connect';\nimport ConnectionPreviewModule from 'diagram-js/lib/features/connection-preview';\nimport ContextPadModule from './features/context-pad';\nimport CopyPasteModule from './features/copy-paste';\nimport CreateModule from 'diagram-js/lib/features/create';\nimport DistributeElementsModule from './features/distribute-elements';\nimport EditorActionsModule from './features/editor-actions';\nimport GridSnappingModule from './features/grid-snapping';\nimport InteractionEventsModule from './features/interaction-events';\nimport KeyboardModule from './features/keyboard';\nimport KeyboardMoveSelectionModule from 'diagram-js/lib/features/keyboard-move-selection';\nimport LabelEditingModule from './features/label-editing';\nimport ModelingModule from './features/modeling';\nimport MoveModule from 'diagram-js/lib/features/move';\nimport PaletteModule from './features/palette';\nimport ReplacePreviewModule from './features/replace-preview';\nimport ResizeModule from 'diagram-js/lib/features/resize';\nimport SnappingModule from './features/snapping';\nimport SearchModule from './features/search';\n\nimport {\n  wrapForCompatibility\n} from './util/CompatibilityUtil';\n\nvar initialDiagram =\n  '<?xml version=\"1.0\" encoding=\"UTF-8\"?>' +\n  '<bpmn:definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" ' +\n                    'xmlns:bpmn=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" ' +\n                    'xmlns:bpmndi=\"http://www.omg.org/spec/BPMN/20100524/DI\" ' +\n                    'xmlns:dc=\"http://www.omg.org/spec/DD/20100524/DC\" ' +\n                    'targetNamespace=\"http://bpmn.io/schema/bpmn\" ' +\n                    'id=\"Definitions_1\">' +\n    '<bpmn:process id=\"Process_1\" isExecutable=\"false\">' +\n      '<bpmn:startEvent id=\"StartEvent_1\"/>' +\n    '</bpmn:process>' +\n    '<bpmndi:BPMNDiagram id=\"BPMNDiagram_1\">' +\n      '<bpmndi:BPMNPlane id=\"BPMNPlane_1\" bpmnElement=\"Process_1\">' +\n        '<bpmndi:BPMNShape id=\"_BPMNShape_StartEvent_2\" bpmnElement=\"StartEvent_1\">' +\n          '<dc:Bounds height=\"36.0\" width=\"36.0\" x=\"173.0\" y=\"102.0\"/>' +\n        '</bpmndi:BPMNShape>' +\n      '</bpmndi:BPMNPlane>' +\n    '</bpmndi:BPMNDiagram>' +\n  '</bpmn:definitions>';\n\n\n/**\n * A modeler for BPMN 2.0 diagrams.\n *\n *\n * ## Extending the Modeler\n *\n * In order to extend the viewer pass extension modules to bootstrap via the\n * `additionalModules` option. An extension module is an object that exposes\n * named services.\n *\n * The following example depicts the integration of a simple\n * logging component that integrates with interaction events:\n *\n *\n * ```javascript\n *\n * // logging component\n * function InteractionLogger(eventBus) {\n *   eventBus.on('element.hover', function(event) {\n *     console.log()\n *   })\n * }\n *\n * InteractionLogger.$inject = [ 'eventBus' ]; // minification save\n *\n * // extension module\n * var extensionModule = {\n *   __init__: [ 'interactionLogger' ],\n *   interactionLogger: [ 'type', InteractionLogger ]\n * };\n *\n * // extend the viewer\n * var bpmnModeler = new Modeler({ additionalModules: [ extensionModule ] });\n * bpmnModeler.importXML(...);\n * ```\n *\n *\n * ## Customizing / Replacing Components\n *\n * You can replace individual diagram components by redefining them in override modules.\n * This works for all components, including those defined in the core.\n *\n * Pass in override modules via the `options.additionalModules` flag like this:\n *\n * ```javascript\n * function CustomContextPadProvider(contextPad) {\n *\n *   contextPad.registerProvider(this);\n *\n *   this.getContextPadEntries = function(element) {\n *     // no entries, effectively disable the context pad\n *     return {};\n *   };\n * }\n *\n * CustomContextPadProvider.$inject = [ 'contextPad' ];\n *\n * var overrideModule = {\n *   contextPadProvider: [ 'type', CustomContextPadProvider ]\n * };\n *\n * var bpmnModeler = new Modeler({ additionalModules: [ overrideModule ]});\n * ```\n *\n * @param {Object} [options] configuration options to pass to the viewer\n * @param {DOMElement} [options.container] the container to render the viewer in, defaults to body.\n * @param {string|number} [options.width] the width of the viewer\n * @param {string|number} [options.height] the height of the viewer\n * @param {Object} [options.moddleExtensions] extension packages to provide\n * @param {Array<didi.Module>} [options.modules] a list of modules to override the default modules\n * @param {Array<didi.Module>} [options.additionalModules] a list of modules to use with the default modules\n */\nexport default function Modeler(options) {\n  BaseModeler.call(this, options);\n}\n\ninherits(Modeler, BaseModeler);\n\n\nModeler.Viewer = Viewer;\nModeler.NavigatedViewer = NavigatedViewer;\n\n/**\n* The createDiagram result.\n*\n* @typedef {Object} CreateDiagramResult\n*\n* @property {Array<string>} warnings\n*/\n\n/**\n* The createDiagram error.\n*\n* @typedef {Error} CreateDiagramError\n*\n* @property {Array<string>} warnings\n*/\n\n/**\n * Create a new diagram to start modeling.\n *\n * Returns {Promise<CreateDiagramResult, CreateDiagramError>}\n */\nModeler.prototype.createDiagram = wrapForCompatibility(function createDiagram() {\n  return this.importXML(initialDiagram);\n});\n\n\nModeler.prototype._interactionModules = [\n\n  // non-modeling components\n  KeyboardMoveModule,\n  MoveCanvasModule,\n  TouchModule,\n  ZoomScrollModule\n];\n\nModeler.prototype._modelingModules = [\n\n  // modeling components\n  AlignElementsModule,\n  AutoPlaceModule,\n  AutoScrollModule,\n  AutoResizeModule,\n  BendpointsModule,\n  ConnectModule,\n  ConnectionPreviewModule,\n  ContextPadModule,\n  CopyPasteModule,\n  CreateModule,\n  DistributeElementsModule,\n  EditorActionsModule,\n  GridSnappingModule,\n  InteractionEventsModule,\n  KeyboardModule,\n  KeyboardMoveSelectionModule,\n  LabelEditingModule,\n  ModelingModule,\n  MoveModule,\n  PaletteModule,\n  ReplacePreviewModule,\n  ResizeModule,\n  SnappingModule,\n  SearchModule\n];\n\n\n// modules the modeler is composed of\n//\n// - viewer modules\n// - interaction modules\n// - modeling modules\n\nModeler.prototype._modules = [].concat(\n  Viewer.prototype._modules,\n  Modeler.prototype._interactionModules,\n  Modeler.prototype._modelingModules\n);\n"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,kBAArB;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AAEA,OAAOC,kBAAP,MAA+B,yCAA/B;AACA,OAAOC,gBAAP,MAA6B,sCAA7B;AACA,OAAOC,WAAP,MAAwB,iCAAxB;AACA,OAAOC,gBAAP,MAA6B,sCAA7B;AAEA,OAAOC,mBAAP,MAAgC,2BAAhC;AACA,OAAOC,eAAP,MAA4B,uBAA5B;AACA,OAAOC,gBAAP,MAA6B,wBAA7B;AACA,OAAOC,gBAAP,MAA6B,qCAA7B;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,uBAAP,MAAoC,4CAApC;AACA,OAAOC,gBAAP,MAA6B,wBAA7B;AACA,OAAOC,eAAP,MAA4B,uBAA5B;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,wBAAP,MAAqC,gCAArC;AACA,OAAOC,mBAAP,MAAgC,2BAAhC;AACA,OAAOC,kBAAP,MAA+B,0BAA/B;AACA,OAAOC,uBAAP,MAAoC,+BAApC;AACA,OAAOC,cAAP,MAA2B,qBAA3B;AACA,OAAOC,2BAAP,MAAwC,iDAAxC;AACA,OAAOC,kBAAP,MAA+B,0BAA/B;AACA,OAAOC,cAAP,MAA2B,qBAA3B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,OAAOC,oBAAP,MAAiC,4BAAjC;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,cAAP,MAA2B,qBAA3B;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AAEA,SACEC,oBADF,QAEO,0BAFP;AAIA,IAAIC,cAAc,GAChB,2CACA,0EADA,GAEkB,2DAFlB,GAGkB,0DAHlB,GAIkB,oDAJlB,GAKkB,+CALlB,GAMkB,qBANlB,GAOE,oDAPF,GAQI,sCARJ,GASE,iBATF,GAUE,yCAVF,GAWI,6DAXJ,GAYM,4EAZN,GAaQ,6DAbR,GAcM,qBAdN,GAeI,qBAfJ,GAgBE,uBAhBF,GAiBA,qBAlBF;AAqBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,OAAT,CAAiBC,OAAjB,EAA0B;EACvClC,WAAW,CAACmC,IAAZ,CAAiB,IAAjB,EAAuBD,OAAvB;AACD;AAEDnC,QAAQ,CAACkC,OAAD,EAAUjC,WAAV,CAAR;AAGAiC,OAAO,CAAChC,MAAR,GAAiBA,MAAjB;AACAgC,OAAO,CAAC/B,eAAR,GAA0BA,eAA1B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AACA+B,OAAO,CAACG,SAAR,CAAkBC,aAAlB,GAAkCN,oBAAoB,CAAC,SAASM,aAAT,GAAyB;EAC9E,OAAO,KAAKC,SAAL,CAAeN,cAAf,CAAP;AACD,CAFqD,CAAtD;AAKAC,OAAO,CAACG,SAAR,CAAkBG,mBAAlB,GAAwC,CAEtC;AACApC,kBAHsC,EAItCC,gBAJsC,EAKtCC,WALsC,EAMtCC,gBANsC,CAAxC;AASA2B,OAAO,CAACG,SAAR,CAAkBI,gBAAlB,GAAqC,CAEnC;AACAjC,mBAHmC,EAInCC,eAJmC,EAKnCE,gBALmC,EAMnCD,gBANmC,EAOnCE,gBAPmC,EAQnCC,aARmC,EASnCC,uBATmC,EAUnCC,gBAVmC,EAWnCC,eAXmC,EAYnCC,YAZmC,EAanCC,wBAbmC,EAcnCC,mBAdmC,EAenCC,kBAfmC,EAgBnCC,uBAhBmC,EAiBnCC,cAjBmC,EAkBnCC,2BAlBmC,EAmBnCC,kBAnBmC,EAoBnCC,cApBmC,EAqBnCC,UArBmC,EAsBnCC,aAtBmC,EAuBnCC,oBAvBmC,EAwBnCC,YAxBmC,EAyBnCC,cAzBmC,EA0BnCC,YA1BmC,CAArC,C,CA8BA;AACA;AACA;AACA;AACA;;AAEAG,OAAO,CAACG,SAAR,CAAkBK,QAAlB,GAA6B,GAAGC,MAAH,CAC3BzC,MAAM,CAACmC,SAAP,CAAiBK,QADU,EAE3BR,OAAO,CAACG,SAAR,CAAkBG,mBAFS,EAG3BN,OAAO,CAACG,SAAR,CAAkBI,gBAHS,CAA7B"},"metadata":{},"sourceType":"module"}