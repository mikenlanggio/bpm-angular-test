{"ast":null,"code":"import { is } from '../../../util/ModelUtil';\nimport { isExpanded } from '../../../util/DiUtil';\nimport { asTRBL } from 'diagram-js/lib/layout/LayoutUtil';\nimport { collectLanes, getLanesRoot } from '../util/LaneUtil';\nvar HIGH_PRIORITY = 1500;\nexport var GROUP_MIN_DIMENSIONS = {\n  width: 140,\n  height: 120\n};\nexport var LANE_MIN_DIMENSIONS = {\n  width: 300,\n  height: 60\n};\nexport var PARTICIPANT_MIN_DIMENSIONS = {\n  width: 300,\n  height: 150\n};\nexport var SUB_PROCESS_MIN_DIMENSIONS = {\n  width: 140,\n  height: 120\n};\nexport var TEXT_ANNOTATION_MIN_DIMENSIONS = {\n  width: 50,\n  height: 30\n};\n/**\r\n * Set minimum bounds/resize constraints on resize.\r\n *\r\n * @param {EventBus} eventBus\r\n */\n\nexport default function ResizeBehavior(eventBus) {\n  eventBus.on('resize.start', HIGH_PRIORITY, function (event) {\n    var context = event.context,\n        shape = context.shape,\n        direction = context.direction,\n        balanced = context.balanced;\n\n    if (is(shape, 'bpmn:Lane') || is(shape, 'bpmn:Participant')) {\n      context.resizeConstraints = getParticipantResizeConstraints(shape, direction, balanced);\n    }\n\n    if (is(shape, 'bpmn:Participant')) {\n      context.minDimensions = PARTICIPANT_MIN_DIMENSIONS;\n    }\n\n    if (is(shape, 'bpmn:SubProcess') && isExpanded(shape)) {\n      context.minDimensions = SUB_PROCESS_MIN_DIMENSIONS;\n    }\n\n    if (is(shape, 'bpmn:TextAnnotation')) {\n      context.minDimensions = TEXT_ANNOTATION_MIN_DIMENSIONS;\n    }\n  });\n}\nResizeBehavior.$inject = ['eventBus'];\nvar abs = Math.abs,\n    min = Math.min,\n    max = Math.max;\n\nfunction addToTrbl(trbl, attr, value, choice) {\n  var current = trbl[attr]; // make sure to set the value if it does not exist\n  // or apply the correct value by comparing against\n  // choice(value, currentValue)\n\n  trbl[attr] = current === undefined ? value : choice(value, current);\n}\n\nfunction addMin(trbl, attr, value) {\n  return addToTrbl(trbl, attr, value, min);\n}\n\nfunction addMax(trbl, attr, value) {\n  return addToTrbl(trbl, attr, value, max);\n}\n\nvar LANE_RIGHT_PADDING = 20,\n    LANE_LEFT_PADDING = 50,\n    LANE_TOP_PADDING = 20,\n    LANE_BOTTOM_PADDING = 20;\nexport function getParticipantResizeConstraints(laneShape, resizeDirection, balanced) {\n  var lanesRoot = getLanesRoot(laneShape);\n  var isFirst = true,\n      isLast = true; // max top/bottom size for lanes\n\n  var allLanes = collectLanes(lanesRoot, [lanesRoot]);\n  var laneTrbl = asTRBL(laneShape);\n  var maxTrbl = {},\n      minTrbl = {};\n\n  if (/e/.test(resizeDirection)) {\n    minTrbl.right = laneTrbl.left + LANE_MIN_DIMENSIONS.width;\n  } else if (/w/.test(resizeDirection)) {\n    minTrbl.left = laneTrbl.right - LANE_MIN_DIMENSIONS.width;\n  }\n\n  allLanes.forEach(function (other) {\n    var otherTrbl = asTRBL(other);\n\n    if (/n/.test(resizeDirection)) {\n      if (otherTrbl.top < laneTrbl.top - 10) {\n        isFirst = false;\n      } // max top size (based on next element)\n\n\n      if (balanced && abs(laneTrbl.top - otherTrbl.bottom) < 10) {\n        addMax(maxTrbl, 'top', otherTrbl.top + LANE_MIN_DIMENSIONS.height);\n      } // min top size (based on self or nested element)\n\n\n      if (abs(laneTrbl.top - otherTrbl.top) < 5) {\n        addMin(minTrbl, 'top', otherTrbl.bottom - LANE_MIN_DIMENSIONS.height);\n      }\n    }\n\n    if (/s/.test(resizeDirection)) {\n      if (otherTrbl.bottom > laneTrbl.bottom + 10) {\n        isLast = false;\n      } // max bottom size (based on previous element)\n\n\n      if (balanced && abs(laneTrbl.bottom - otherTrbl.top) < 10) {\n        addMin(maxTrbl, 'bottom', otherTrbl.bottom - LANE_MIN_DIMENSIONS.height);\n      } // min bottom size (based on self or nested element)\n\n\n      if (abs(laneTrbl.bottom - otherTrbl.bottom) < 5) {\n        addMax(minTrbl, 'bottom', otherTrbl.top + LANE_MIN_DIMENSIONS.height);\n      }\n    }\n  }); // max top/bottom/left/right size based on flow nodes\n\n  var flowElements = lanesRoot.children.filter(function (s) {\n    return !s.hidden && !s.waypoints && (is(s, 'bpmn:FlowElement') || is(s, 'bpmn:Artifact'));\n  });\n  flowElements.forEach(function (flowElement) {\n    var flowElementTrbl = asTRBL(flowElement);\n\n    if (isFirst && /n/.test(resizeDirection)) {\n      addMin(minTrbl, 'top', flowElementTrbl.top - LANE_TOP_PADDING);\n    }\n\n    if (/e/.test(resizeDirection)) {\n      addMax(minTrbl, 'right', flowElementTrbl.right + LANE_RIGHT_PADDING);\n    }\n\n    if (isLast && /s/.test(resizeDirection)) {\n      addMax(minTrbl, 'bottom', flowElementTrbl.bottom + LANE_BOTTOM_PADDING);\n    }\n\n    if (/w/.test(resizeDirection)) {\n      addMin(minTrbl, 'left', flowElementTrbl.left - LANE_LEFT_PADDING);\n    }\n  });\n  return {\n    min: minTrbl,\n    max: maxTrbl\n  };\n}","map":{"version":3,"names":["is","isExpanded","asTRBL","collectLanes","getLanesRoot","HIGH_PRIORITY","GROUP_MIN_DIMENSIONS","width","height","LANE_MIN_DIMENSIONS","PARTICIPANT_MIN_DIMENSIONS","SUB_PROCESS_MIN_DIMENSIONS","TEXT_ANNOTATION_MIN_DIMENSIONS","ResizeBehavior","eventBus","on","event","context","shape","direction","balanced","resizeConstraints","getParticipantResizeConstraints","minDimensions","$inject","abs","Math","min","max","addToTrbl","trbl","attr","value","choice","current","undefined","addMin","addMax","LANE_RIGHT_PADDING","LANE_LEFT_PADDING","LANE_TOP_PADDING","LANE_BOTTOM_PADDING","laneShape","resizeDirection","lanesRoot","isFirst","isLast","allLanes","laneTrbl","maxTrbl","minTrbl","test","right","left","forEach","other","otherTrbl","top","bottom","flowElements","children","filter","s","hidden","waypoints","flowElement","flowElementTrbl"],"sources":["E:/Old_PC/Study/Angular/test-bpm/node_modules/bpmn-js/lib/features/modeling/behavior/ResizeBehavior.js"],"sourcesContent":["import { is } from '../../../util/ModelUtil';\r\n\r\nimport { isExpanded } from '../../../util/DiUtil';\r\n\r\nimport {\r\n  asTRBL\r\n} from 'diagram-js/lib/layout/LayoutUtil';\r\n\r\nimport {\r\n  collectLanes,\r\n  getLanesRoot\r\n} from '../util/LaneUtil';\r\n\r\nvar HIGH_PRIORITY = 1500;\r\n\r\nexport var GROUP_MIN_DIMENSIONS = { width: 140, height: 120 };\r\n\r\nexport var LANE_MIN_DIMENSIONS = { width: 300, height: 60 };\r\n\r\nexport var PARTICIPANT_MIN_DIMENSIONS = { width: 300, height: 150 };\r\n\r\nexport var SUB_PROCESS_MIN_DIMENSIONS = { width: 140, height: 120 };\r\n\r\nexport var TEXT_ANNOTATION_MIN_DIMENSIONS = { width: 50, height: 30 };\r\n\r\n/**\r\n * Set minimum bounds/resize constraints on resize.\r\n *\r\n * @param {EventBus} eventBus\r\n */\r\nexport default function ResizeBehavior(eventBus) {\r\n  eventBus.on('resize.start', HIGH_PRIORITY, function(event) {\r\n    var context = event.context,\r\n        shape = context.shape,\r\n        direction = context.direction,\r\n        balanced = context.balanced;\r\n\r\n    if (is(shape, 'bpmn:Lane') || is(shape, 'bpmn:Participant')) {\r\n      context.resizeConstraints = getParticipantResizeConstraints(shape, direction, balanced);\r\n    }\r\n\r\n    if (is(shape, 'bpmn:Participant')) {\r\n      context.minDimensions = PARTICIPANT_MIN_DIMENSIONS;\r\n    }\r\n\r\n    if (is(shape, 'bpmn:SubProcess') && isExpanded(shape)) {\r\n      context.minDimensions = SUB_PROCESS_MIN_DIMENSIONS;\r\n    }\r\n\r\n    if (is(shape, 'bpmn:TextAnnotation')) {\r\n      context.minDimensions = TEXT_ANNOTATION_MIN_DIMENSIONS;\r\n    }\r\n  });\r\n}\r\n\r\nResizeBehavior.$inject = [ 'eventBus' ];\r\n\r\n\r\nvar abs = Math.abs,\r\n    min = Math.min,\r\n    max = Math.max;\r\n\r\n\r\nfunction addToTrbl(trbl, attr, value, choice) {\r\n  var current = trbl[attr];\r\n\r\n  // make sure to set the value if it does not exist\r\n  // or apply the correct value by comparing against\r\n  // choice(value, currentValue)\r\n  trbl[attr] = current === undefined ? value : choice(value, current);\r\n}\r\n\r\nfunction addMin(trbl, attr, value) {\r\n  return addToTrbl(trbl, attr, value, min);\r\n}\r\n\r\nfunction addMax(trbl, attr, value) {\r\n  return addToTrbl(trbl, attr, value, max);\r\n}\r\n\r\nvar LANE_RIGHT_PADDING = 20,\r\n    LANE_LEFT_PADDING = 50,\r\n    LANE_TOP_PADDING = 20,\r\n    LANE_BOTTOM_PADDING = 20;\r\n\r\nexport function getParticipantResizeConstraints(laneShape, resizeDirection, balanced) {\r\n  var lanesRoot = getLanesRoot(laneShape);\r\n\r\n  var isFirst = true,\r\n      isLast = true;\r\n\r\n  // max top/bottom size for lanes\r\n  var allLanes = collectLanes(lanesRoot, [ lanesRoot ]);\r\n\r\n  var laneTrbl = asTRBL(laneShape);\r\n\r\n  var maxTrbl = {},\r\n      minTrbl = {};\r\n\r\n  if (/e/.test(resizeDirection)) {\r\n    minTrbl.right = laneTrbl.left + LANE_MIN_DIMENSIONS.width;\r\n  } else\r\n  if (/w/.test(resizeDirection)) {\r\n    minTrbl.left = laneTrbl.right - LANE_MIN_DIMENSIONS.width;\r\n  }\r\n\r\n  allLanes.forEach(function(other) {\r\n\r\n    var otherTrbl = asTRBL(other);\r\n\r\n    if (/n/.test(resizeDirection)) {\r\n\r\n      if (otherTrbl.top < (laneTrbl.top - 10)) {\r\n        isFirst = false;\r\n      }\r\n\r\n      // max top size (based on next element)\r\n      if (balanced && abs(laneTrbl.top - otherTrbl.bottom) < 10) {\r\n        addMax(maxTrbl, 'top', otherTrbl.top + LANE_MIN_DIMENSIONS.height);\r\n      }\r\n\r\n      // min top size (based on self or nested element)\r\n      if (abs(laneTrbl.top - otherTrbl.top) < 5) {\r\n        addMin(minTrbl, 'top', otherTrbl.bottom - LANE_MIN_DIMENSIONS.height);\r\n      }\r\n    }\r\n\r\n    if (/s/.test(resizeDirection)) {\r\n\r\n      if (otherTrbl.bottom > (laneTrbl.bottom + 10)) {\r\n        isLast = false;\r\n      }\r\n\r\n      // max bottom size (based on previous element)\r\n      if (balanced && abs(laneTrbl.bottom - otherTrbl.top) < 10) {\r\n        addMin(maxTrbl, 'bottom', otherTrbl.bottom - LANE_MIN_DIMENSIONS.height);\r\n      }\r\n\r\n      // min bottom size (based on self or nested element)\r\n      if (abs(laneTrbl.bottom - otherTrbl.bottom) < 5) {\r\n        addMax(minTrbl, 'bottom', otherTrbl.top + LANE_MIN_DIMENSIONS.height);\r\n      }\r\n    }\r\n  });\r\n\r\n  // max top/bottom/left/right size based on flow nodes\r\n  var flowElements = lanesRoot.children.filter(function(s) {\r\n    return !s.hidden && !s.waypoints && (is(s, 'bpmn:FlowElement') || is(s, 'bpmn:Artifact'));\r\n  });\r\n\r\n  flowElements.forEach(function(flowElement) {\r\n\r\n    var flowElementTrbl = asTRBL(flowElement);\r\n\r\n    if (isFirst && /n/.test(resizeDirection)) {\r\n      addMin(minTrbl, 'top', flowElementTrbl.top - LANE_TOP_PADDING);\r\n    }\r\n\r\n    if (/e/.test(resizeDirection)) {\r\n      addMax(minTrbl, 'right', flowElementTrbl.right + LANE_RIGHT_PADDING);\r\n    }\r\n\r\n    if (isLast && /s/.test(resizeDirection)) {\r\n      addMax(minTrbl, 'bottom', flowElementTrbl.bottom + LANE_BOTTOM_PADDING);\r\n    }\r\n\r\n    if (/w/.test(resizeDirection)) {\r\n      addMin(minTrbl, 'left', flowElementTrbl.left - LANE_LEFT_PADDING);\r\n    }\r\n  });\r\n\r\n  return {\r\n    min: minTrbl,\r\n    max: maxTrbl\r\n  };\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}