{"ast":null,"code":"import CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\nimport inherits from 'inherits-browser';\nimport cssEscape from 'css.escape';\nimport { assign, forEach } from 'min-dash';\nimport { query as domQuery } from 'min-dom';\nimport { attr as svgAttr } from 'tiny-svg';\nvar LOW_PRIORITY = 250;\nexport default function BpmnReplacePreview(eventBus, elementRegistry, elementFactory, canvas, previewSupport) {\n  CommandInterceptor.call(this, eventBus);\n  /**\n   * Replace the visuals of all elements in the context which can be replaced\n   *\n   * @param  {Object} context\n   */\n\n  function replaceVisual(context) {\n    var replacements = context.canExecute.replacements;\n    forEach(replacements, function (replacement) {\n      var id = replacement.oldElementId;\n      var newElement = {\n        type: replacement.newElementType\n      }; // if the visual of the element is already replaced\n\n      if (context.visualReplacements[id]) {\n        return;\n      }\n\n      var element = elementRegistry.get(id);\n      assign(newElement, {\n        x: element.x,\n        y: element.y\n      }); // create a temporary shape\n\n      var tempShape = elementFactory.createShape(newElement);\n      canvas.addShape(tempShape, element.parent); // select the original SVG element related to the element and hide it\n\n      var gfx = domQuery('[data-element-id=\"' + cssEscape(element.id) + '\"]', context.dragGroup);\n\n      if (gfx) {\n        svgAttr(gfx, {\n          display: 'none'\n        });\n      } // clone the gfx of the temporary shape and add it to the drag group\n\n\n      var dragger = previewSupport.addDragger(tempShape, context.dragGroup);\n      context.visualReplacements[id] = dragger;\n      canvas.removeShape(tempShape);\n    });\n  }\n  /**\n   * Restore the original visuals of the previously replaced elements\n   *\n   * @param  {Object} context\n   */\n\n\n  function restoreVisual(context) {\n    var visualReplacements = context.visualReplacements;\n    forEach(visualReplacements, function (dragger, id) {\n      var originalGfx = domQuery('[data-element-id=\"' + cssEscape(id) + '\"]', context.dragGroup);\n\n      if (originalGfx) {\n        svgAttr(originalGfx, {\n          display: 'inline'\n        });\n      }\n\n      dragger.remove();\n\n      if (visualReplacements[id]) {\n        delete visualReplacements[id];\n      }\n    });\n  }\n\n  eventBus.on('shape.move.move', LOW_PRIORITY, function (event) {\n    var context = event.context,\n        canExecute = context.canExecute;\n\n    if (!context.visualReplacements) {\n      context.visualReplacements = {};\n    }\n\n    if (canExecute && canExecute.replacements) {\n      replaceVisual(context);\n    } else {\n      restoreVisual(context);\n    }\n  });\n}\nBpmnReplacePreview.$inject = ['eventBus', 'elementRegistry', 'elementFactory', 'canvas', 'previewSupport'];\ninherits(BpmnReplacePreview, CommandInterceptor);","map":{"version":3,"names":["CommandInterceptor","inherits","cssEscape","assign","forEach","query","domQuery","attr","svgAttr","LOW_PRIORITY","BpmnReplacePreview","eventBus","elementRegistry","elementFactory","canvas","previewSupport","call","replaceVisual","context","replacements","canExecute","replacement","id","oldElementId","newElement","type","newElementType","visualReplacements","element","get","x","y","tempShape","createShape","addShape","parent","gfx","dragGroup","display","dragger","addDragger","removeShape","restoreVisual","originalGfx","remove","on","event","$inject"],"sources":["E:/Old_PC/Study/Angular/test-bpm/node_modules/bpmn-js/lib/features/replace-preview/BpmnReplacePreview.js"],"sourcesContent":["import CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\n\nimport inherits from 'inherits-browser';\n\nimport cssEscape from 'css.escape';\n\nimport {\n  assign,\n  forEach\n} from 'min-dash';\n\nimport {\n  query as domQuery\n} from 'min-dom';\n\nimport {\n  attr as svgAttr\n} from 'tiny-svg';\n\nvar LOW_PRIORITY = 250;\n\n\nexport default function BpmnReplacePreview(\n    eventBus, elementRegistry, elementFactory,\n    canvas, previewSupport) {\n\n  CommandInterceptor.call(this, eventBus);\n\n  /**\n   * Replace the visuals of all elements in the context which can be replaced\n   *\n   * @param  {Object} context\n   */\n  function replaceVisual(context) {\n\n    var replacements = context.canExecute.replacements;\n\n    forEach(replacements, function(replacement) {\n\n      var id = replacement.oldElementId;\n\n      var newElement = {\n        type: replacement.newElementType\n      };\n\n      // if the visual of the element is already replaced\n      if (context.visualReplacements[id]) {\n        return;\n      }\n\n      var element = elementRegistry.get(id);\n\n      assign(newElement, { x: element.x, y: element.y });\n\n      // create a temporary shape\n      var tempShape = elementFactory.createShape(newElement);\n\n      canvas.addShape(tempShape, element.parent);\n\n      // select the original SVG element related to the element and hide it\n      var gfx = domQuery('[data-element-id=\"' + cssEscape(element.id) + '\"]', context.dragGroup);\n\n      if (gfx) {\n        svgAttr(gfx, { display: 'none' });\n      }\n\n      // clone the gfx of the temporary shape and add it to the drag group\n      var dragger = previewSupport.addDragger(tempShape, context.dragGroup);\n\n      context.visualReplacements[id] = dragger;\n\n      canvas.removeShape(tempShape);\n    });\n  }\n\n  /**\n   * Restore the original visuals of the previously replaced elements\n   *\n   * @param  {Object} context\n   */\n  function restoreVisual(context) {\n\n    var visualReplacements = context.visualReplacements;\n\n    forEach(visualReplacements, function(dragger, id) {\n\n      var originalGfx = domQuery('[data-element-id=\"' + cssEscape(id) + '\"]', context.dragGroup);\n\n      if (originalGfx) {\n        svgAttr(originalGfx, { display: 'inline' });\n      }\n\n      dragger.remove();\n\n      if (visualReplacements[id]) {\n        delete visualReplacements[id];\n      }\n    });\n  }\n\n  eventBus.on('shape.move.move', LOW_PRIORITY, function(event) {\n\n    var context = event.context,\n        canExecute = context.canExecute;\n\n    if (!context.visualReplacements) {\n      context.visualReplacements = {};\n    }\n\n    if (canExecute && canExecute.replacements) {\n      replaceVisual(context);\n    } else {\n      restoreVisual(context);\n    }\n  });\n}\n\nBpmnReplacePreview.$inject = [\n  'eventBus',\n  'elementRegistry',\n  'elementFactory',\n  'canvas',\n  'previewSupport'\n];\n\ninherits(BpmnReplacePreview, CommandInterceptor);"],"mappings":"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"},"metadata":{},"sourceType":"module"}