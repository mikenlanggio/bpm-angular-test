{"ast":null,"code":"import { reduce, keys, forEach } from 'min-dash';\nimport { is, getBusinessObject } from '../../../util/ModelUtil';\nexport default function UpdateModdlePropertiesHandler(elementRegistry) {\n  this._elementRegistry = elementRegistry;\n}\nUpdateModdlePropertiesHandler.$inject = ['elementRegistry'];\n\nUpdateModdlePropertiesHandler.prototype.execute = function (context) {\n  var element = context.element,\n      moddleElement = context.moddleElement,\n      properties = context.properties;\n\n  if (!moddleElement) {\n    throw new Error('<moddleElement> required');\n  } // TODO(nikku): we need to ensure that ID properties\n  // are properly registered / unregistered via\n  // this._moddle.ids.assigned(id)\n\n\n  var changed = context.changed || this.getVisualReferences(moddleElement).concat(element);\n  var oldProperties = context.oldProperties || getModdleProperties(moddleElement, keys(properties));\n  setModdleProperties(moddleElement, properties);\n  context.oldProperties = oldProperties;\n  context.changed = changed;\n  return changed;\n};\n\nUpdateModdlePropertiesHandler.prototype.revert = function (context) {\n  var oldProperties = context.oldProperties,\n      moddleElement = context.moddleElement,\n      changed = context.changed;\n  setModdleProperties(moddleElement, oldProperties);\n  return changed;\n};\n/**\n * Return visual references of given moddle element within the diagram.\n *\n * @param {ModdleElement} moddleElement\n *\n * @return {Array<djs.model.Element>}\n */\n\n\nUpdateModdlePropertiesHandler.prototype.getVisualReferences = function (moddleElement) {\n  var elementRegistry = this._elementRegistry;\n\n  if (is(moddleElement, 'bpmn:DataObject')) {\n    return getAllDataObjectReferences(moddleElement, elementRegistry);\n  }\n\n  return [];\n}; // helpers /////////////////\n\n\nfunction getModdleProperties(moddleElement, propertyNames) {\n  return reduce(propertyNames, function (result, key) {\n    result[key] = moddleElement.get(key);\n    return result;\n  }, {});\n}\n\nfunction setModdleProperties(moddleElement, properties) {\n  forEach(properties, function (value, key) {\n    moddleElement.set(key, value);\n  });\n}\n\nfunction getAllDataObjectReferences(dataObject, elementRegistry) {\n  return elementRegistry.filter(function (element) {\n    return is(element, 'bpmn:DataObjectReference') && getBusinessObject(element).dataObjectRef === dataObject;\n  });\n}","map":{"version":3,"names":["reduce","keys","forEach","is","getBusinessObject","UpdateModdlePropertiesHandler","elementRegistry","_elementRegistry","$inject","prototype","execute","context","element","moddleElement","properties","Error","changed","getVisualReferences","concat","oldProperties","getModdleProperties","setModdleProperties","revert","getAllDataObjectReferences","propertyNames","result","key","get","value","set","dataObject","filter","dataObjectRef"],"sources":["E:/Old_PC/Study/Angular/test-bpm/node_modules/bpmn-js/lib/features/modeling/cmd/UpdateModdlePropertiesHandler.js"],"sourcesContent":["import {\n  reduce,\n  keys,\n  forEach\n} from 'min-dash';\n\nimport {\n  is,\n  getBusinessObject\n} from '../../../util/ModelUtil';\n\nexport default function UpdateModdlePropertiesHandler(elementRegistry) {\n  this._elementRegistry = elementRegistry;\n}\n\nUpdateModdlePropertiesHandler.$inject = [ 'elementRegistry' ];\n\nUpdateModdlePropertiesHandler.prototype.execute = function(context) {\n\n  var element = context.element,\n      moddleElement = context.moddleElement,\n      properties = context.properties;\n\n  if (!moddleElement) {\n    throw new Error('<moddleElement> required');\n  }\n\n  // TODO(nikku): we need to ensure that ID properties\n  // are properly registered / unregistered via\n  // this._moddle.ids.assigned(id)\n  var changed = context.changed || this.getVisualReferences(moddleElement).concat(element);\n  var oldProperties = context.oldProperties || getModdleProperties(moddleElement, keys(properties));\n\n  setModdleProperties(moddleElement, properties);\n\n  context.oldProperties = oldProperties;\n  context.changed = changed;\n\n  return changed;\n};\n\nUpdateModdlePropertiesHandler.prototype.revert = function(context) {\n  var oldProperties = context.oldProperties,\n      moddleElement = context.moddleElement,\n      changed = context.changed;\n\n  setModdleProperties(moddleElement, oldProperties);\n\n  return changed;\n};\n\n/**\n * Return visual references of given moddle element within the diagram.\n *\n * @param {ModdleElement} moddleElement\n *\n * @return {Array<djs.model.Element>}\n */\nUpdateModdlePropertiesHandler.prototype.getVisualReferences = function(moddleElement) {\n\n  var elementRegistry = this._elementRegistry;\n\n  if (is(moddleElement, 'bpmn:DataObject')) {\n    return getAllDataObjectReferences(moddleElement, elementRegistry);\n  }\n\n  return [];\n};\n\n\n// helpers /////////////////\n\nfunction getModdleProperties(moddleElement, propertyNames) {\n  return reduce(propertyNames, function(result, key) {\n    result[key] = moddleElement.get(key);\n    return result;\n  }, {});\n}\n\nfunction setModdleProperties(moddleElement, properties) {\n  forEach(properties, function(value, key) {\n    moddleElement.set(key, value);\n  });\n}\n\nfunction getAllDataObjectReferences(dataObject, elementRegistry) {\n  return elementRegistry.filter(function(element) {\n    return (\n      is(element, 'bpmn:DataObjectReference') &&\n          getBusinessObject(element).dataObjectRef === dataObject\n    );\n  });\n}\n"],"mappings":"AAAA,SACEA,MADF,EAEEC,IAFF,EAGEC,OAHF,QAIO,UAJP;AAMA,SACEC,EADF,EAEEC,iBAFF,QAGO,yBAHP;AAKA,eAAe,SAASC,6BAAT,CAAuCC,eAAvC,EAAwD;EACrE,KAAKC,gBAAL,GAAwBD,eAAxB;AACD;AAEDD,6BAA6B,CAACG,OAA9B,GAAwC,CAAE,iBAAF,CAAxC;;AAEAH,6BAA6B,CAACI,SAA9B,CAAwCC,OAAxC,GAAkD,UAASC,OAAT,EAAkB;EAElE,IAAIC,OAAO,GAAGD,OAAO,CAACC,OAAtB;EAAA,IACIC,aAAa,GAAGF,OAAO,CAACE,aAD5B;EAAA,IAEIC,UAAU,GAAGH,OAAO,CAACG,UAFzB;;EAIA,IAAI,CAACD,aAAL,EAAoB;IAClB,MAAM,IAAIE,KAAJ,CAAU,0BAAV,CAAN;EACD,CARiE,CAUlE;EACA;EACA;;;EACA,IAAIC,OAAO,GAAGL,OAAO,CAACK,OAAR,IAAmB,KAAKC,mBAAL,CAAyBJ,aAAzB,EAAwCK,MAAxC,CAA+CN,OAA/C,CAAjC;EACA,IAAIO,aAAa,GAAGR,OAAO,CAACQ,aAAR,IAAyBC,mBAAmB,CAACP,aAAD,EAAgBZ,IAAI,CAACa,UAAD,CAApB,CAAhE;EAEAO,mBAAmB,CAACR,aAAD,EAAgBC,UAAhB,CAAnB;EAEAH,OAAO,CAACQ,aAAR,GAAwBA,aAAxB;EACAR,OAAO,CAACK,OAAR,GAAkBA,OAAlB;EAEA,OAAOA,OAAP;AACD,CAtBD;;AAwBAX,6BAA6B,CAACI,SAA9B,CAAwCa,MAAxC,GAAiD,UAASX,OAAT,EAAkB;EACjE,IAAIQ,aAAa,GAAGR,OAAO,CAACQ,aAA5B;EAAA,IACIN,aAAa,GAAGF,OAAO,CAACE,aAD5B;EAAA,IAEIG,OAAO,GAAGL,OAAO,CAACK,OAFtB;EAIAK,mBAAmB,CAACR,aAAD,EAAgBM,aAAhB,CAAnB;EAEA,OAAOH,OAAP;AACD,CARD;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAX,6BAA6B,CAACI,SAA9B,CAAwCQ,mBAAxC,GAA8D,UAASJ,aAAT,EAAwB;EAEpF,IAAIP,eAAe,GAAG,KAAKC,gBAA3B;;EAEA,IAAIJ,EAAE,CAACU,aAAD,EAAgB,iBAAhB,CAAN,EAA0C;IACxC,OAAOU,0BAA0B,CAACV,aAAD,EAAgBP,eAAhB,CAAjC;EACD;;EAED,OAAO,EAAP;AACD,CATD,C,CAYA;;;AAEA,SAASc,mBAAT,CAA6BP,aAA7B,EAA4CW,aAA5C,EAA2D;EACzD,OAAOxB,MAAM,CAACwB,aAAD,EAAgB,UAASC,MAAT,EAAiBC,GAAjB,EAAsB;IACjDD,MAAM,CAACC,GAAD,CAAN,GAAcb,aAAa,CAACc,GAAd,CAAkBD,GAAlB,CAAd;IACA,OAAOD,MAAP;EACD,CAHY,EAGV,EAHU,CAAb;AAID;;AAED,SAASJ,mBAAT,CAA6BR,aAA7B,EAA4CC,UAA5C,EAAwD;EACtDZ,OAAO,CAACY,UAAD,EAAa,UAASc,KAAT,EAAgBF,GAAhB,EAAqB;IACvCb,aAAa,CAACgB,GAAd,CAAkBH,GAAlB,EAAuBE,KAAvB;EACD,CAFM,CAAP;AAGD;;AAED,SAASL,0BAAT,CAAoCO,UAApC,EAAgDxB,eAAhD,EAAiE;EAC/D,OAAOA,eAAe,CAACyB,MAAhB,CAAuB,UAASnB,OAAT,EAAkB;IAC9C,OACET,EAAE,CAACS,OAAD,EAAU,0BAAV,CAAF,IACIR,iBAAiB,CAACQ,OAAD,CAAjB,CAA2BoB,aAA3B,KAA6CF,UAFnD;EAID,CALM,CAAP;AAMD"},"metadata":{},"sourceType":"module"}