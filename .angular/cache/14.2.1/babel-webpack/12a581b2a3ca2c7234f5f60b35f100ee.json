{"ast":null,"code":"import { assign, forEach, map } from 'min-dash';\nimport { getWaypointsUpdatingConnections, resizeBounds } from '../../space-tool/SpaceUtil';\nimport { getMovedSourceAnchor, getMovedTargetAnchor, getResizedSourceAnchor, getResizedTargetAnchor } from './helper/AnchorsHelper';\n/**\n * Add or remove space by moving and resizing shapes and updating connection waypoints.\n */\n\nexport default function SpaceToolHandler(modeling) {\n  this._modeling = modeling;\n}\nSpaceToolHandler.$inject = ['modeling'];\n\nSpaceToolHandler.prototype.preExecute = function (context) {\n  var delta = context.delta,\n      direction = context.direction,\n      movingShapes = context.movingShapes,\n      resizingShapes = context.resizingShapes,\n      start = context.start,\n      oldBounds = {}; // (1) move shapes\n\n  this.moveShapes(movingShapes, delta); // (2a) save old bounds of resized shapes\n\n  forEach(resizingShapes, function (shape) {\n    oldBounds[shape.id] = getBounds(shape);\n  }); // (2b) resize shapes\n\n  this.resizeShapes(resizingShapes, delta, direction); // (3) update connection waypoints\n\n  this.updateConnectionWaypoints(getWaypointsUpdatingConnections(movingShapes, resizingShapes), delta, direction, start, movingShapes, resizingShapes, oldBounds);\n};\n\nSpaceToolHandler.prototype.execute = function () {};\n\nSpaceToolHandler.prototype.revert = function () {};\n\nSpaceToolHandler.prototype.moveShapes = function (shapes, delta) {\n  var self = this;\n  forEach(shapes, function (element) {\n    self._modeling.moveShape(element, delta, null, {\n      autoResize: false,\n      layout: false,\n      recurse: false\n    });\n  });\n};\n\nSpaceToolHandler.prototype.resizeShapes = function (shapes, delta, direction) {\n  var self = this;\n  forEach(shapes, function (shape) {\n    var newBounds = resizeBounds(shape, direction, delta);\n\n    self._modeling.resizeShape(shape, newBounds, null, {\n      attachSupport: false,\n      autoResize: false,\n      layout: false\n    });\n  });\n};\n/**\n * Update connections waypoints according to the rules:\n *   1. Both source and target are moved/resized => move waypoints by the delta\n *   2. Only one of source and target is moved/resized => re-layout connection with moved start/end\n */\n\n\nSpaceToolHandler.prototype.updateConnectionWaypoints = function (connections, delta, direction, start, movingShapes, resizingShapes, oldBounds) {\n  var self = this,\n      affectedShapes = movingShapes.concat(resizingShapes);\n  forEach(connections, function (connection) {\n    var source = connection.source,\n        target = connection.target,\n        waypoints = copyWaypoints(connection),\n        axis = getAxisFromDirection(direction),\n        layoutHints = {\n      labelBehavior: false\n    };\n\n    if (includes(affectedShapes, source) && includes(affectedShapes, target)) {\n      // move waypoints\n      waypoints = map(waypoints, function (waypoint) {\n        if (shouldMoveWaypoint(waypoint, start, direction)) {\n          // move waypoint\n          waypoint[axis] = waypoint[axis] + delta[axis];\n        }\n\n        if (waypoint.original && shouldMoveWaypoint(waypoint.original, start, direction)) {\n          // move waypoint original\n          waypoint.original[axis] = waypoint.original[axis] + delta[axis];\n        }\n\n        return waypoint;\n      });\n\n      self._modeling.updateWaypoints(connection, waypoints, {\n        labelBehavior: false\n      });\n    } else if (includes(affectedShapes, source) || includes(affectedShapes, target)) {\n      // re-layout connection with moved start/end\n      if (includes(movingShapes, source)) {\n        layoutHints.connectionStart = getMovedSourceAnchor(connection, source, delta);\n      } else if (includes(movingShapes, target)) {\n        layoutHints.connectionEnd = getMovedTargetAnchor(connection, target, delta);\n      } else if (includes(resizingShapes, source)) {\n        layoutHints.connectionStart = getResizedSourceAnchor(connection, source, oldBounds[source.id]);\n      } else if (includes(resizingShapes, target)) {\n        layoutHints.connectionEnd = getResizedTargetAnchor(connection, target, oldBounds[target.id]);\n      }\n\n      self._modeling.layoutConnection(connection, layoutHints);\n    }\n  });\n}; // helpers //////////\n\n\nfunction copyWaypoint(waypoint) {\n  return assign({}, waypoint);\n}\n\nfunction copyWaypoints(connection) {\n  return map(connection.waypoints, function (waypoint) {\n    waypoint = copyWaypoint(waypoint);\n\n    if (waypoint.original) {\n      waypoint.original = copyWaypoint(waypoint.original);\n    }\n\n    return waypoint;\n  });\n}\n\nfunction getAxisFromDirection(direction) {\n  switch (direction) {\n    case 'n':\n      return 'y';\n\n    case 'w':\n      return 'x';\n\n    case 's':\n      return 'y';\n\n    case 'e':\n      return 'x';\n  }\n}\n\nfunction shouldMoveWaypoint(waypoint, start, direction) {\n  var relevantAxis = getAxisFromDirection(direction);\n\n  if (/e|s/.test(direction)) {\n    return waypoint[relevantAxis] > start;\n  } else if (/n|w/.test(direction)) {\n    return waypoint[relevantAxis] < start;\n  }\n}\n\nfunction includes(array, item) {\n  return array.indexOf(item) !== -1;\n}\n\nfunction getBounds(shape) {\n  return {\n    x: shape.x,\n    y: shape.y,\n    height: shape.height,\n    width: shape.width\n  };\n}","map":{"version":3,"names":["assign","forEach","map","getWaypointsUpdatingConnections","resizeBounds","getMovedSourceAnchor","getMovedTargetAnchor","getResizedSourceAnchor","getResizedTargetAnchor","SpaceToolHandler","modeling","_modeling","$inject","prototype","preExecute","context","delta","direction","movingShapes","resizingShapes","start","oldBounds","moveShapes","shape","id","getBounds","resizeShapes","updateConnectionWaypoints","execute","revert","shapes","self","element","moveShape","autoResize","layout","recurse","newBounds","resizeShape","attachSupport","connections","affectedShapes","concat","connection","source","target","waypoints","copyWaypoints","axis","getAxisFromDirection","layoutHints","labelBehavior","includes","waypoint","shouldMoveWaypoint","original","updateWaypoints","connectionStart","connectionEnd","layoutConnection","copyWaypoint","relevantAxis","test","array","item","indexOf","x","y","height","width"],"sources":["E:/Old_PC/Study/Angular/test-bpm/node_modules/diagram-js/lib/features/modeling/cmd/SpaceToolHandler.js"],"sourcesContent":["import {\n  assign,\n  forEach,\n  map\n} from 'min-dash';\n\nimport {\n  getWaypointsUpdatingConnections,\n  resizeBounds\n} from '../../space-tool/SpaceUtil';\n\nimport {\n  getMovedSourceAnchor,\n  getMovedTargetAnchor,\n  getResizedSourceAnchor,\n  getResizedTargetAnchor\n} from './helper/AnchorsHelper';\n\n\n/**\n * Add or remove space by moving and resizing shapes and updating connection waypoints.\n */\nexport default function SpaceToolHandler(modeling) {\n  this._modeling = modeling;\n}\n\nSpaceToolHandler.$inject = [ 'modeling' ];\n\nSpaceToolHandler.prototype.preExecute = function(context) {\n  var delta = context.delta,\n      direction = context.direction,\n      movingShapes = context.movingShapes,\n      resizingShapes = context.resizingShapes,\n      start = context.start,\n      oldBounds = {};\n\n  // (1) move shapes\n  this.moveShapes(movingShapes, delta);\n\n  // (2a) save old bounds of resized shapes\n  forEach(resizingShapes, function(shape) {\n    oldBounds[shape.id] = getBounds(shape);\n  });\n\n  // (2b) resize shapes\n  this.resizeShapes(resizingShapes, delta, direction);\n\n  // (3) update connection waypoints\n  this.updateConnectionWaypoints(\n    getWaypointsUpdatingConnections(movingShapes, resizingShapes),\n    delta,\n    direction,\n    start,\n    movingShapes,\n    resizingShapes,\n    oldBounds\n  );\n};\n\nSpaceToolHandler.prototype.execute = function() {};\nSpaceToolHandler.prototype.revert = function() {};\n\nSpaceToolHandler.prototype.moveShapes = function(shapes, delta) {\n  var self = this;\n\n  forEach(shapes, function(element) {\n    self._modeling.moveShape(element, delta, null, {\n      autoResize: false,\n      layout: false,\n      recurse: false\n    });\n  });\n};\n\nSpaceToolHandler.prototype.resizeShapes = function(shapes, delta, direction) {\n  var self = this;\n\n  forEach(shapes, function(shape) {\n    var newBounds = resizeBounds(shape, direction, delta);\n\n    self._modeling.resizeShape(shape, newBounds, null, {\n      attachSupport: false,\n      autoResize: false,\n      layout: false\n    });\n  });\n};\n\n/**\n * Update connections waypoints according to the rules:\n *   1. Both source and target are moved/resized => move waypoints by the delta\n *   2. Only one of source and target is moved/resized => re-layout connection with moved start/end\n */\nSpaceToolHandler.prototype.updateConnectionWaypoints = function(\n    connections,\n    delta,\n    direction,\n    start,\n    movingShapes,\n    resizingShapes,\n    oldBounds\n) {\n  var self = this,\n      affectedShapes = movingShapes.concat(resizingShapes);\n\n  forEach(connections, function(connection) {\n    var source = connection.source,\n        target = connection.target,\n        waypoints = copyWaypoints(connection),\n        axis = getAxisFromDirection(direction),\n        layoutHints = {\n          labelBehavior: false\n        };\n\n    if (includes(affectedShapes, source) && includes(affectedShapes, target)) {\n\n      // move waypoints\n      waypoints = map(waypoints, function(waypoint) {\n        if (shouldMoveWaypoint(waypoint, start, direction)) {\n\n          // move waypoint\n          waypoint[ axis ] = waypoint[ axis ] + delta[ axis ];\n        }\n\n        if (waypoint.original && shouldMoveWaypoint(waypoint.original, start, direction)) {\n\n          // move waypoint original\n          waypoint.original[ axis ] = waypoint.original[ axis ] + delta[ axis ];\n        }\n\n        return waypoint;\n      });\n\n      self._modeling.updateWaypoints(connection, waypoints, {\n        labelBehavior: false\n      });\n    } else if (includes(affectedShapes, source) || includes(affectedShapes, target)) {\n\n      // re-layout connection with moved start/end\n      if (includes(movingShapes, source)) {\n        layoutHints.connectionStart = getMovedSourceAnchor(connection, source, delta);\n      } else if (includes(movingShapes, target)) {\n        layoutHints.connectionEnd = getMovedTargetAnchor(connection, target, delta);\n      } else if (includes(resizingShapes, source)) {\n        layoutHints.connectionStart = getResizedSourceAnchor(\n          connection, source, oldBounds[source.id]\n        );\n      } else if (includes(resizingShapes, target)) {\n        layoutHints.connectionEnd = getResizedTargetAnchor(\n          connection, target, oldBounds[target.id]\n        );\n      }\n\n      self._modeling.layoutConnection(connection, layoutHints);\n    }\n  });\n};\n\n\n// helpers //////////\n\nfunction copyWaypoint(waypoint) {\n  return assign({}, waypoint);\n}\n\nfunction copyWaypoints(connection) {\n  return map(connection.waypoints, function(waypoint) {\n\n    waypoint = copyWaypoint(waypoint);\n\n    if (waypoint.original) {\n      waypoint.original = copyWaypoint(waypoint.original);\n    }\n\n    return waypoint;\n  });\n}\n\nfunction getAxisFromDirection(direction) {\n  switch (direction) {\n  case 'n':\n    return 'y';\n  case 'w':\n    return 'x';\n  case 's':\n    return 'y';\n  case 'e':\n    return 'x';\n  }\n}\n\nfunction shouldMoveWaypoint(waypoint, start, direction) {\n  var relevantAxis = getAxisFromDirection(direction);\n\n  if (/e|s/.test(direction)) {\n    return waypoint[ relevantAxis ] > start;\n  } else if (/n|w/.test(direction)) {\n    return waypoint[ relevantAxis ] < start;\n  }\n}\n\nfunction includes(array, item) {\n  return array.indexOf(item) !== -1;\n}\n\nfunction getBounds(shape) {\n  return {\n    x: shape.x,\n    y: shape.y,\n    height: shape.height,\n    width: shape.width\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}