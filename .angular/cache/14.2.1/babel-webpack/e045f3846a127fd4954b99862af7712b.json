{"ast":null,"code":"import { getAnchorPointAdjustment } from './LayoutUtil';\n/**\n * Calculate the new point after the connection waypoints got updated.\n *\n * @param {djs.model.Label} label\n * @param {Array<Point>} newWaypoints\n * @param {Array<Point>} oldWaypoints\n * @param {Object} hints\n *\n * @return {Point} point\n */\n\nexport function getConnectionAdjustment(position, newWaypoints, oldWaypoints, hints) {\n  return getAnchorPointAdjustment(position, newWaypoints, oldWaypoints, hints).point;\n}","map":{"version":3,"names":["getAnchorPointAdjustment","getConnectionAdjustment","position","newWaypoints","oldWaypoints","hints","point"],"sources":["E:/Old_PC/Study/Angular/test-bpm/node_modules/bpmn-js/lib/features/modeling/behavior/util/ConnectionLayoutUtil.js"],"sourcesContent":["import { getAnchorPointAdjustment } from './LayoutUtil';\n\n/**\n * Calculate the new point after the connection waypoints got updated.\n *\n * @param {djs.model.Label} label\n * @param {Array<Point>} newWaypoints\n * @param {Array<Point>} oldWaypoints\n * @param {Object} hints\n *\n * @return {Point} point\n */\nexport function getConnectionAdjustment(position, newWaypoints, oldWaypoints, hints) {\n  return getAnchorPointAdjustment(position, newWaypoints, oldWaypoints, hints).point;\n}\n\n"],"mappings":"AAAA,SAASA,wBAAT,QAAyC,cAAzC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,uBAAT,CAAiCC,QAAjC,EAA2CC,YAA3C,EAAyDC,YAAzD,EAAuEC,KAAvE,EAA8E;EACnF,OAAOL,wBAAwB,CAACE,QAAD,EAAWC,YAAX,EAAyBC,YAAzB,EAAuCC,KAAvC,CAAxB,CAAsEC,KAA7E;AACD"},"metadata":{},"sourceType":"module"}