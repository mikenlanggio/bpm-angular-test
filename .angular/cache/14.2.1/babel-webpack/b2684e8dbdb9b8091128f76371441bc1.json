{"ast":null,"code":"import { getNewAttachPoint } from '../../../../util/AttachUtil';\nimport { getOrientation } from '../../../../layout/LayoutUtil';\nimport { filter, map } from 'min-dash';\nexport function getResizedSourceAnchor(connection, shape, oldBounds) {\n  var waypoints = safeGetWaypoints(connection),\n      waypointsInsideNewBounds = getWaypointsInsideBounds(waypoints, shape),\n      oldAnchor = waypoints[0]; // new anchor is the last waypoint enclosed be resized source\n\n  if (waypointsInsideNewBounds.length) {\n    return waypointsInsideNewBounds[waypointsInsideNewBounds.length - 1];\n  }\n\n  return getNewAttachPoint(oldAnchor.original || oldAnchor, oldBounds, shape);\n}\nexport function getResizedTargetAnchor(connection, shape, oldBounds) {\n  var waypoints = safeGetWaypoints(connection),\n      waypointsInsideNewBounds = getWaypointsInsideBounds(waypoints, shape),\n      oldAnchor = waypoints[waypoints.length - 1]; // new anchor is the first waypoint enclosed be resized target\n\n  if (waypointsInsideNewBounds.length) {\n    return waypointsInsideNewBounds[0];\n  }\n\n  return getNewAttachPoint(oldAnchor.original || oldAnchor, oldBounds, shape);\n}\nexport function getMovedSourceAnchor(connection, source, moveDelta) {\n  var waypoints = safeGetWaypoints(connection),\n      oldBounds = subtract(source, moveDelta),\n      oldAnchor = waypoints[0];\n  return getNewAttachPoint(oldAnchor.original || oldAnchor, oldBounds, source);\n}\nexport function getMovedTargetAnchor(connection, target, moveDelta) {\n  var waypoints = safeGetWaypoints(connection),\n      oldBounds = subtract(target, moveDelta),\n      oldAnchor = waypoints[waypoints.length - 1];\n  return getNewAttachPoint(oldAnchor.original || oldAnchor, oldBounds, target);\n} // helpers //////////////////////\n\nfunction subtract(bounds, delta) {\n  return {\n    x: bounds.x - delta.x,\n    y: bounds.y - delta.y,\n    width: bounds.width,\n    height: bounds.height\n  };\n}\n/**\n * Return waypoints of given connection; throw if non exists (should not happen!!).\n *\n * @param {Connection} connection\n *\n * @return {Array<Point>}\n */\n\n\nfunction safeGetWaypoints(connection) {\n  var waypoints = connection.waypoints;\n\n  if (!waypoints.length) {\n    throw new Error('connection#' + connection.id + ': no waypoints');\n  }\n\n  return waypoints;\n}\n\nfunction getWaypointsInsideBounds(waypoints, bounds) {\n  var originalWaypoints = map(waypoints, getOriginal);\n  return filter(originalWaypoints, function (waypoint) {\n    return isInsideBounds(waypoint, bounds);\n  });\n}\n/**\n * Checks if point is inside bounds, incl. edges.\n *\n * @param {Point} point\n * @param {Bounds} bounds\n */\n\n\nfunction isInsideBounds(point, bounds) {\n  return getOrientation(bounds, point, 1) === 'intersect';\n}\n\nfunction getOriginal(point) {\n  return point.original || point;\n}","map":{"version":3,"names":["getNewAttachPoint","getOrientation","filter","map","getResizedSourceAnchor","connection","shape","oldBounds","waypoints","safeGetWaypoints","waypointsInsideNewBounds","getWaypointsInsideBounds","oldAnchor","length","original","getResizedTargetAnchor","getMovedSourceAnchor","source","moveDelta","subtract","getMovedTargetAnchor","target","bounds","delta","x","y","width","height","Error","id","originalWaypoints","getOriginal","waypoint","isInsideBounds","point"],"sources":["E:/Old_PC/Study/Angular/test-bpm/node_modules/diagram-js/lib/features/modeling/cmd/helper/AnchorsHelper.js"],"sourcesContent":["import {\n  getNewAttachPoint\n} from '../../../../util/AttachUtil';\n\nimport {\n  getOrientation\n} from '../../../../layout/LayoutUtil';\n\nimport {\n  filter,\n  map\n} from 'min-dash';\n\n\nexport function getResizedSourceAnchor(connection, shape, oldBounds) {\n\n  var waypoints = safeGetWaypoints(connection),\n      waypointsInsideNewBounds = getWaypointsInsideBounds(waypoints, shape),\n      oldAnchor = waypoints[0];\n\n  // new anchor is the last waypoint enclosed be resized source\n  if (waypointsInsideNewBounds.length) {\n    return waypointsInsideNewBounds[ waypointsInsideNewBounds.length - 1 ];\n  }\n\n  return getNewAttachPoint(oldAnchor.original || oldAnchor, oldBounds, shape);\n}\n\n\nexport function getResizedTargetAnchor(connection, shape, oldBounds) {\n\n  var waypoints = safeGetWaypoints(connection),\n      waypointsInsideNewBounds = getWaypointsInsideBounds(waypoints, shape),\n      oldAnchor = waypoints[waypoints.length - 1];\n\n  // new anchor is the first waypoint enclosed be resized target\n  if (waypointsInsideNewBounds.length) {\n    return waypointsInsideNewBounds[ 0 ];\n  }\n\n  return getNewAttachPoint(oldAnchor.original || oldAnchor, oldBounds, shape);\n}\n\n\nexport function getMovedSourceAnchor(connection, source, moveDelta) {\n\n  var waypoints = safeGetWaypoints(connection),\n      oldBounds = subtract(source, moveDelta),\n      oldAnchor = waypoints[ 0 ];\n\n  return getNewAttachPoint(oldAnchor.original || oldAnchor, oldBounds, source);\n}\n\n\nexport function getMovedTargetAnchor(connection, target, moveDelta) {\n\n  var waypoints = safeGetWaypoints(connection),\n      oldBounds = subtract(target, moveDelta),\n      oldAnchor = waypoints[ waypoints.length - 1 ];\n\n  return getNewAttachPoint(oldAnchor.original || oldAnchor, oldBounds, target);\n}\n\n\n// helpers //////////////////////\n\nfunction subtract(bounds, delta) {\n  return {\n    x: bounds.x - delta.x,\n    y: bounds.y - delta.y,\n    width: bounds.width,\n    height: bounds.height\n  };\n}\n\n\n/**\n * Return waypoints of given connection; throw if non exists (should not happen!!).\n *\n * @param {Connection} connection\n *\n * @return {Array<Point>}\n */\nfunction safeGetWaypoints(connection) {\n\n  var waypoints = connection.waypoints;\n\n  if (!waypoints.length) {\n    throw new Error('connection#' + connection.id + ': no waypoints');\n  }\n\n  return waypoints;\n}\n\nfunction getWaypointsInsideBounds(waypoints, bounds) {\n  var originalWaypoints = map(waypoints, getOriginal);\n\n  return filter(originalWaypoints, function(waypoint) {\n    return isInsideBounds(waypoint, bounds);\n  });\n}\n\n/**\n * Checks if point is inside bounds, incl. edges.\n *\n * @param {Point} point\n * @param {Bounds} bounds\n */\nfunction isInsideBounds(point, bounds) {\n  return getOrientation(bounds, point, 1) === 'intersect';\n}\n\nfunction getOriginal(point) {\n  return point.original || point;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}