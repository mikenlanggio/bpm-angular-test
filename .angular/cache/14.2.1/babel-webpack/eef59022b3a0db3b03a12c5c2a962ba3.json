{"ast":null,"code":"import { add as collectionAdd, remove as collectionRemove } from 'diagram-js/lib/util/Collections';\nimport { getDi } from '../../../util/ModelUtil';\nexport default function UpdateCanvasRootHandler(canvas, modeling) {\n  this._canvas = canvas;\n  this._modeling = modeling;\n}\nUpdateCanvasRootHandler.$inject = ['canvas', 'modeling'];\n\nUpdateCanvasRootHandler.prototype.execute = function (context) {\n  var canvas = this._canvas;\n  var newRoot = context.newRoot,\n      newRootBusinessObject = newRoot.businessObject,\n      oldRoot = canvas.getRootElement(),\n      oldRootBusinessObject = oldRoot.businessObject,\n      bpmnDefinitions = oldRootBusinessObject.$parent,\n      diPlane = getDi(oldRoot); // (1) replace process old <> new root\n\n  canvas.setRootElement(newRoot);\n  canvas.removeRootElement(oldRoot); // (2) update root elements\n\n  collectionAdd(bpmnDefinitions.rootElements, newRootBusinessObject);\n  newRootBusinessObject.$parent = bpmnDefinitions;\n  collectionRemove(bpmnDefinitions.rootElements, oldRootBusinessObject);\n  oldRootBusinessObject.$parent = null; // (3) wire di\n\n  oldRoot.di = null;\n  diPlane.bpmnElement = newRootBusinessObject;\n  newRoot.di = diPlane;\n  context.oldRoot = oldRoot; // TODO(nikku): return changed elements?\n  // return [ newRoot, oldRoot ];\n};\n\nUpdateCanvasRootHandler.prototype.revert = function (context) {\n  var canvas = this._canvas;\n  var newRoot = context.newRoot,\n      newRootBusinessObject = newRoot.businessObject,\n      oldRoot = context.oldRoot,\n      oldRootBusinessObject = oldRoot.businessObject,\n      bpmnDefinitions = newRootBusinessObject.$parent,\n      diPlane = getDi(newRoot); // (1) replace process old <> new root\n\n  canvas.setRootElement(oldRoot);\n  canvas.removeRootElement(newRoot); // (2) update root elements\n\n  collectionRemove(bpmnDefinitions.rootElements, newRootBusinessObject);\n  newRootBusinessObject.$parent = null;\n  collectionAdd(bpmnDefinitions.rootElements, oldRootBusinessObject);\n  oldRootBusinessObject.$parent = bpmnDefinitions; // (3) wire di\n\n  newRoot.di = null;\n  diPlane.bpmnElement = oldRootBusinessObject;\n  oldRoot.di = diPlane; // TODO(nikku): return changed elements?\n  // return [ newRoot, oldRoot ];\n};","map":{"version":3,"names":["add","collectionAdd","remove","collectionRemove","getDi","UpdateCanvasRootHandler","canvas","modeling","_canvas","_modeling","$inject","prototype","execute","context","newRoot","newRootBusinessObject","businessObject","oldRoot","getRootElement","oldRootBusinessObject","bpmnDefinitions","$parent","diPlane","setRootElement","removeRootElement","rootElements","di","bpmnElement","revert"],"sources":["E:/Old_PC/Study/Angular/test-bpm/node_modules/bpmn-js/lib/features/modeling/cmd/UpdateCanvasRootHandler.js"],"sourcesContent":["import {\n  add as collectionAdd,\n  remove as collectionRemove\n} from 'diagram-js/lib/util/Collections';\n\nimport { getDi } from '../../../util/ModelUtil';\n\n\nexport default function UpdateCanvasRootHandler(canvas, modeling) {\n  this._canvas = canvas;\n  this._modeling = modeling;\n}\n\nUpdateCanvasRootHandler.$inject = [\n  'canvas',\n  'modeling'\n];\n\n\nUpdateCanvasRootHandler.prototype.execute = function(context) {\n\n  var canvas = this._canvas;\n\n  var newRoot = context.newRoot,\n      newRootBusinessObject = newRoot.businessObject,\n      oldRoot = canvas.getRootElement(),\n      oldRootBusinessObject = oldRoot.businessObject,\n      bpmnDefinitions = oldRootBusinessObject.$parent,\n      diPlane = getDi(oldRoot);\n\n  // (1) replace process old <> new root\n  canvas.setRootElement(newRoot);\n  canvas.removeRootElement(oldRoot);\n\n  // (2) update root elements\n  collectionAdd(bpmnDefinitions.rootElements, newRootBusinessObject);\n  newRootBusinessObject.$parent = bpmnDefinitions;\n\n  collectionRemove(bpmnDefinitions.rootElements, oldRootBusinessObject);\n  oldRootBusinessObject.$parent = null;\n\n  // (3) wire di\n  oldRoot.di = null;\n\n  diPlane.bpmnElement = newRootBusinessObject;\n  newRoot.di = diPlane;\n\n  context.oldRoot = oldRoot;\n\n  // TODO(nikku): return changed elements?\n  // return [ newRoot, oldRoot ];\n};\n\n\nUpdateCanvasRootHandler.prototype.revert = function(context) {\n\n  var canvas = this._canvas;\n\n  var newRoot = context.newRoot,\n      newRootBusinessObject = newRoot.businessObject,\n      oldRoot = context.oldRoot,\n      oldRootBusinessObject = oldRoot.businessObject,\n      bpmnDefinitions = newRootBusinessObject.$parent,\n      diPlane = getDi(newRoot);\n\n  // (1) replace process old <> new root\n  canvas.setRootElement(oldRoot);\n  canvas.removeRootElement(newRoot);\n\n  // (2) update root elements\n  collectionRemove(bpmnDefinitions.rootElements, newRootBusinessObject);\n  newRootBusinessObject.$parent = null;\n\n  collectionAdd(bpmnDefinitions.rootElements, oldRootBusinessObject);\n  oldRootBusinessObject.$parent = bpmnDefinitions;\n\n  // (3) wire di\n  newRoot.di = null;\n\n  diPlane.bpmnElement = oldRootBusinessObject;\n  oldRoot.di = diPlane;\n\n  // TODO(nikku): return changed elements?\n  // return [ newRoot, oldRoot ];\n};"],"mappings":"AAAA,SACEA,GAAG,IAAIC,aADT,EAEEC,MAAM,IAAIC,gBAFZ,QAGO,iCAHP;AAKA,SAASC,KAAT,QAAsB,yBAAtB;AAGA,eAAe,SAASC,uBAAT,CAAiCC,MAAjC,EAAyCC,QAAzC,EAAmD;EAChE,KAAKC,OAAL,GAAeF,MAAf;EACA,KAAKG,SAAL,GAAiBF,QAAjB;AACD;AAEDF,uBAAuB,CAACK,OAAxB,GAAkC,CAChC,QADgC,EAEhC,UAFgC,CAAlC;;AAMAL,uBAAuB,CAACM,SAAxB,CAAkCC,OAAlC,GAA4C,UAASC,OAAT,EAAkB;EAE5D,IAAIP,MAAM,GAAG,KAAKE,OAAlB;EAEA,IAAIM,OAAO,GAAGD,OAAO,CAACC,OAAtB;EAAA,IACIC,qBAAqB,GAAGD,OAAO,CAACE,cADpC;EAAA,IAEIC,OAAO,GAAGX,MAAM,CAACY,cAAP,EAFd;EAAA,IAGIC,qBAAqB,GAAGF,OAAO,CAACD,cAHpC;EAAA,IAIII,eAAe,GAAGD,qBAAqB,CAACE,OAJ5C;EAAA,IAKIC,OAAO,GAAGlB,KAAK,CAACa,OAAD,CALnB,CAJ4D,CAW5D;;EACAX,MAAM,CAACiB,cAAP,CAAsBT,OAAtB;EACAR,MAAM,CAACkB,iBAAP,CAAyBP,OAAzB,EAb4D,CAe5D;;EACAhB,aAAa,CAACmB,eAAe,CAACK,YAAjB,EAA+BV,qBAA/B,CAAb;EACAA,qBAAqB,CAACM,OAAtB,GAAgCD,eAAhC;EAEAjB,gBAAgB,CAACiB,eAAe,CAACK,YAAjB,EAA+BN,qBAA/B,CAAhB;EACAA,qBAAqB,CAACE,OAAtB,GAAgC,IAAhC,CApB4D,CAsB5D;;EACAJ,OAAO,CAACS,EAAR,GAAa,IAAb;EAEAJ,OAAO,CAACK,WAAR,GAAsBZ,qBAAtB;EACAD,OAAO,CAACY,EAAR,GAAaJ,OAAb;EAEAT,OAAO,CAACI,OAAR,GAAkBA,OAAlB,CA5B4D,CA8B5D;EACA;AACD,CAhCD;;AAmCAZ,uBAAuB,CAACM,SAAxB,CAAkCiB,MAAlC,GAA2C,UAASf,OAAT,EAAkB;EAE3D,IAAIP,MAAM,GAAG,KAAKE,OAAlB;EAEA,IAAIM,OAAO,GAAGD,OAAO,CAACC,OAAtB;EAAA,IACIC,qBAAqB,GAAGD,OAAO,CAACE,cADpC;EAAA,IAEIC,OAAO,GAAGJ,OAAO,CAACI,OAFtB;EAAA,IAGIE,qBAAqB,GAAGF,OAAO,CAACD,cAHpC;EAAA,IAIII,eAAe,GAAGL,qBAAqB,CAACM,OAJ5C;EAAA,IAKIC,OAAO,GAAGlB,KAAK,CAACU,OAAD,CALnB,CAJ2D,CAW3D;;EACAR,MAAM,CAACiB,cAAP,CAAsBN,OAAtB;EACAX,MAAM,CAACkB,iBAAP,CAAyBV,OAAzB,EAb2D,CAe3D;;EACAX,gBAAgB,CAACiB,eAAe,CAACK,YAAjB,EAA+BV,qBAA/B,CAAhB;EACAA,qBAAqB,CAACM,OAAtB,GAAgC,IAAhC;EAEApB,aAAa,CAACmB,eAAe,CAACK,YAAjB,EAA+BN,qBAA/B,CAAb;EACAA,qBAAqB,CAACE,OAAtB,GAAgCD,eAAhC,CApB2D,CAsB3D;;EACAN,OAAO,CAACY,EAAR,GAAa,IAAb;EAEAJ,OAAO,CAACK,WAAR,GAAsBR,qBAAtB;EACAF,OAAO,CAACS,EAAR,GAAaJ,OAAb,CA1B2D,CA4B3D;EACA;AACD,CA9BD"},"metadata":{},"sourceType":"module"}