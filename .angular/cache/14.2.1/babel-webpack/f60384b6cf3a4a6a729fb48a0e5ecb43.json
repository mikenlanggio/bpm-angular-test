{"ast":null,"code":"function createCommonjsModule(fn, module) {\n  return module = {\n    exports: {}\n  }, fn(module, module.exports), module.exports;\n}\n\nvar hat_1 = createCommonjsModule(function (module) {\n  var hat = module.exports = function (bits, base) {\n    if (!base) base = 16;\n    if (bits === undefined) bits = 128;\n    if (bits <= 0) return '0';\n    var digits = Math.log(Math.pow(2, bits)) / Math.log(base);\n\n    for (var i = 2; digits === Infinity; i *= 2) {\n      digits = Math.log(Math.pow(2, bits / i)) / Math.log(base) * i;\n    }\n\n    var rem = digits - Math.floor(digits);\n    var res = '';\n\n    for (var i = 0; i < Math.floor(digits); i++) {\n      var x = Math.floor(Math.random() * base).toString(base);\n      res = x + res;\n    }\n\n    if (rem) {\n      var b = Math.pow(base, rem);\n      var x = Math.floor(Math.random() * b).toString(base);\n      res = x + res;\n    }\n\n    var parsed = parseInt(res, base);\n\n    if (parsed !== Infinity && parsed >= Math.pow(2, bits)) {\n      return hat(bits, base);\n    } else return res;\n  };\n\n  hat.rack = function (bits, base, expandBy) {\n    var fn = function (data) {\n      var iters = 0;\n\n      do {\n        if (iters++ > 10) {\n          if (expandBy) bits += expandBy;else throw new Error('too many ID collisions, use more bits');\n        }\n\n        var id = hat(bits, base);\n      } while (Object.hasOwnProperty.call(hats, id));\n\n      hats[id] = data;\n      return id;\n    };\n\n    var hats = fn.hats = {};\n\n    fn.get = function (id) {\n      return fn.hats[id];\n    };\n\n    fn.set = function (id, value) {\n      fn.hats[id] = value;\n      return fn;\n    };\n\n    fn.bits = bits || 128;\n    fn.base = base || 16;\n    return fn;\n  };\n});\n/**\n * Create a new id generator / cache instance.\n *\n * You may optionally provide a seed that is used internally.\n *\n * @param {Seed} seed\n */\n\nfunction Ids(seed) {\n  if (!(this instanceof Ids)) {\n    return new Ids(seed);\n  }\n\n  seed = seed || [128, 36, 1];\n  this._seed = seed.length ? hat_1.rack(seed[0], seed[1], seed[2]) : seed;\n}\n/**\n * Generate a next id.\n *\n * @param {Object} [element] element to bind the id to\n *\n * @return {String} id\n */\n\n\nIds.prototype.next = function (element) {\n  return this._seed(element || true);\n};\n/**\n * Generate a next id with a given prefix.\n *\n * @param {Object} [element] element to bind the id to\n *\n * @return {String} id\n */\n\n\nIds.prototype.nextPrefixed = function (prefix, element) {\n  var id;\n\n  do {\n    id = prefix + this.next(true);\n  } while (this.assigned(id)); // claim {prefix}{random}\n\n\n  this.claim(id, element); // return\n\n  return id;\n};\n/**\n * Manually claim an existing id.\n *\n * @param {String} id\n * @param {String} [element] element the id is claimed by\n */\n\n\nIds.prototype.claim = function (id, element) {\n  this._seed.set(id, element || true);\n};\n/**\n * Returns true if the given id has already been assigned.\n *\n * @param  {String} id\n * @return {Boolean}\n */\n\n\nIds.prototype.assigned = function (id) {\n  return this._seed.get(id) || false;\n};\n/**\n * Unclaim an id.\n *\n * @param  {String} id the id to unclaim\n */\n\n\nIds.prototype.unclaim = function (id) {\n  delete this._seed.hats[id];\n};\n/**\n * Clear all claimed ids.\n */\n\n\nIds.prototype.clear = function () {\n  var hats = this._seed.hats,\n      id;\n\n  for (id in hats) {\n    this.unclaim(id);\n  }\n};\n\nexport default Ids;","map":{"version":3,"names":["createCommonjsModule","fn","module","exports","hat_1","hat","bits","base","undefined","digits","Math","log","pow","i","Infinity","rem","floor","res","x","random","toString","b","parsed","parseInt","rack","expandBy","data","iters","Error","id","Object","hasOwnProperty","call","hats","get","set","value","Ids","seed","_seed","length","prototype","next","element","nextPrefixed","prefix","assigned","claim","unclaim","clear"],"sources":["E:/Old_PC/Study/Angular/test-bpm/node_modules/ids/dist/index.esm.js"],"sourcesContent":["function createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar hat_1 = createCommonjsModule(function (module) {\nvar hat = module.exports = function (bits, base) {\n    if (!base) base = 16;\n    if (bits === undefined) bits = 128;\n    if (bits <= 0) return '0';\n    \n    var digits = Math.log(Math.pow(2, bits)) / Math.log(base);\n    for (var i = 2; digits === Infinity; i *= 2) {\n        digits = Math.log(Math.pow(2, bits / i)) / Math.log(base) * i;\n    }\n    \n    var rem = digits - Math.floor(digits);\n    \n    var res = '';\n    \n    for (var i = 0; i < Math.floor(digits); i++) {\n        var x = Math.floor(Math.random() * base).toString(base);\n        res = x + res;\n    }\n    \n    if (rem) {\n        var b = Math.pow(base, rem);\n        var x = Math.floor(Math.random() * b).toString(base);\n        res = x + res;\n    }\n    \n    var parsed = parseInt(res, base);\n    if (parsed !== Infinity && parsed >= Math.pow(2, bits)) {\n        return hat(bits, base)\n    }\n    else return res;\n};\n\nhat.rack = function (bits, base, expandBy) {\n    var fn = function (data) {\n        var iters = 0;\n        do {\n            if (iters ++ > 10) {\n                if (expandBy) bits += expandBy;\n                else throw new Error('too many ID collisions, use more bits')\n            }\n            \n            var id = hat(bits, base);\n        } while (Object.hasOwnProperty.call(hats, id));\n        \n        hats[id] = data;\n        return id;\n    };\n    var hats = fn.hats = {};\n    \n    fn.get = function (id) {\n        return fn.hats[id];\n    };\n    \n    fn.set = function (id, value) {\n        fn.hats[id] = value;\n        return fn;\n    };\n    \n    fn.bits = bits || 128;\n    fn.base = base || 16;\n    return fn;\n};\n});\n\n/**\n * Create a new id generator / cache instance.\n *\n * You may optionally provide a seed that is used internally.\n *\n * @param {Seed} seed\n */\n\nfunction Ids(seed) {\n  if (!(this instanceof Ids)) {\n    return new Ids(seed);\n  }\n\n  seed = seed || [128, 36, 1];\n  this._seed = seed.length ? hat_1.rack(seed[0], seed[1], seed[2]) : seed;\n}\n/**\n * Generate a next id.\n *\n * @param {Object} [element] element to bind the id to\n *\n * @return {String} id\n */\n\nIds.prototype.next = function (element) {\n  return this._seed(element || true);\n};\n/**\n * Generate a next id with a given prefix.\n *\n * @param {Object} [element] element to bind the id to\n *\n * @return {String} id\n */\n\n\nIds.prototype.nextPrefixed = function (prefix, element) {\n  var id;\n\n  do {\n    id = prefix + this.next(true);\n  } while (this.assigned(id)); // claim {prefix}{random}\n\n\n  this.claim(id, element); // return\n\n  return id;\n};\n/**\n * Manually claim an existing id.\n *\n * @param {String} id\n * @param {String} [element] element the id is claimed by\n */\n\n\nIds.prototype.claim = function (id, element) {\n  this._seed.set(id, element || true);\n};\n/**\n * Returns true if the given id has already been assigned.\n *\n * @param  {String} id\n * @return {Boolean}\n */\n\n\nIds.prototype.assigned = function (id) {\n  return this._seed.get(id) || false;\n};\n/**\n * Unclaim an id.\n *\n * @param  {String} id the id to unclaim\n */\n\n\nIds.prototype.unclaim = function (id) {\n  delete this._seed.hats[id];\n};\n/**\n * Clear all claimed ids.\n */\n\n\nIds.prototype.clear = function () {\n  var hats = this._seed.hats,\n      id;\n\n  for (id in hats) {\n    this.unclaim(id);\n  }\n};\n\nexport default Ids;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}