{"ast":null,"code":"import { add as collectionAdd, indexOf as collectionIdx } from '../../../util/Collections';\nimport { saveClear } from '../../../util/Removal';\n/**\n * A handler that implements reversible deletion of shapes.\n *\n */\n\nexport default function DeleteShapeHandler(canvas, modeling) {\n  this._canvas = canvas;\n  this._modeling = modeling;\n}\nDeleteShapeHandler.$inject = ['canvas', 'modeling'];\n/**\n * - Remove connections\n * - Remove all direct children\n */\n\nDeleteShapeHandler.prototype.preExecute = function (context) {\n  var modeling = this._modeling;\n  var shape = context.shape; // remove connections\n\n  saveClear(shape.incoming, function (connection) {\n    // To make sure that the connection isn't removed twice\n    // For example if a container is removed\n    modeling.removeConnection(connection, {\n      nested: true\n    });\n  });\n  saveClear(shape.outgoing, function (connection) {\n    modeling.removeConnection(connection, {\n      nested: true\n    });\n  }); // remove child shapes and connections\n\n  saveClear(shape.children, function (child) {\n    if (isConnection(child)) {\n      modeling.removeConnection(child, {\n        nested: true\n      });\n    } else {\n      modeling.removeShape(child, {\n        nested: true\n      });\n    }\n  });\n};\n/**\n * Remove shape and remember the parent\n */\n\n\nDeleteShapeHandler.prototype.execute = function (context) {\n  var canvas = this._canvas;\n  var shape = context.shape,\n      oldParent = shape.parent;\n  context.oldParent = oldParent; // remove containment\n\n  context.oldParentIndex = collectionIdx(oldParent.children, shape); // remove shape\n\n  canvas.removeShape(shape);\n  return shape;\n};\n/**\n * Command revert implementation\n */\n\n\nDeleteShapeHandler.prototype.revert = function (context) {\n  var canvas = this._canvas;\n  var shape = context.shape,\n      oldParent = context.oldParent,\n      oldParentIndex = context.oldParentIndex; // restore containment\n\n  collectionAdd(oldParent.children, shape, oldParentIndex);\n  canvas.addShape(shape, oldParent);\n  return shape;\n};\n\nfunction isConnection(element) {\n  return element.waypoints;\n}","map":{"version":3,"names":["add","collectionAdd","indexOf","collectionIdx","saveClear","DeleteShapeHandler","canvas","modeling","_canvas","_modeling","$inject","prototype","preExecute","context","shape","incoming","connection","removeConnection","nested","outgoing","children","child","isConnection","removeShape","execute","oldParent","parent","oldParentIndex","revert","addShape","element","waypoints"],"sources":["E:/Old_PC/Study/Angular/test-bpm/node_modules/diagram-js/lib/features/modeling/cmd/DeleteShapeHandler.js"],"sourcesContent":["import {\n  add as collectionAdd,\n  indexOf as collectionIdx\n} from '../../../util/Collections';\n\nimport { saveClear } from '../../../util/Removal';\n\n\n/**\n * A handler that implements reversible deletion of shapes.\n *\n */\nexport default function DeleteShapeHandler(canvas, modeling) {\n  this._canvas = canvas;\n  this._modeling = modeling;\n}\n\nDeleteShapeHandler.$inject = [ 'canvas', 'modeling' ];\n\n\n/**\n * - Remove connections\n * - Remove all direct children\n */\nDeleteShapeHandler.prototype.preExecute = function(context) {\n\n  var modeling = this._modeling;\n\n  var shape = context.shape;\n\n  // remove connections\n  saveClear(shape.incoming, function(connection) {\n\n    // To make sure that the connection isn't removed twice\n    // For example if a container is removed\n    modeling.removeConnection(connection, { nested: true });\n  });\n\n  saveClear(shape.outgoing, function(connection) {\n    modeling.removeConnection(connection, { nested: true });\n  });\n\n  // remove child shapes and connections\n  saveClear(shape.children, function(child) {\n    if (isConnection(child)) {\n      modeling.removeConnection(child, { nested: true });\n    } else {\n      modeling.removeShape(child, { nested: true });\n    }\n  });\n};\n\n/**\n * Remove shape and remember the parent\n */\nDeleteShapeHandler.prototype.execute = function(context) {\n  var canvas = this._canvas;\n\n  var shape = context.shape,\n      oldParent = shape.parent;\n\n  context.oldParent = oldParent;\n\n  // remove containment\n  context.oldParentIndex = collectionIdx(oldParent.children, shape);\n\n  // remove shape\n  canvas.removeShape(shape);\n\n  return shape;\n};\n\n\n/**\n * Command revert implementation\n */\nDeleteShapeHandler.prototype.revert = function(context) {\n\n  var canvas = this._canvas;\n\n  var shape = context.shape,\n      oldParent = context.oldParent,\n      oldParentIndex = context.oldParentIndex;\n\n  // restore containment\n  collectionAdd(oldParent.children, shape, oldParentIndex);\n\n  canvas.addShape(shape, oldParent);\n\n  return shape;\n};\n\nfunction isConnection(element) {\n  return element.waypoints;\n}\n"],"mappings":"AAAA,SACEA,GAAG,IAAIC,aADT,EAEEC,OAAO,IAAIC,aAFb,QAGO,2BAHP;AAKA,SAASC,SAAT,QAA0B,uBAA1B;AAGA;AACA;AACA;AACA;;AACA,eAAe,SAASC,kBAAT,CAA4BC,MAA5B,EAAoCC,QAApC,EAA8C;EAC3D,KAAKC,OAAL,GAAeF,MAAf;EACA,KAAKG,SAAL,GAAiBF,QAAjB;AACD;AAEDF,kBAAkB,CAACK,OAAnB,GAA6B,CAAE,QAAF,EAAY,UAAZ,CAA7B;AAGA;AACA;AACA;AACA;;AACAL,kBAAkB,CAACM,SAAnB,CAA6BC,UAA7B,GAA0C,UAASC,OAAT,EAAkB;EAE1D,IAAIN,QAAQ,GAAG,KAAKE,SAApB;EAEA,IAAIK,KAAK,GAAGD,OAAO,CAACC,KAApB,CAJ0D,CAM1D;;EACAV,SAAS,CAACU,KAAK,CAACC,QAAP,EAAiB,UAASC,UAAT,EAAqB;IAE7C;IACA;IACAT,QAAQ,CAACU,gBAAT,CAA0BD,UAA1B,EAAsC;MAAEE,MAAM,EAAE;IAAV,CAAtC;EACD,CALQ,CAAT;EAOAd,SAAS,CAACU,KAAK,CAACK,QAAP,EAAiB,UAASH,UAAT,EAAqB;IAC7CT,QAAQ,CAACU,gBAAT,CAA0BD,UAA1B,EAAsC;MAAEE,MAAM,EAAE;IAAV,CAAtC;EACD,CAFQ,CAAT,CAd0D,CAkB1D;;EACAd,SAAS,CAACU,KAAK,CAACM,QAAP,EAAiB,UAASC,KAAT,EAAgB;IACxC,IAAIC,YAAY,CAACD,KAAD,CAAhB,EAAyB;MACvBd,QAAQ,CAACU,gBAAT,CAA0BI,KAA1B,EAAiC;QAAEH,MAAM,EAAE;MAAV,CAAjC;IACD,CAFD,MAEO;MACLX,QAAQ,CAACgB,WAAT,CAAqBF,KAArB,EAA4B;QAAEH,MAAM,EAAE;MAAV,CAA5B;IACD;EACF,CANQ,CAAT;AAOD,CA1BD;AA4BA;AACA;AACA;;;AACAb,kBAAkB,CAACM,SAAnB,CAA6Ba,OAA7B,GAAuC,UAASX,OAAT,EAAkB;EACvD,IAAIP,MAAM,GAAG,KAAKE,OAAlB;EAEA,IAAIM,KAAK,GAAGD,OAAO,CAACC,KAApB;EAAA,IACIW,SAAS,GAAGX,KAAK,CAACY,MADtB;EAGAb,OAAO,CAACY,SAAR,GAAoBA,SAApB,CANuD,CAQvD;;EACAZ,OAAO,CAACc,cAAR,GAAyBxB,aAAa,CAACsB,SAAS,CAACL,QAAX,EAAqBN,KAArB,CAAtC,CATuD,CAWvD;;EACAR,MAAM,CAACiB,WAAP,CAAmBT,KAAnB;EAEA,OAAOA,KAAP;AACD,CAfD;AAkBA;AACA;AACA;;;AACAT,kBAAkB,CAACM,SAAnB,CAA6BiB,MAA7B,GAAsC,UAASf,OAAT,EAAkB;EAEtD,IAAIP,MAAM,GAAG,KAAKE,OAAlB;EAEA,IAAIM,KAAK,GAAGD,OAAO,CAACC,KAApB;EAAA,IACIW,SAAS,GAAGZ,OAAO,CAACY,SADxB;EAAA,IAEIE,cAAc,GAAGd,OAAO,CAACc,cAF7B,CAJsD,CAQtD;;EACA1B,aAAa,CAACwB,SAAS,CAACL,QAAX,EAAqBN,KAArB,EAA4Ba,cAA5B,CAAb;EAEArB,MAAM,CAACuB,QAAP,CAAgBf,KAAhB,EAAuBW,SAAvB;EAEA,OAAOX,KAAP;AACD,CAdD;;AAgBA,SAASQ,YAAT,CAAsBQ,OAAtB,EAA+B;EAC7B,OAAOA,OAAO,CAACC,SAAf;AACD"},"metadata":{},"sourceType":"module"}