{"ast":null,"code":"import { bind, debounce, forEach, isNumber, isObject } from 'min-dash';\nimport { isSnapped, setSnapped } from './SnapUtil';\nimport { append as svgAppend, attr as svgAttr, classes as svgClasses, create as svgCreate } from 'tiny-svg';\nvar SNAP_TOLERANCE = 7;\nexport var SNAP_LINE_HIDE_DELAY = 1000;\n/**\n * Generic snapping feature.\n *\n * @param {EventBus} eventBus\n * @param {Canvas} canvas\n */\n\nexport default function Snapping(canvas) {\n  this._canvas = canvas; // delay hide by 1000 seconds since last snap\n\n  this._asyncHide = debounce(bind(this.hide, this), SNAP_LINE_HIDE_DELAY);\n}\nSnapping.$inject = ['canvas'];\n/**\n * Snap an event to given snap points.\n *\n * @param {Event} event\n * @param {SnapPoints} snapPoints\n */\n\nSnapping.prototype.snap = function (event, snapPoints) {\n  var context = event.context,\n      snapContext = context.snapContext,\n      snapLocations = snapContext.getSnapLocations();\n  var snapping = {\n    x: isSnapped(event, 'x'),\n    y: isSnapped(event, 'y')\n  };\n  forEach(snapLocations, function (location) {\n    var snapOrigin = snapContext.getSnapOrigin(location);\n    var snapCurrent = {\n      x: event.x + snapOrigin.x,\n      y: event.y + snapOrigin.y\n    }; // snap both axis if not snapped already\n\n    forEach(['x', 'y'], function (axis) {\n      var locationSnapping;\n\n      if (!snapping[axis]) {\n        locationSnapping = snapPoints.snap(snapCurrent, location, axis, SNAP_TOLERANCE);\n\n        if (locationSnapping !== undefined) {\n          snapping[axis] = {\n            value: locationSnapping,\n            originValue: locationSnapping - snapOrigin[axis]\n          };\n        }\n      }\n    }); // no need to continue snapping\n\n    if (snapping.x && snapping.y) {\n      return false;\n    }\n  }); // show snap lines\n\n  this.showSnapLine('vertical', snapping.x && snapping.x.value);\n  this.showSnapLine('horizontal', snapping.y && snapping.y.value); // snap event\n\n  forEach(['x', 'y'], function (axis) {\n    var axisSnapping = snapping[axis];\n\n    if (isObject(axisSnapping)) {\n      setSnapped(event, axis, axisSnapping.originValue);\n    }\n  });\n};\n\nSnapping.prototype._createLine = function (orientation) {\n  var root = this._canvas.getLayer('snap');\n\n  var line = svgCreate('path');\n  svgAttr(line, {\n    d: 'M0,0 L0,0'\n  });\n  svgClasses(line).add('djs-snap-line');\n  svgAppend(root, line);\n  return {\n    update: function (position) {\n      if (!isNumber(position)) {\n        svgAttr(line, {\n          display: 'none'\n        });\n      } else {\n        if (orientation === 'horizontal') {\n          svgAttr(line, {\n            d: 'M-100000,' + position + ' L+100000,' + position,\n            display: ''\n          });\n        } else {\n          svgAttr(line, {\n            d: 'M ' + position + ',-100000 L ' + position + ', +100000',\n            display: ''\n          });\n        }\n      }\n    }\n  };\n};\n\nSnapping.prototype._createSnapLines = function () {\n  this._snapLines = {\n    horizontal: this._createLine('horizontal'),\n    vertical: this._createLine('vertical')\n  };\n};\n\nSnapping.prototype.showSnapLine = function (orientation, position) {\n  var line = this.getSnapLine(orientation);\n\n  if (line) {\n    line.update(position);\n  }\n\n  this._asyncHide();\n};\n\nSnapping.prototype.getSnapLine = function (orientation) {\n  if (!this._snapLines) {\n    this._createSnapLines();\n  }\n\n  return this._snapLines[orientation];\n};\n\nSnapping.prototype.hide = function () {\n  forEach(this._snapLines, function (snapLine) {\n    snapLine.update();\n  });\n};","map":{"version":3,"names":["bind","debounce","forEach","isNumber","isObject","isSnapped","setSnapped","append","svgAppend","attr","svgAttr","classes","svgClasses","create","svgCreate","SNAP_TOLERANCE","SNAP_LINE_HIDE_DELAY","Snapping","canvas","_canvas","_asyncHide","hide","$inject","prototype","snap","event","snapPoints","context","snapContext","snapLocations","getSnapLocations","snapping","x","y","location","snapOrigin","getSnapOrigin","snapCurrent","axis","locationSnapping","undefined","value","originValue","showSnapLine","axisSnapping","_createLine","orientation","root","getLayer","line","d","add","update","position","display","_createSnapLines","_snapLines","horizontal","vertical","getSnapLine","snapLine"],"sources":["E:/Old_PC/Study/Angular/test-bpm/node_modules/diagram-js/lib/features/snapping/Snapping.js"],"sourcesContent":["import {\n  bind,\n  debounce,\n  forEach,\n  isNumber,\n  isObject\n} from 'min-dash';\n\nimport {\n  isSnapped,\n  setSnapped\n} from './SnapUtil';\n\nimport {\n  append as svgAppend,\n  attr as svgAttr,\n  classes as svgClasses,\n  create as svgCreate\n} from 'tiny-svg';\n\nvar SNAP_TOLERANCE = 7;\n\nexport var SNAP_LINE_HIDE_DELAY = 1000;\n\n\n/**\n * Generic snapping feature.\n *\n * @param {EventBus} eventBus\n * @param {Canvas} canvas\n */\nexport default function Snapping(canvas) {\n  this._canvas = canvas;\n\n  // delay hide by 1000 seconds since last snap\n  this._asyncHide = debounce(bind(this.hide, this), SNAP_LINE_HIDE_DELAY);\n}\n\nSnapping.$inject = [ 'canvas' ];\n\n/**\n * Snap an event to given snap points.\n *\n * @param {Event} event\n * @param {SnapPoints} snapPoints\n */\nSnapping.prototype.snap = function(event, snapPoints) {\n  var context = event.context,\n      snapContext = context.snapContext,\n      snapLocations = snapContext.getSnapLocations();\n\n  var snapping = {\n    x: isSnapped(event, 'x'),\n    y: isSnapped(event, 'y')\n  };\n\n  forEach(snapLocations, function(location) {\n    var snapOrigin = snapContext.getSnapOrigin(location);\n\n    var snapCurrent = {\n      x: event.x + snapOrigin.x,\n      y: event.y + snapOrigin.y\n    };\n\n    // snap both axis if not snapped already\n    forEach([ 'x', 'y' ], function(axis) {\n      var locationSnapping;\n\n      if (!snapping[axis]) {\n        locationSnapping = snapPoints.snap(snapCurrent, location, axis, SNAP_TOLERANCE);\n\n        if (locationSnapping !== undefined) {\n          snapping[axis] = {\n            value: locationSnapping,\n            originValue: locationSnapping - snapOrigin[axis]\n          };\n        }\n      }\n    });\n\n    // no need to continue snapping\n    if (snapping.x && snapping.y) {\n      return false;\n    }\n  });\n\n  // show snap lines\n  this.showSnapLine('vertical', snapping.x && snapping.x.value);\n  this.showSnapLine('horizontal', snapping.y && snapping.y.value);\n\n  // snap event\n  forEach([ 'x', 'y' ], function(axis) {\n    var axisSnapping = snapping[axis];\n\n    if (isObject(axisSnapping)) {\n      setSnapped(event, axis, axisSnapping.originValue);\n    }\n  });\n};\n\nSnapping.prototype._createLine = function(orientation) {\n  var root = this._canvas.getLayer('snap');\n\n  var line = svgCreate('path');\n\n  svgAttr(line, { d: 'M0,0 L0,0' });\n\n  svgClasses(line).add('djs-snap-line');\n\n  svgAppend(root, line);\n\n  return {\n    update: function(position) {\n\n      if (!isNumber(position)) {\n        svgAttr(line, { display: 'none' });\n      } else {\n        if (orientation === 'horizontal') {\n          svgAttr(line, {\n            d: 'M-100000,' + position + ' L+100000,' + position,\n            display: ''\n          });\n        } else {\n          svgAttr(line, {\n            d: 'M ' + position + ',-100000 L ' + position + ', +100000',\n            display: ''\n          });\n        }\n      }\n    }\n  };\n};\n\nSnapping.prototype._createSnapLines = function() {\n  this._snapLines = {\n    horizontal: this._createLine('horizontal'),\n    vertical: this._createLine('vertical')\n  };\n};\n\nSnapping.prototype.showSnapLine = function(orientation, position) {\n\n  var line = this.getSnapLine(orientation);\n\n  if (line) {\n    line.update(position);\n  }\n\n  this._asyncHide();\n};\n\nSnapping.prototype.getSnapLine = function(orientation) {\n  if (!this._snapLines) {\n    this._createSnapLines();\n  }\n\n  return this._snapLines[orientation];\n};\n\nSnapping.prototype.hide = function() {\n  forEach(this._snapLines, function(snapLine) {\n    snapLine.update();\n  });\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}