{"ast":null,"code":"import { getMid } from '../../layout/LayoutUtil';\nimport { isNil, isObject } from 'min-dash';\nexport default function Connect(eventBus, dragging, modeling, rules) {\n  // rules\n  function canConnect(source, target) {\n    return rules.allowed('connection.create', {\n      source: source,\n      target: target\n    });\n  }\n\n  function canConnectReverse(source, target) {\n    return canConnect(target, source);\n  } // event handlers\n\n\n  eventBus.on('connect.hover', function (event) {\n    var context = event.context,\n        start = context.start,\n        hover = event.hover,\n        canExecute; // cache hover state\n\n    context.hover = hover;\n    canExecute = context.canExecute = canConnect(start, hover); // ignore hover\n\n    if (isNil(canExecute)) {\n      return;\n    }\n\n    if (canExecute !== false) {\n      context.source = start;\n      context.target = hover;\n      return;\n    }\n\n    canExecute = context.canExecute = canConnectReverse(start, hover); // ignore hover\n\n    if (isNil(canExecute)) {\n      return;\n    }\n\n    if (canExecute !== false) {\n      context.source = hover;\n      context.target = start;\n    }\n  });\n  eventBus.on(['connect.out', 'connect.cleanup'], function (event) {\n    var context = event.context;\n    context.hover = null;\n    context.source = null;\n    context.target = null;\n    context.canExecute = false;\n  });\n  eventBus.on('connect.end', function (event) {\n    var context = event.context,\n        canExecute = context.canExecute,\n        connectionStart = context.connectionStart,\n        connectionEnd = {\n      x: event.x,\n      y: event.y\n    },\n        source = context.source,\n        target = context.target;\n\n    if (!canExecute) {\n      return false;\n    }\n\n    var attrs = null,\n        hints = {\n      connectionStart: isReverse(context) ? connectionEnd : connectionStart,\n      connectionEnd: isReverse(context) ? connectionStart : connectionEnd\n    };\n\n    if (isObject(canExecute)) {\n      attrs = canExecute;\n    }\n\n    context.connection = modeling.connect(source, target, attrs, hints);\n  }); // API\n\n  /**\n   * Start connect operation.\n   *\n   * @param {DOMEvent} event\n   * @param {djs.model.Base} start\n   * @param {Point} [connectionStart]\n   * @param {boolean} [autoActivate=false]\n   */\n\n  this.start = function (event, start, connectionStart, autoActivate) {\n    if (!isObject(connectionStart)) {\n      autoActivate = connectionStart;\n      connectionStart = getMid(start);\n    }\n\n    dragging.init(event, 'connect', {\n      autoActivate: autoActivate,\n      data: {\n        shape: start,\n        context: {\n          start: start,\n          connectionStart: connectionStart\n        }\n      }\n    });\n  };\n}\nConnect.$inject = ['eventBus', 'dragging', 'modeling', 'rules']; // helpers //////////\n\nexport function isReverse(context) {\n  var hover = context.hover,\n      source = context.source,\n      target = context.target;\n  return hover && source && hover === source && source !== target;\n}","map":{"version":3,"names":["getMid","isNil","isObject","Connect","eventBus","dragging","modeling","rules","canConnect","source","target","allowed","canConnectReverse","on","event","context","start","hover","canExecute","connectionStart","connectionEnd","x","y","attrs","hints","isReverse","connection","connect","autoActivate","init","data","shape","$inject"],"sources":["E:/Old_PC/Study/Angular/test-bpm/node_modules/diagram-js/lib/features/connect/Connect.js"],"sourcesContent":["import {\n  getMid\n} from '../../layout/LayoutUtil';\n\nimport {\n  isNil,\n  isObject\n} from 'min-dash';\n\n\nexport default function Connect(eventBus, dragging, modeling, rules) {\n\n  // rules\n\n  function canConnect(source, target) {\n    return rules.allowed('connection.create', {\n      source: source,\n      target: target\n    });\n  }\n\n  function canConnectReverse(source, target) {\n    return canConnect(target, source);\n  }\n\n\n  // event handlers\n\n  eventBus.on('connect.hover', function(event) {\n    var context = event.context,\n        start = context.start,\n        hover = event.hover,\n        canExecute;\n\n    // cache hover state\n    context.hover = hover;\n\n    canExecute = context.canExecute = canConnect(start, hover);\n\n    // ignore hover\n    if (isNil(canExecute)) {\n      return;\n    }\n\n    if (canExecute !== false) {\n      context.source = start;\n      context.target = hover;\n\n      return;\n    }\n\n    canExecute = context.canExecute = canConnectReverse(start, hover);\n\n    // ignore hover\n    if (isNil(canExecute)) {\n      return;\n    }\n\n    if (canExecute !== false) {\n      context.source = hover;\n      context.target = start;\n    }\n  });\n\n  eventBus.on([ 'connect.out', 'connect.cleanup' ], function(event) {\n    var context = event.context;\n\n    context.hover = null;\n    context.source = null;\n    context.target = null;\n\n    context.canExecute = false;\n  });\n\n  eventBus.on('connect.end', function(event) {\n    var context = event.context,\n        canExecute = context.canExecute,\n        connectionStart = context.connectionStart,\n        connectionEnd = {\n          x: event.x,\n          y: event.y\n        },\n        source = context.source,\n        target = context.target;\n\n    if (!canExecute) {\n      return false;\n    }\n\n    var attrs = null,\n        hints = {\n          connectionStart: isReverse(context) ? connectionEnd : connectionStart,\n          connectionEnd: isReverse(context) ? connectionStart : connectionEnd\n        };\n\n    if (isObject(canExecute)) {\n      attrs = canExecute;\n    }\n\n    context.connection = modeling.connect(source, target, attrs, hints);\n  });\n\n\n  // API\n\n  /**\n   * Start connect operation.\n   *\n   * @param {DOMEvent} event\n   * @param {djs.model.Base} start\n   * @param {Point} [connectionStart]\n   * @param {boolean} [autoActivate=false]\n   */\n  this.start = function(event, start, connectionStart, autoActivate) {\n    if (!isObject(connectionStart)) {\n      autoActivate = connectionStart;\n      connectionStart = getMid(start);\n    }\n\n    dragging.init(event, 'connect', {\n      autoActivate: autoActivate,\n      data: {\n        shape: start,\n        context: {\n          start: start,\n          connectionStart: connectionStart\n        }\n      }\n    });\n  };\n}\n\nConnect.$inject = [\n  'eventBus',\n  'dragging',\n  'modeling',\n  'rules'\n];\n\n\n// helpers //////////\n\nexport function isReverse(context) {\n  var hover = context.hover,\n      source = context.source,\n      target = context.target;\n\n  return hover && source && hover === source && source !== target;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}