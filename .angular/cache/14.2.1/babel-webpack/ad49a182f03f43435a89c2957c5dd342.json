{"ast":null,"code":"import { isArray, isFunction, forEach } from 'min-dash';\nimport { domify, query as domQuery, attr as domAttr, clear as domClear, classes as domClasses, matches as domMatches, delegate as domDelegate, event as domEvent } from 'min-dom';\nimport { escapeCSS } from '../../util/EscapeUtil';\nvar TOGGLE_SELECTOR = '.djs-palette-toggle',\n    ENTRY_SELECTOR = '.entry',\n    ELEMENT_SELECTOR = TOGGLE_SELECTOR + ', ' + ENTRY_SELECTOR;\nvar PALETTE_PREFIX = 'djs-palette-',\n    PALETTE_SHOWN_CLS = 'shown',\n    PALETTE_OPEN_CLS = 'open',\n    PALETTE_TWO_COLUMN_CLS = 'two-column';\nvar DEFAULT_PRIORITY = 1000;\n/**\n * A palette containing modeling elements.\n */\n\nexport default function Palette(eventBus, canvas) {\n  this._eventBus = eventBus;\n  this._canvas = canvas;\n  var self = this;\n  eventBus.on('tool-manager.update', function (event) {\n    var tool = event.tool;\n    self.updateToolHighlight(tool);\n  });\n  eventBus.on('i18n.changed', function () {\n    self._update();\n  });\n  eventBus.on('diagram.init', function () {\n    self._diagramInitialized = true;\n\n    self._rebuild();\n  });\n}\nPalette.$inject = ['eventBus', 'canvas'];\n/**\n * Register a provider with the palette\n *\n * @param  {number} [priority=1000]\n * @param  {PaletteProvider} provider\n *\n * @example\n * const paletteProvider = {\n *   getPaletteEntries: function() {\n *     return function(entries) {\n *       return {\n *         ...entries,\n *         'entry-1': {\n *           label: 'My Entry',\n *           action: function() { alert(\"I have been clicked!\"); }\n *         }\n *       };\n *     }\n *   }\n * };\n *\n * palette.registerProvider(800, paletteProvider);\n */\n\nPalette.prototype.registerProvider = function (priority, provider) {\n  if (!provider) {\n    provider = priority;\n    priority = DEFAULT_PRIORITY;\n  }\n\n  this._eventBus.on('palette.getProviders', priority, function (event) {\n    event.providers.push(provider);\n  });\n\n  this._rebuild();\n};\n/**\n * Returns the palette entries\n *\n * @return {Object<string, PaletteEntryDescriptor>} map of entries\n */\n\n\nPalette.prototype.getEntries = function () {\n  var providers = this._getProviders();\n\n  return providers.reduce(addPaletteEntries, {});\n};\n\nPalette.prototype._rebuild = function () {\n  if (!this._diagramInitialized) {\n    return;\n  }\n\n  var providers = this._getProviders();\n\n  if (!providers.length) {\n    return;\n  }\n\n  if (!this._container) {\n    this._init();\n  }\n\n  this._update();\n};\n/**\n * Initialize\n */\n\n\nPalette.prototype._init = function () {\n  var self = this;\n  var eventBus = this._eventBus;\n\n  var parentContainer = this._getParentContainer();\n\n  var container = this._container = domify(Palette.HTML_MARKUP);\n  parentContainer.appendChild(container);\n  domClasses(parentContainer).add(PALETTE_PREFIX + PALETTE_SHOWN_CLS);\n  domDelegate.bind(container, ELEMENT_SELECTOR, 'click', function (event) {\n    var target = event.delegateTarget;\n\n    if (domMatches(target, TOGGLE_SELECTOR)) {\n      return self.toggle();\n    }\n\n    self.trigger('click', event);\n  }); // prevent drag propagation\n\n  domEvent.bind(container, 'mousedown', function (event) {\n    event.stopPropagation();\n  }); // prevent drag propagation\n\n  domDelegate.bind(container, ENTRY_SELECTOR, 'dragstart', function (event) {\n    self.trigger('dragstart', event);\n  });\n  eventBus.on('canvas.resized', this._layoutChanged, this);\n  eventBus.fire('palette.create', {\n    container: container\n  });\n};\n\nPalette.prototype._getProviders = function (id) {\n  var event = this._eventBus.createEvent({\n    type: 'palette.getProviders',\n    providers: []\n  });\n\n  this._eventBus.fire(event);\n\n  return event.providers;\n};\n/**\n * Update palette state.\n *\n * @param  {Object} [state] { open, twoColumn }\n */\n\n\nPalette.prototype._toggleState = function (state) {\n  state = state || {};\n\n  var parent = this._getParentContainer(),\n      container = this._container;\n\n  var eventBus = this._eventBus;\n  var twoColumn;\n  var cls = domClasses(container),\n      parentCls = domClasses(parent);\n\n  if ('twoColumn' in state) {\n    twoColumn = state.twoColumn;\n  } else {\n    twoColumn = this._needsCollapse(parent.clientHeight, this._entries || {});\n  } // always update two column\n\n\n  cls.toggle(PALETTE_TWO_COLUMN_CLS, twoColumn);\n  parentCls.toggle(PALETTE_PREFIX + PALETTE_TWO_COLUMN_CLS, twoColumn);\n\n  if ('open' in state) {\n    cls.toggle(PALETTE_OPEN_CLS, state.open);\n    parentCls.toggle(PALETTE_PREFIX + PALETTE_OPEN_CLS, state.open);\n  }\n\n  eventBus.fire('palette.changed', {\n    twoColumn: twoColumn,\n    open: this.isOpen()\n  });\n};\n\nPalette.prototype._update = function () {\n  var entriesContainer = domQuery('.djs-palette-entries', this._container),\n      entries = this._entries = this.getEntries();\n  domClear(entriesContainer);\n  forEach(entries, function (entry, id) {\n    var grouping = entry.group || 'default';\n    var container = domQuery('[data-group=' + escapeCSS(grouping) + ']', entriesContainer);\n\n    if (!container) {\n      container = domify('<div class=\"group\"></div>');\n      domAttr(container, 'data-group', grouping);\n      entriesContainer.appendChild(container);\n    }\n\n    var html = entry.html || (entry.separator ? '<hr class=\"separator\" />' : '<div class=\"entry\" draggable=\"true\"></div>');\n    var control = domify(html);\n    container.appendChild(control);\n\n    if (!entry.separator) {\n      domAttr(control, 'data-action', id);\n\n      if (entry.title) {\n        domAttr(control, 'title', entry.title);\n      }\n\n      if (entry.className) {\n        addClasses(control, entry.className);\n      }\n\n      if (entry.imageUrl) {\n        var image = domify('<img>');\n        domAttr(image, 'src', entry.imageUrl);\n        control.appendChild(image);\n      }\n    }\n  }); // open after update\n\n  this.open();\n};\n/**\n * Trigger an action available on the palette\n *\n * @param  {string} action\n * @param  {Event} event\n */\n\n\nPalette.prototype.trigger = function (action, event, autoActivate) {\n  var entries = this._entries,\n      entry,\n      handler,\n      originalEvent,\n      button = event.delegateTarget || event.target;\n\n  if (!button) {\n    return event.preventDefault();\n  }\n\n  entry = entries[domAttr(button, 'data-action')]; // when user clicks on the palette and not on an action\n\n  if (!entry) {\n    return;\n  }\n\n  handler = entry.action;\n  originalEvent = event.originalEvent || event; // simple action (via callback function)\n\n  if (isFunction(handler)) {\n    if (action === 'click') {\n      handler(originalEvent, autoActivate);\n    }\n  } else {\n    if (handler[action]) {\n      handler[action](originalEvent, autoActivate);\n    }\n  } // silence other actions\n\n\n  event.preventDefault();\n};\n\nPalette.prototype._layoutChanged = function () {\n  this._toggleState({});\n};\n/**\n * Do we need to collapse to two columns?\n *\n * @param {number} availableHeight\n * @param {Object} entries\n *\n * @return {boolean}\n */\n\n\nPalette.prototype._needsCollapse = function (availableHeight, entries) {\n  // top margin + bottom toggle + bottom margin\n  // implementors must override this method if they\n  // change the palette styles\n  var margin = 20 + 10 + 20;\n  var entriesHeight = Object.keys(entries).length * 46;\n  return availableHeight < entriesHeight + margin;\n};\n/**\n * Close the palette\n */\n\n\nPalette.prototype.close = function () {\n  this._toggleState({\n    open: false,\n    twoColumn: false\n  });\n};\n/**\n * Open the palette\n */\n\n\nPalette.prototype.open = function () {\n  this._toggleState({\n    open: true\n  });\n};\n\nPalette.prototype.toggle = function (open) {\n  if (this.isOpen()) {\n    this.close();\n  } else {\n    this.open();\n  }\n};\n\nPalette.prototype.isActiveTool = function (tool) {\n  return tool && this._activeTool === tool;\n};\n\nPalette.prototype.updateToolHighlight = function (name) {\n  var entriesContainer, toolsContainer;\n\n  if (!this._toolsContainer) {\n    entriesContainer = domQuery('.djs-palette-entries', this._container);\n    this._toolsContainer = domQuery('[data-group=tools]', entriesContainer);\n  }\n\n  toolsContainer = this._toolsContainer;\n  forEach(toolsContainer.children, function (tool) {\n    var actionName = tool.getAttribute('data-action');\n\n    if (!actionName) {\n      return;\n    }\n\n    var toolClasses = domClasses(tool);\n    actionName = actionName.replace('-tool', '');\n\n    if (toolClasses.contains('entry') && actionName === name) {\n      toolClasses.add('highlighted-entry');\n    } else {\n      toolClasses.remove('highlighted-entry');\n    }\n  });\n};\n/**\n * Return true if the palette is opened.\n *\n * @example\n *\n * palette.open();\n *\n * if (palette.isOpen()) {\n *   // yes, we are open\n * }\n *\n * @return {boolean} true if palette is opened\n */\n\n\nPalette.prototype.isOpen = function () {\n  return domClasses(this._container).has(PALETTE_OPEN_CLS);\n};\n/**\n * Get container the palette lives in.\n *\n * @return {Element}\n */\n\n\nPalette.prototype._getParentContainer = function () {\n  return this._canvas.getContainer();\n};\n/* markup definition */\n\n\nPalette.HTML_MARKUP = '<div class=\"djs-palette\">' + '<div class=\"djs-palette-entries\"></div>' + '<div class=\"djs-palette-toggle\"></div>' + '</div>'; // helpers //////////////////////\n\nfunction addClasses(element, classNames) {\n  var classes = domClasses(element);\n  var actualClassNames = isArray(classNames) ? classNames : classNames.split(/\\s+/g);\n  actualClassNames.forEach(function (cls) {\n    classes.add(cls);\n  });\n}\n\nfunction addPaletteEntries(entries, provider) {\n  var entriesOrUpdater = provider.getPaletteEntries();\n\n  if (isFunction(entriesOrUpdater)) {\n    return entriesOrUpdater(entries);\n  }\n\n  forEach(entriesOrUpdater, function (entry, id) {\n    entries[id] = entry;\n  });\n  return entries;\n}","map":{"version":3,"names":["isArray","isFunction","forEach","domify","query","domQuery","attr","domAttr","clear","domClear","classes","domClasses","matches","domMatches","delegate","domDelegate","event","domEvent","escapeCSS","TOGGLE_SELECTOR","ENTRY_SELECTOR","ELEMENT_SELECTOR","PALETTE_PREFIX","PALETTE_SHOWN_CLS","PALETTE_OPEN_CLS","PALETTE_TWO_COLUMN_CLS","DEFAULT_PRIORITY","Palette","eventBus","canvas","_eventBus","_canvas","self","on","tool","updateToolHighlight","_update","_diagramInitialized","_rebuild","$inject","prototype","registerProvider","priority","provider","providers","push","getEntries","_getProviders","reduce","addPaletteEntries","length","_container","_init","parentContainer","_getParentContainer","container","HTML_MARKUP","appendChild","add","bind","target","delegateTarget","toggle","trigger","stopPropagation","_layoutChanged","fire","id","createEvent","type","_toggleState","state","parent","twoColumn","cls","parentCls","_needsCollapse","clientHeight","_entries","open","isOpen","entriesContainer","entries","entry","grouping","group","html","separator","control","title","className","addClasses","imageUrl","image","action","autoActivate","handler","originalEvent","button","preventDefault","availableHeight","margin","entriesHeight","Object","keys","close","isActiveTool","_activeTool","name","toolsContainer","_toolsContainer","children","actionName","getAttribute","toolClasses","replace","contains","remove","has","getContainer","element","classNames","actualClassNames","split","entriesOrUpdater","getPaletteEntries"],"sources":["E:/Old_PC/Study/Angular/test-bpm/node_modules/diagram-js/lib/features/palette/Palette.js"],"sourcesContent":["import {\n  isArray,\n  isFunction,\n  forEach\n} from 'min-dash';\n\nimport {\n  domify,\n  query as domQuery,\n  attr as domAttr,\n  clear as domClear,\n  classes as domClasses,\n  matches as domMatches,\n  delegate as domDelegate,\n  event as domEvent\n} from 'min-dom';\n\nimport {\n  escapeCSS\n} from '../../util/EscapeUtil';\n\nvar TOGGLE_SELECTOR = '.djs-palette-toggle',\n    ENTRY_SELECTOR = '.entry',\n    ELEMENT_SELECTOR = TOGGLE_SELECTOR + ', ' + ENTRY_SELECTOR;\n\nvar PALETTE_PREFIX = 'djs-palette-',\n    PALETTE_SHOWN_CLS = 'shown',\n    PALETTE_OPEN_CLS = 'open',\n    PALETTE_TWO_COLUMN_CLS = 'two-column';\n\nvar DEFAULT_PRIORITY = 1000;\n\n\n/**\n * A palette containing modeling elements.\n */\nexport default function Palette(eventBus, canvas) {\n\n  this._eventBus = eventBus;\n  this._canvas = canvas;\n\n  var self = this;\n\n  eventBus.on('tool-manager.update', function(event) {\n    var tool = event.tool;\n\n    self.updateToolHighlight(tool);\n  });\n\n  eventBus.on('i18n.changed', function() {\n    self._update();\n  });\n\n  eventBus.on('diagram.init', function() {\n\n    self._diagramInitialized = true;\n\n    self._rebuild();\n  });\n}\n\nPalette.$inject = [ 'eventBus', 'canvas' ];\n\n\n/**\n * Register a provider with the palette\n *\n * @param  {number} [priority=1000]\n * @param  {PaletteProvider} provider\n *\n * @example\n * const paletteProvider = {\n *   getPaletteEntries: function() {\n *     return function(entries) {\n *       return {\n *         ...entries,\n *         'entry-1': {\n *           label: 'My Entry',\n *           action: function() { alert(\"I have been clicked!\"); }\n *         }\n *       };\n *     }\n *   }\n * };\n *\n * palette.registerProvider(800, paletteProvider);\n */\nPalette.prototype.registerProvider = function(priority, provider) {\n  if (!provider) {\n    provider = priority;\n    priority = DEFAULT_PRIORITY;\n  }\n\n  this._eventBus.on('palette.getProviders', priority, function(event) {\n    event.providers.push(provider);\n  });\n\n  this._rebuild();\n};\n\n\n/**\n * Returns the palette entries\n *\n * @return {Object<string, PaletteEntryDescriptor>} map of entries\n */\nPalette.prototype.getEntries = function() {\n  var providers = this._getProviders();\n\n  return providers.reduce(addPaletteEntries, {});\n};\n\nPalette.prototype._rebuild = function() {\n\n  if (!this._diagramInitialized) {\n    return;\n  }\n\n  var providers = this._getProviders();\n\n  if (!providers.length) {\n    return;\n  }\n\n  if (!this._container) {\n    this._init();\n  }\n\n  this._update();\n};\n\n/**\n * Initialize\n */\nPalette.prototype._init = function() {\n\n  var self = this;\n\n  var eventBus = this._eventBus;\n\n  var parentContainer = this._getParentContainer();\n\n  var container = this._container = domify(Palette.HTML_MARKUP);\n\n  parentContainer.appendChild(container);\n  domClasses(parentContainer).add(PALETTE_PREFIX + PALETTE_SHOWN_CLS);\n\n  domDelegate.bind(container, ELEMENT_SELECTOR, 'click', function(event) {\n\n    var target = event.delegateTarget;\n\n    if (domMatches(target, TOGGLE_SELECTOR)) {\n      return self.toggle();\n    }\n\n    self.trigger('click', event);\n  });\n\n  // prevent drag propagation\n  domEvent.bind(container, 'mousedown', function(event) {\n    event.stopPropagation();\n  });\n\n  // prevent drag propagation\n  domDelegate.bind(container, ENTRY_SELECTOR, 'dragstart', function(event) {\n    self.trigger('dragstart', event);\n  });\n\n  eventBus.on('canvas.resized', this._layoutChanged, this);\n\n  eventBus.fire('palette.create', {\n    container: container\n  });\n};\n\nPalette.prototype._getProviders = function(id) {\n\n  var event = this._eventBus.createEvent({\n    type: 'palette.getProviders',\n    providers: []\n  });\n\n  this._eventBus.fire(event);\n\n  return event.providers;\n};\n\n/**\n * Update palette state.\n *\n * @param  {Object} [state] { open, twoColumn }\n */\nPalette.prototype._toggleState = function(state) {\n\n  state = state || {};\n\n  var parent = this._getParentContainer(),\n      container = this._container;\n\n  var eventBus = this._eventBus;\n\n  var twoColumn;\n\n  var cls = domClasses(container),\n      parentCls = domClasses(parent);\n\n  if ('twoColumn' in state) {\n    twoColumn = state.twoColumn;\n  } else {\n    twoColumn = this._needsCollapse(parent.clientHeight, this._entries || {});\n  }\n\n  // always update two column\n  cls.toggle(PALETTE_TWO_COLUMN_CLS, twoColumn);\n  parentCls.toggle(PALETTE_PREFIX + PALETTE_TWO_COLUMN_CLS, twoColumn);\n\n  if ('open' in state) {\n    cls.toggle(PALETTE_OPEN_CLS, state.open);\n    parentCls.toggle(PALETTE_PREFIX + PALETTE_OPEN_CLS, state.open);\n  }\n\n  eventBus.fire('palette.changed', {\n    twoColumn: twoColumn,\n    open: this.isOpen()\n  });\n};\n\nPalette.prototype._update = function() {\n\n  var entriesContainer = domQuery('.djs-palette-entries', this._container),\n      entries = this._entries = this.getEntries();\n\n  domClear(entriesContainer);\n\n  forEach(entries, function(entry, id) {\n\n    var grouping = entry.group || 'default';\n\n    var container = domQuery('[data-group=' + escapeCSS(grouping) + ']', entriesContainer);\n    if (!container) {\n      container = domify('<div class=\"group\"></div>');\n      domAttr(container, 'data-group', grouping);\n\n      entriesContainer.appendChild(container);\n    }\n\n    var html = entry.html || (\n      entry.separator ?\n        '<hr class=\"separator\" />' :\n        '<div class=\"entry\" draggable=\"true\"></div>');\n\n\n    var control = domify(html);\n    container.appendChild(control);\n\n    if (!entry.separator) {\n      domAttr(control, 'data-action', id);\n\n      if (entry.title) {\n        domAttr(control, 'title', entry.title);\n      }\n\n      if (entry.className) {\n        addClasses(control, entry.className);\n      }\n\n      if (entry.imageUrl) {\n        var image = domify('<img>');\n        domAttr(image, 'src', entry.imageUrl);\n\n        control.appendChild(image);\n      }\n    }\n  });\n\n  // open after update\n  this.open();\n};\n\n\n/**\n * Trigger an action available on the palette\n *\n * @param  {string} action\n * @param  {Event} event\n */\nPalette.prototype.trigger = function(action, event, autoActivate) {\n  var entries = this._entries,\n      entry,\n      handler,\n      originalEvent,\n      button = event.delegateTarget || event.target;\n\n  if (!button) {\n    return event.preventDefault();\n  }\n\n  entry = entries[domAttr(button, 'data-action')];\n\n  // when user clicks on the palette and not on an action\n  if (!entry) {\n    return;\n  }\n\n  handler = entry.action;\n\n  originalEvent = event.originalEvent || event;\n\n  // simple action (via callback function)\n  if (isFunction(handler)) {\n    if (action === 'click') {\n      handler(originalEvent, autoActivate);\n    }\n  } else {\n    if (handler[action]) {\n      handler[action](originalEvent, autoActivate);\n    }\n  }\n\n  // silence other actions\n  event.preventDefault();\n};\n\nPalette.prototype._layoutChanged = function() {\n  this._toggleState({});\n};\n\n/**\n * Do we need to collapse to two columns?\n *\n * @param {number} availableHeight\n * @param {Object} entries\n *\n * @return {boolean}\n */\nPalette.prototype._needsCollapse = function(availableHeight, entries) {\n\n  // top margin + bottom toggle + bottom margin\n  // implementors must override this method if they\n  // change the palette styles\n  var margin = 20 + 10 + 20;\n\n  var entriesHeight = Object.keys(entries).length * 46;\n\n  return availableHeight < entriesHeight + margin;\n};\n\n/**\n * Close the palette\n */\nPalette.prototype.close = function() {\n\n  this._toggleState({\n    open: false,\n    twoColumn: false\n  });\n};\n\n\n/**\n * Open the palette\n */\nPalette.prototype.open = function() {\n  this._toggleState({ open: true });\n};\n\n\nPalette.prototype.toggle = function(open) {\n  if (this.isOpen()) {\n    this.close();\n  } else {\n    this.open();\n  }\n};\n\nPalette.prototype.isActiveTool = function(tool) {\n  return tool && this._activeTool === tool;\n};\n\nPalette.prototype.updateToolHighlight = function(name) {\n  var entriesContainer,\n      toolsContainer;\n\n  if (!this._toolsContainer) {\n    entriesContainer = domQuery('.djs-palette-entries', this._container);\n\n    this._toolsContainer = domQuery('[data-group=tools]', entriesContainer);\n  }\n\n  toolsContainer = this._toolsContainer;\n\n  forEach(toolsContainer.children, function(tool) {\n    var actionName = tool.getAttribute('data-action');\n\n    if (!actionName) {\n      return;\n    }\n\n    var toolClasses = domClasses(tool);\n\n    actionName = actionName.replace('-tool', '');\n\n    if (toolClasses.contains('entry') && actionName === name) {\n      toolClasses.add('highlighted-entry');\n    } else {\n      toolClasses.remove('highlighted-entry');\n    }\n  });\n};\n\n\n/**\n * Return true if the palette is opened.\n *\n * @example\n *\n * palette.open();\n *\n * if (palette.isOpen()) {\n *   // yes, we are open\n * }\n *\n * @return {boolean} true if palette is opened\n */\nPalette.prototype.isOpen = function() {\n  return domClasses(this._container).has(PALETTE_OPEN_CLS);\n};\n\n/**\n * Get container the palette lives in.\n *\n * @return {Element}\n */\nPalette.prototype._getParentContainer = function() {\n  return this._canvas.getContainer();\n};\n\n\n/* markup definition */\n\nPalette.HTML_MARKUP =\n  '<div class=\"djs-palette\">' +\n    '<div class=\"djs-palette-entries\"></div>' +\n    '<div class=\"djs-palette-toggle\"></div>' +\n  '</div>';\n\n\n// helpers //////////////////////\n\nfunction addClasses(element, classNames) {\n\n  var classes = domClasses(element);\n\n  var actualClassNames = isArray(classNames) ? classNames : classNames.split(/\\s+/g);\n  actualClassNames.forEach(function(cls) {\n    classes.add(cls);\n  });\n}\n\nfunction addPaletteEntries(entries, provider) {\n\n  var entriesOrUpdater = provider.getPaletteEntries();\n\n  if (isFunction(entriesOrUpdater)) {\n    return entriesOrUpdater(entries);\n  }\n\n  forEach(entriesOrUpdater, function(entry, id) {\n    entries[id] = entry;\n  });\n\n  return entries;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}