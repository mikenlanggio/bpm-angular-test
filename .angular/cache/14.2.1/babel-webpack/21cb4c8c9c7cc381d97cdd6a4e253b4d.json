{"ast":null,"code":"import { add as collectionAdd, indexOf as collectionIdx } from '../../../util/Collections';\nimport { saveClear } from '../../../util/Removal';\n/**\n * A handler that implements reversible deletion of Connections.\n */\n\nexport default function DeleteConnectionHandler(canvas, modeling) {\n  this._canvas = canvas;\n  this._modeling = modeling;\n}\nDeleteConnectionHandler.$inject = ['canvas', 'modeling'];\n/**\n * - Remove connections\n */\n\nDeleteConnectionHandler.prototype.preExecute = function (context) {\n  var modeling = this._modeling;\n  var connection = context.connection; // remove connections\n\n  saveClear(connection.incoming, function (connection) {\n    // To make sure that the connection isn't removed twice\n    // For example if a container is removed\n    modeling.removeConnection(connection, {\n      nested: true\n    });\n  });\n  saveClear(connection.outgoing, function (connection) {\n    modeling.removeConnection(connection, {\n      nested: true\n    });\n  });\n};\n\nDeleteConnectionHandler.prototype.execute = function (context) {\n  var connection = context.connection,\n      parent = connection.parent;\n  context.parent = parent; // remember containment\n\n  context.parentIndex = collectionIdx(parent.children, connection);\n  context.source = connection.source;\n  context.target = connection.target;\n\n  this._canvas.removeConnection(connection);\n\n  connection.source = null;\n  connection.target = null;\n  return connection;\n};\n/**\n * Command revert implementation.\n */\n\n\nDeleteConnectionHandler.prototype.revert = function (context) {\n  var connection = context.connection,\n      parent = context.parent,\n      parentIndex = context.parentIndex;\n  connection.source = context.source;\n  connection.target = context.target; // restore containment\n\n  collectionAdd(parent.children, connection, parentIndex);\n\n  this._canvas.addConnection(connection, parent);\n\n  return connection;\n};","map":{"version":3,"names":["add","collectionAdd","indexOf","collectionIdx","saveClear","DeleteConnectionHandler","canvas","modeling","_canvas","_modeling","$inject","prototype","preExecute","context","connection","incoming","removeConnection","nested","outgoing","execute","parent","parentIndex","children","source","target","revert","addConnection"],"sources":["E:/Old_PC/Study/Angular/test-bpm/node_modules/diagram-js/lib/features/modeling/cmd/DeleteConnectionHandler.js"],"sourcesContent":["import {\n  add as collectionAdd,\n  indexOf as collectionIdx\n} from '../../../util/Collections';\nimport { saveClear } from '../../../util/Removal';\n\n\n/**\n * A handler that implements reversible deletion of Connections.\n */\nexport default function DeleteConnectionHandler(canvas, modeling) {\n  this._canvas = canvas;\n  this._modeling = modeling;\n}\n\nDeleteConnectionHandler.$inject = [\n  'canvas',\n  'modeling'\n];\n\n\n/**\n * - Remove connections\n */\nDeleteConnectionHandler.prototype.preExecute = function(context) {\n\n  var modeling = this._modeling;\n\n  var connection = context.connection;\n\n  // remove connections\n  saveClear(connection.incoming, function(connection) {\n\n    // To make sure that the connection isn't removed twice\n    // For example if a container is removed\n    modeling.removeConnection(connection, { nested: true });\n  });\n\n  saveClear(connection.outgoing, function(connection) {\n    modeling.removeConnection(connection, { nested: true });\n  });\n\n};\n\n\nDeleteConnectionHandler.prototype.execute = function(context) {\n\n  var connection = context.connection,\n      parent = connection.parent;\n\n  context.parent = parent;\n\n  // remember containment\n  context.parentIndex = collectionIdx(parent.children, connection);\n\n  context.source = connection.source;\n  context.target = connection.target;\n\n  this._canvas.removeConnection(connection);\n\n  connection.source = null;\n  connection.target = null;\n\n  return connection;\n};\n\n/**\n * Command revert implementation.\n */\nDeleteConnectionHandler.prototype.revert = function(context) {\n\n  var connection = context.connection,\n      parent = context.parent,\n      parentIndex = context.parentIndex;\n\n  connection.source = context.source;\n  connection.target = context.target;\n\n  // restore containment\n  collectionAdd(parent.children, connection, parentIndex);\n\n  this._canvas.addConnection(connection, parent);\n\n  return connection;\n};\n"],"mappings":"AAAA,SACEA,GAAG,IAAIC,aADT,EAEEC,OAAO,IAAIC,aAFb,QAGO,2BAHP;AAIA,SAASC,SAAT,QAA0B,uBAA1B;AAGA;AACA;AACA;;AACA,eAAe,SAASC,uBAAT,CAAiCC,MAAjC,EAAyCC,QAAzC,EAAmD;EAChE,KAAKC,OAAL,GAAeF,MAAf;EACA,KAAKG,SAAL,GAAiBF,QAAjB;AACD;AAEDF,uBAAuB,CAACK,OAAxB,GAAkC,CAChC,QADgC,EAEhC,UAFgC,CAAlC;AAMA;AACA;AACA;;AACAL,uBAAuB,CAACM,SAAxB,CAAkCC,UAAlC,GAA+C,UAASC,OAAT,EAAkB;EAE/D,IAAIN,QAAQ,GAAG,KAAKE,SAApB;EAEA,IAAIK,UAAU,GAAGD,OAAO,CAACC,UAAzB,CAJ+D,CAM/D;;EACAV,SAAS,CAACU,UAAU,CAACC,QAAZ,EAAsB,UAASD,UAAT,EAAqB;IAElD;IACA;IACAP,QAAQ,CAACS,gBAAT,CAA0BF,UAA1B,EAAsC;MAAEG,MAAM,EAAE;IAAV,CAAtC;EACD,CALQ,CAAT;EAOAb,SAAS,CAACU,UAAU,CAACI,QAAZ,EAAsB,UAASJ,UAAT,EAAqB;IAClDP,QAAQ,CAACS,gBAAT,CAA0BF,UAA1B,EAAsC;MAAEG,MAAM,EAAE;IAAV,CAAtC;EACD,CAFQ,CAAT;AAID,CAlBD;;AAqBAZ,uBAAuB,CAACM,SAAxB,CAAkCQ,OAAlC,GAA4C,UAASN,OAAT,EAAkB;EAE5D,IAAIC,UAAU,GAAGD,OAAO,CAACC,UAAzB;EAAA,IACIM,MAAM,GAAGN,UAAU,CAACM,MADxB;EAGAP,OAAO,CAACO,MAAR,GAAiBA,MAAjB,CAL4D,CAO5D;;EACAP,OAAO,CAACQ,WAAR,GAAsBlB,aAAa,CAACiB,MAAM,CAACE,QAAR,EAAkBR,UAAlB,CAAnC;EAEAD,OAAO,CAACU,MAAR,GAAiBT,UAAU,CAACS,MAA5B;EACAV,OAAO,CAACW,MAAR,GAAiBV,UAAU,CAACU,MAA5B;;EAEA,KAAKhB,OAAL,CAAaQ,gBAAb,CAA8BF,UAA9B;;EAEAA,UAAU,CAACS,MAAX,GAAoB,IAApB;EACAT,UAAU,CAACU,MAAX,GAAoB,IAApB;EAEA,OAAOV,UAAP;AACD,CAnBD;AAqBA;AACA;AACA;;;AACAT,uBAAuB,CAACM,SAAxB,CAAkCc,MAAlC,GAA2C,UAASZ,OAAT,EAAkB;EAE3D,IAAIC,UAAU,GAAGD,OAAO,CAACC,UAAzB;EAAA,IACIM,MAAM,GAAGP,OAAO,CAACO,MADrB;EAAA,IAEIC,WAAW,GAAGR,OAAO,CAACQ,WAF1B;EAIAP,UAAU,CAACS,MAAX,GAAoBV,OAAO,CAACU,MAA5B;EACAT,UAAU,CAACU,MAAX,GAAoBX,OAAO,CAACW,MAA5B,CAP2D,CAS3D;;EACAvB,aAAa,CAACmB,MAAM,CAACE,QAAR,EAAkBR,UAAlB,EAA8BO,WAA9B,CAAb;;EAEA,KAAKb,OAAL,CAAakB,aAAb,CAA2BZ,UAA3B,EAAuCM,MAAvC;;EAEA,OAAON,UAAP;AACD,CAfD"},"metadata":{},"sourceType":"module"}