{"ast":null,"code":"import { toPoint } from '../../util/Event';\nimport { getMidPoint, pointsAligned } from '../../util/Geometry';\nimport { append as svgAppend, attr as svgAttr, classes as svgClasses, create as svgCreate } from 'tiny-svg';\nimport { rotate, translate } from '../../util/SvgTransformUtil';\nimport { getApproxIntersection } from '../../util/LineIntersection';\nimport { getDistancePointLine, perpendicularFoot } from './GeometricUtil';\nexport var BENDPOINT_CLS = 'djs-bendpoint';\nexport var SEGMENT_DRAGGER_CLS = 'djs-segment-dragger';\nexport function toCanvasCoordinates(canvas, event) {\n  var position = toPoint(event),\n      clientRect = canvas._container.getBoundingClientRect(),\n      offset; // canvas relative position\n\n\n  offset = {\n    x: clientRect.left,\n    y: clientRect.top\n  }; // update actual event payload with canvas relative measures\n\n  var viewbox = canvas.viewbox();\n  return {\n    x: viewbox.x + (position.x - offset.x) / viewbox.scale,\n    y: viewbox.y + (position.y - offset.y) / viewbox.scale\n  };\n}\nexport function getConnectionIntersection(canvas, waypoints, event) {\n  var localPosition = toCanvasCoordinates(canvas, event),\n      intersection = getApproxIntersection(waypoints, localPosition);\n  return intersection;\n}\nexport function addBendpoint(parentGfx, cls) {\n  var groupGfx = svgCreate('g');\n  svgClasses(groupGfx).add(BENDPOINT_CLS);\n  svgAppend(parentGfx, groupGfx);\n  var visual = svgCreate('circle');\n  svgAttr(visual, {\n    cx: 0,\n    cy: 0,\n    r: 4\n  });\n  svgClasses(visual).add('djs-visual');\n  svgAppend(groupGfx, visual);\n  var hit = svgCreate('circle');\n  svgAttr(hit, {\n    cx: 0,\n    cy: 0,\n    r: 10\n  });\n  svgClasses(hit).add('djs-hit');\n  svgAppend(groupGfx, hit);\n\n  if (cls) {\n    svgClasses(groupGfx).add(cls);\n  }\n\n  return groupGfx;\n}\n\nfunction createParallelDragger(parentGfx, segmentStart, segmentEnd, alignment) {\n  var draggerGfx = svgCreate('g');\n  svgAppend(parentGfx, draggerGfx);\n  var width = 18,\n      height = 6,\n      padding = 11,\n      hitWidth = calculateHitWidth(segmentStart, segmentEnd, alignment),\n      hitHeight = height + padding;\n  var visual = svgCreate('rect');\n  svgAttr(visual, {\n    x: -width / 2,\n    y: -height / 2,\n    width: width,\n    height: height\n  });\n  svgClasses(visual).add('djs-visual');\n  svgAppend(draggerGfx, visual);\n  var hit = svgCreate('rect');\n  svgAttr(hit, {\n    x: -hitWidth / 2,\n    y: -hitHeight / 2,\n    width: hitWidth,\n    height: hitHeight\n  });\n  svgClasses(hit).add('djs-hit');\n  svgAppend(draggerGfx, hit);\n  rotate(draggerGfx, alignment === 'v' ? 90 : 0, 0, 0);\n  return draggerGfx;\n}\n\nexport function addSegmentDragger(parentGfx, segmentStart, segmentEnd) {\n  var groupGfx = svgCreate('g'),\n      mid = getMidPoint(segmentStart, segmentEnd),\n      alignment = pointsAligned(segmentStart, segmentEnd);\n  svgAppend(parentGfx, groupGfx);\n  createParallelDragger(groupGfx, segmentStart, segmentEnd, alignment);\n  svgClasses(groupGfx).add(SEGMENT_DRAGGER_CLS);\n  svgClasses(groupGfx).add(alignment === 'h' ? 'horizontal' : 'vertical');\n  translate(groupGfx, mid.x, mid.y);\n  return groupGfx;\n}\n/**\n * Calculates region for segment move which is 2/3 of the full segment length\n * @param {number} segmentLength\n *\n * @return {number}\n */\n\nexport function calculateSegmentMoveRegion(segmentLength) {\n  return Math.abs(Math.round(segmentLength * 2 / 3));\n}\n/**\n * Returns the point with the closest distance that is on the connection path.\n *\n * @param {Point} position\n * @param {djs.Base.Connection} connection\n * @returns {Point}\n */\n\nexport function getClosestPointOnConnection(position, connection) {\n  var segment = getClosestSegment(position, connection);\n  return perpendicularFoot(position, segment);\n} // helper //////////\n\nfunction calculateHitWidth(segmentStart, segmentEnd, alignment) {\n  var segmentLengthXAxis = segmentEnd.x - segmentStart.x,\n      segmentLengthYAxis = segmentEnd.y - segmentStart.y;\n  return alignment === 'h' ? calculateSegmentMoveRegion(segmentLengthXAxis) : calculateSegmentMoveRegion(segmentLengthYAxis);\n}\n\nfunction getClosestSegment(position, connection) {\n  var waypoints = connection.waypoints;\n  var minDistance = Infinity,\n      segmentIndex;\n\n  for (var i = 0; i < waypoints.length - 1; i++) {\n    var start = waypoints[i],\n        end = waypoints[i + 1],\n        distance = getDistancePointLine(position, [start, end]);\n\n    if (distance < minDistance) {\n      minDistance = distance;\n      segmentIndex = i;\n    }\n  }\n\n  return [waypoints[segmentIndex], waypoints[segmentIndex + 1]];\n}","map":{"version":3,"names":["toPoint","getMidPoint","pointsAligned","append","svgAppend","attr","svgAttr","classes","svgClasses","create","svgCreate","rotate","translate","getApproxIntersection","getDistancePointLine","perpendicularFoot","BENDPOINT_CLS","SEGMENT_DRAGGER_CLS","toCanvasCoordinates","canvas","event","position","clientRect","_container","getBoundingClientRect","offset","x","left","y","top","viewbox","scale","getConnectionIntersection","waypoints","localPosition","intersection","addBendpoint","parentGfx","cls","groupGfx","add","visual","cx","cy","r","hit","createParallelDragger","segmentStart","segmentEnd","alignment","draggerGfx","width","height","padding","hitWidth","calculateHitWidth","hitHeight","addSegmentDragger","mid","calculateSegmentMoveRegion","segmentLength","Math","abs","round","getClosestPointOnConnection","connection","segment","getClosestSegment","segmentLengthXAxis","segmentLengthYAxis","minDistance","Infinity","segmentIndex","i","length","start","end","distance"],"sources":["E:/Old_PC/Study/Angular/test-bpm/node_modules/diagram-js/lib/features/bendpoints/BendpointUtil.js"],"sourcesContent":["import {\n  toPoint\n} from '../../util/Event';\n\nimport {\n  getMidPoint,\n  pointsAligned\n} from '../../util/Geometry';\n\nimport {\n  append as svgAppend,\n  attr as svgAttr,\n  classes as svgClasses,\n  create as svgCreate\n} from 'tiny-svg';\n\nimport {\n  rotate,\n  translate\n} from '../../util/SvgTransformUtil';\n\nimport {\n  getApproxIntersection\n} from '../../util/LineIntersection';\n\nimport { getDistancePointLine, perpendicularFoot } from './GeometricUtil';\n\nexport var BENDPOINT_CLS = 'djs-bendpoint';\nexport var SEGMENT_DRAGGER_CLS = 'djs-segment-dragger';\n\nexport function toCanvasCoordinates(canvas, event) {\n\n  var position = toPoint(event),\n      clientRect = canvas._container.getBoundingClientRect(),\n      offset;\n\n  // canvas relative position\n\n  offset = {\n    x: clientRect.left,\n    y: clientRect.top\n  };\n\n  // update actual event payload with canvas relative measures\n\n  var viewbox = canvas.viewbox();\n\n  return {\n    x: viewbox.x + (position.x - offset.x) / viewbox.scale,\n    y: viewbox.y + (position.y - offset.y) / viewbox.scale\n  };\n}\n\nexport function getConnectionIntersection(canvas, waypoints, event) {\n  var localPosition = toCanvasCoordinates(canvas, event),\n      intersection = getApproxIntersection(waypoints, localPosition);\n\n  return intersection;\n}\n\nexport function addBendpoint(parentGfx, cls) {\n  var groupGfx = svgCreate('g');\n  svgClasses(groupGfx).add(BENDPOINT_CLS);\n\n  svgAppend(parentGfx, groupGfx);\n\n  var visual = svgCreate('circle');\n  svgAttr(visual, {\n    cx: 0,\n    cy: 0,\n    r: 4\n  });\n  svgClasses(visual).add('djs-visual');\n\n  svgAppend(groupGfx, visual);\n\n  var hit = svgCreate('circle');\n  svgAttr(hit, {\n    cx: 0,\n    cy: 0,\n    r: 10\n  });\n  svgClasses(hit).add('djs-hit');\n\n  svgAppend(groupGfx, hit);\n\n  if (cls) {\n    svgClasses(groupGfx).add(cls);\n  }\n\n  return groupGfx;\n}\n\nfunction createParallelDragger(parentGfx, segmentStart, segmentEnd, alignment) {\n  var draggerGfx = svgCreate('g');\n\n  svgAppend(parentGfx, draggerGfx);\n\n  var width = 18,\n      height = 6,\n      padding = 11,\n      hitWidth = calculateHitWidth(segmentStart, segmentEnd, alignment),\n      hitHeight = height + padding;\n\n  var visual = svgCreate('rect');\n  svgAttr(visual, {\n    x: -width / 2,\n    y: -height / 2,\n    width: width,\n    height: height\n  });\n  svgClasses(visual).add('djs-visual');\n\n  svgAppend(draggerGfx, visual);\n\n  var hit = svgCreate('rect');\n  svgAttr(hit, {\n    x: -hitWidth / 2,\n    y: -hitHeight / 2,\n    width: hitWidth,\n    height: hitHeight\n  });\n  svgClasses(hit).add('djs-hit');\n\n  svgAppend(draggerGfx, hit);\n\n  rotate(draggerGfx, alignment === 'v' ? 90 : 0, 0, 0);\n\n  return draggerGfx;\n}\n\n\nexport function addSegmentDragger(parentGfx, segmentStart, segmentEnd) {\n\n  var groupGfx = svgCreate('g'),\n      mid = getMidPoint(segmentStart, segmentEnd),\n      alignment = pointsAligned(segmentStart, segmentEnd);\n\n  svgAppend(parentGfx, groupGfx);\n\n  createParallelDragger(groupGfx, segmentStart, segmentEnd, alignment);\n\n  svgClasses(groupGfx).add(SEGMENT_DRAGGER_CLS);\n  svgClasses(groupGfx).add(alignment === 'h' ? 'horizontal' : 'vertical');\n\n  translate(groupGfx, mid.x, mid.y);\n\n  return groupGfx;\n}\n\n/**\n * Calculates region for segment move which is 2/3 of the full segment length\n * @param {number} segmentLength\n *\n * @return {number}\n */\nexport function calculateSegmentMoveRegion(segmentLength) {\n  return Math.abs(Math.round(segmentLength * 2 / 3));\n}\n\n/**\n * Returns the point with the closest distance that is on the connection path.\n *\n * @param {Point} position\n * @param {djs.Base.Connection} connection\n * @returns {Point}\n */\nexport function getClosestPointOnConnection(position, connection) {\n  var segment = getClosestSegment(position, connection);\n\n  return perpendicularFoot(position, segment);\n}\n\n\n// helper //////////\n\nfunction calculateHitWidth(segmentStart, segmentEnd, alignment) {\n  var segmentLengthXAxis = segmentEnd.x - segmentStart.x,\n      segmentLengthYAxis = segmentEnd.y - segmentStart.y;\n\n  return alignment === 'h' ?\n    calculateSegmentMoveRegion(segmentLengthXAxis) :\n    calculateSegmentMoveRegion(segmentLengthYAxis);\n}\n\nfunction getClosestSegment(position, connection) {\n  var waypoints = connection.waypoints;\n\n  var minDistance = Infinity,\n      segmentIndex;\n\n  for (var i = 0; i < waypoints.length - 1; i++) {\n    var start = waypoints[i],\n        end = waypoints[i + 1],\n        distance = getDistancePointLine(position, [ start, end ]);\n\n    if (distance < minDistance) {\n      minDistance = distance;\n      segmentIndex = i;\n    }\n  }\n\n  return [ waypoints[segmentIndex], waypoints[segmentIndex + 1] ];\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}