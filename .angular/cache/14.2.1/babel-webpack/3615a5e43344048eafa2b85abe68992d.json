{"ast":null,"code":"import { getBusinessObject, is } from '../../util/ModelUtil';\nimport { isEventSubProcess, isExpanded } from '../../util/DiUtil';\nimport { isDifferentType } from './util/TypeUtil';\nimport { forEach, filter, isUndefined } from 'min-dash';\nimport * as replaceOptions from '../replace/ReplaceOptions';\n/**\n * This module is an element agnostic replace menu provider for the popup menu.\n */\n\nexport default function ReplaceMenuProvider(bpmnFactory, popupMenu, modeling, moddle, bpmnReplace, rules, translate) {\n  this._bpmnFactory = bpmnFactory;\n  this._popupMenu = popupMenu;\n  this._modeling = modeling;\n  this._moddle = moddle;\n  this._bpmnReplace = bpmnReplace;\n  this._rules = rules;\n  this._translate = translate;\n  this.register();\n}\nReplaceMenuProvider.$inject = ['bpmnFactory', 'popupMenu', 'modeling', 'moddle', 'bpmnReplace', 'rules', 'translate'];\n/**\n * Register replace menu provider in the popup menu\n */\n\nReplaceMenuProvider.prototype.register = function () {\n  this._popupMenu.registerProvider('bpmn-replace', this);\n};\n/**\n * Get all entries from replaceOptions for the given element and apply filters\n * on them. Get for example only elements, which are different from the current one.\n *\n * @param {djs.model.Base} element\n *\n * @return {Array<Object>} a list of menu entry items\n */\n\n\nReplaceMenuProvider.prototype.getEntries = function (element) {\n  var businessObject = element.businessObject;\n  var rules = this._rules;\n  var entries;\n\n  if (!rules.allowed('shape.replace', {\n    element: element\n  })) {\n    return [];\n  }\n\n  var differentType = isDifferentType(element);\n\n  if (is(businessObject, 'bpmn:DataObjectReference')) {\n    return this._createEntries(element, replaceOptions.DATA_OBJECT_REFERENCE);\n  }\n\n  if (is(businessObject, 'bpmn:DataStoreReference') && !is(element.parent, 'bpmn:Collaboration')) {\n    return this._createEntries(element, replaceOptions.DATA_STORE_REFERENCE);\n  } // start events outside sub processes\n\n\n  if (is(businessObject, 'bpmn:StartEvent') && !is(businessObject.$parent, 'bpmn:SubProcess')) {\n    entries = filter(replaceOptions.START_EVENT, differentType);\n    return this._createEntries(element, entries);\n  } // expanded/collapsed pools\n\n\n  if (is(businessObject, 'bpmn:Participant')) {\n    entries = filter(replaceOptions.PARTICIPANT, function (entry) {\n      return isExpanded(element) !== entry.target.isExpanded;\n    });\n    return this._createEntries(element, entries);\n  } // start events inside event sub processes\n\n\n  if (is(businessObject, 'bpmn:StartEvent') && isEventSubProcess(businessObject.$parent)) {\n    entries = filter(replaceOptions.EVENT_SUB_PROCESS_START_EVENT, function (entry) {\n      var target = entry.target;\n      var isInterrupting = target.isInterrupting !== false;\n      var isInterruptingEqual = getBusinessObject(element).isInterrupting === isInterrupting; // filters elements which types and event definition are equal but have have different interrupting types\n\n      return differentType(entry) || !differentType(entry) && !isInterruptingEqual;\n    });\n    return this._createEntries(element, entries);\n  } // start events inside sub processes\n\n\n  if (is(businessObject, 'bpmn:StartEvent') && !isEventSubProcess(businessObject.$parent) && is(businessObject.$parent, 'bpmn:SubProcess')) {\n    entries = filter(replaceOptions.START_EVENT_SUB_PROCESS, differentType);\n    return this._createEntries(element, entries);\n  } // end events\n\n\n  if (is(businessObject, 'bpmn:EndEvent')) {\n    entries = filter(replaceOptions.END_EVENT, function (entry) {\n      var target = entry.target; // hide cancel end events outside transactions\n\n      if (target.eventDefinitionType == 'bpmn:CancelEventDefinition' && !is(businessObject.$parent, 'bpmn:Transaction')) {\n        return false;\n      }\n\n      return differentType(entry);\n    });\n    return this._createEntries(element, entries);\n  } // boundary events\n\n\n  if (is(businessObject, 'bpmn:BoundaryEvent')) {\n    entries = filter(replaceOptions.BOUNDARY_EVENT, function (entry) {\n      var target = entry.target;\n\n      if (target.eventDefinitionType == 'bpmn:CancelEventDefinition' && !is(businessObject.attachedToRef, 'bpmn:Transaction')) {\n        return false;\n      }\n\n      var cancelActivity = target.cancelActivity !== false;\n      var isCancelActivityEqual = businessObject.cancelActivity == cancelActivity;\n      return differentType(entry) || !differentType(entry) && !isCancelActivityEqual;\n    });\n    return this._createEntries(element, entries);\n  } // intermediate events\n\n\n  if (is(businessObject, 'bpmn:IntermediateCatchEvent') || is(businessObject, 'bpmn:IntermediateThrowEvent')) {\n    entries = filter(replaceOptions.INTERMEDIATE_EVENT, differentType);\n    return this._createEntries(element, entries);\n  } // gateways\n\n\n  if (is(businessObject, 'bpmn:Gateway')) {\n    entries = filter(replaceOptions.GATEWAY, differentType);\n    return this._createEntries(element, entries);\n  } // transactions\n\n\n  if (is(businessObject, 'bpmn:Transaction')) {\n    entries = filter(replaceOptions.TRANSACTION, differentType);\n    return this._createEntries(element, entries);\n  } // expanded event sub processes\n\n\n  if (isEventSubProcess(businessObject) && isExpanded(element)) {\n    entries = filter(replaceOptions.EVENT_SUB_PROCESS, differentType);\n    return this._createEntries(element, entries);\n  } // expanded sub processes\n\n\n  if (is(businessObject, 'bpmn:SubProcess') && isExpanded(element)) {\n    entries = filter(replaceOptions.SUBPROCESS_EXPANDED, differentType);\n    return this._createEntries(element, entries);\n  } // collapsed ad hoc sub processes\n\n\n  if (is(businessObject, 'bpmn:AdHocSubProcess') && !isExpanded(element)) {\n    entries = filter(replaceOptions.TASK, function (entry) {\n      var target = entry.target;\n      var isTargetSubProcess = target.type === 'bpmn:SubProcess';\n      var isTargetExpanded = target.isExpanded === true;\n      return isDifferentType(element, target) && (!isTargetSubProcess || isTargetExpanded);\n    });\n    return this._createEntries(element, entries);\n  } // sequence flows\n\n\n  if (is(businessObject, 'bpmn:SequenceFlow')) {\n    return this._createSequenceFlowEntries(element, replaceOptions.SEQUENCE_FLOW);\n  } // flow nodes\n\n\n  if (is(businessObject, 'bpmn:FlowNode')) {\n    entries = filter(replaceOptions.TASK, differentType); // collapsed SubProcess can not be replaced with itself\n\n    if (is(businessObject, 'bpmn:SubProcess') && !isExpanded(element)) {\n      entries = filter(entries, function (entry) {\n        return entry.label !== 'Sub Process (collapsed)';\n      });\n    }\n\n    return this._createEntries(element, entries);\n  }\n\n  return [];\n};\n/**\n * Get a list of header items for the given element. This includes buttons\n * for multi instance markers and for the ad hoc marker.\n *\n * @param {djs.model.Base} element\n *\n * @return {Array<Object>} a list of menu entry items\n */\n\n\nReplaceMenuProvider.prototype.getHeaderEntries = function (element) {\n  var headerEntries = [];\n\n  if (is(element, 'bpmn:Activity') && !isEventSubProcess(element)) {\n    headerEntries = headerEntries.concat(this._getLoopEntries(element));\n  }\n\n  if (is(element, 'bpmn:DataObjectReference')) {\n    headerEntries = headerEntries.concat(this._getDataObjectIsCollection(element));\n  }\n\n  if (is(element, 'bpmn:Participant')) {\n    headerEntries = headerEntries.concat(this._getParticipantMultiplicity(element));\n  }\n\n  if (is(element, 'bpmn:SubProcess') && !is(element, 'bpmn:Transaction') && !isEventSubProcess(element)) {\n    headerEntries.push(this._getAdHocEntry(element));\n  }\n\n  return headerEntries;\n};\n/**\n * Creates an array of menu entry objects for a given element and filters the replaceOptions\n * according to a filter function.\n *\n * @param  {djs.model.Base} element\n * @param  {Object} replaceOptions\n *\n * @return {Array<Object>} a list of menu items\n */\n\n\nReplaceMenuProvider.prototype._createEntries = function (element, replaceOptions) {\n  var menuEntries = [];\n  var self = this;\n  forEach(replaceOptions, function (definition) {\n    var entry = self._createMenuEntry(definition, element);\n\n    menuEntries.push(entry);\n  });\n  return menuEntries;\n};\n/**\n * Creates an array of menu entry objects for a given sequence flow.\n *\n * @param  {djs.model.Base} element\n * @param  {Object} replaceOptions\n\n * @return {Array<Object>} a list of menu items\n */\n\n\nReplaceMenuProvider.prototype._createSequenceFlowEntries = function (element, replaceOptions) {\n  var businessObject = getBusinessObject(element);\n  var menuEntries = [];\n  var modeling = this._modeling,\n      moddle = this._moddle;\n  var self = this;\n  forEach(replaceOptions, function (entry) {\n    switch (entry.actionName) {\n      case 'replace-with-default-flow':\n        if (businessObject.sourceRef.default !== businessObject && (is(businessObject.sourceRef, 'bpmn:ExclusiveGateway') || is(businessObject.sourceRef, 'bpmn:InclusiveGateway') || is(businessObject.sourceRef, 'bpmn:ComplexGateway') || is(businessObject.sourceRef, 'bpmn:Activity'))) {\n          menuEntries.push(self._createMenuEntry(entry, element, function () {\n            modeling.updateProperties(element.source, {\n              default: businessObject\n            });\n          }));\n        }\n\n        break;\n\n      case 'replace-with-conditional-flow':\n        if (!businessObject.conditionExpression && is(businessObject.sourceRef, 'bpmn:Activity')) {\n          menuEntries.push(self._createMenuEntry(entry, element, function () {\n            var conditionExpression = moddle.create('bpmn:FormalExpression', {\n              body: ''\n            });\n            modeling.updateProperties(element, {\n              conditionExpression: conditionExpression\n            });\n          }));\n        }\n\n        break;\n\n      default:\n        // default flows\n        if (is(businessObject.sourceRef, 'bpmn:Activity') && businessObject.conditionExpression) {\n          return menuEntries.push(self._createMenuEntry(entry, element, function () {\n            modeling.updateProperties(element, {\n              conditionExpression: undefined\n            });\n          }));\n        } // conditional flows\n\n\n        if ((is(businessObject.sourceRef, 'bpmn:ExclusiveGateway') || is(businessObject.sourceRef, 'bpmn:InclusiveGateway') || is(businessObject.sourceRef, 'bpmn:ComplexGateway') || is(businessObject.sourceRef, 'bpmn:Activity')) && businessObject.sourceRef.default === businessObject) {\n          return menuEntries.push(self._createMenuEntry(entry, element, function () {\n            modeling.updateProperties(element.source, {\n              default: undefined\n            });\n          }));\n        }\n\n    }\n  });\n  return menuEntries;\n};\n/**\n * Creates and returns a single menu entry item.\n *\n * @param  {Object} definition a single replace options definition object\n * @param  {djs.model.Base} element\n * @param  {Function} [action] an action callback function which gets called when\n *                             the menu entry is being triggered.\n *\n * @return {Object} menu entry item\n */\n\n\nReplaceMenuProvider.prototype._createMenuEntry = function (definition, element, action) {\n  var translate = this._translate;\n  var replaceElement = this._bpmnReplace.replaceElement;\n\n  var replaceAction = function () {\n    return replaceElement(element, definition.target);\n  };\n\n  var label = definition.label;\n\n  if (label && typeof label === 'function') {\n    label = label(element);\n  }\n\n  action = action || replaceAction;\n  var menuEntry = {\n    label: translate(label),\n    className: definition.className,\n    id: definition.actionName,\n    action: action\n  };\n  return menuEntry;\n};\n/**\n * Get a list of menu items containing buttons for multi instance markers\n *\n * @param  {djs.model.Base} element\n *\n * @return {Array<Object>} a list of menu items\n */\n\n\nReplaceMenuProvider.prototype._getLoopEntries = function (element) {\n  var self = this;\n  var translate = this._translate;\n\n  function toggleLoopEntry(event, entry) {\n    var newLoopCharacteristics = getBusinessObject(element).loopCharacteristics;\n\n    if (entry.active) {\n      newLoopCharacteristics = undefined;\n    } else {\n      if (isUndefined(entry.options.isSequential) || !newLoopCharacteristics || !is(newLoopCharacteristics, entry.options.loopCharacteristics)) {\n        newLoopCharacteristics = self._moddle.create(entry.options.loopCharacteristics);\n      }\n\n      newLoopCharacteristics.isSequential = entry.options.isSequential;\n    }\n\n    self._modeling.updateProperties(element, {\n      loopCharacteristics: newLoopCharacteristics\n    });\n  }\n\n  var businessObject = getBusinessObject(element),\n      loopCharacteristics = businessObject.loopCharacteristics;\n  var isSequential, isLoop, isParallel;\n\n  if (loopCharacteristics) {\n    isSequential = loopCharacteristics.isSequential;\n    isLoop = loopCharacteristics.isSequential === undefined;\n    isParallel = loopCharacteristics.isSequential !== undefined && !loopCharacteristics.isSequential;\n  }\n\n  var loopEntries = [{\n    id: 'toggle-parallel-mi',\n    className: 'bpmn-icon-parallel-mi-marker',\n    title: translate('Parallel Multi Instance'),\n    active: isParallel,\n    action: toggleLoopEntry,\n    options: {\n      loopCharacteristics: 'bpmn:MultiInstanceLoopCharacteristics',\n      isSequential: false\n    }\n  }, {\n    id: 'toggle-sequential-mi',\n    className: 'bpmn-icon-sequential-mi-marker',\n    title: translate('Sequential Multi Instance'),\n    active: isSequential,\n    action: toggleLoopEntry,\n    options: {\n      loopCharacteristics: 'bpmn:MultiInstanceLoopCharacteristics',\n      isSequential: true\n    }\n  }, {\n    id: 'toggle-loop',\n    className: 'bpmn-icon-loop-marker',\n    title: translate('Loop'),\n    active: isLoop,\n    action: toggleLoopEntry,\n    options: {\n      loopCharacteristics: 'bpmn:StandardLoopCharacteristics'\n    }\n  }];\n  return loopEntries;\n};\n/**\n * Get a list of menu items containing a button for the collection marker\n *\n * @param  {djs.model.Base} element\n *\n * @return {Array<Object>} a list of menu items\n */\n\n\nReplaceMenuProvider.prototype._getDataObjectIsCollection = function (element) {\n  var self = this;\n  var translate = this._translate;\n\n  function toggleIsCollection(event, entry) {\n    self._modeling.updateModdleProperties(element, dataObject, {\n      isCollection: !entry.active\n    });\n  }\n\n  var dataObject = element.businessObject.dataObjectRef,\n      isCollection = dataObject.isCollection;\n  var dataObjectEntries = [{\n    id: 'toggle-is-collection',\n    className: 'bpmn-icon-parallel-mi-marker',\n    title: translate('Collection'),\n    active: isCollection,\n    action: toggleIsCollection\n  }];\n  return dataObjectEntries;\n};\n/**\n * Get a list of menu items containing a button for the participant multiplicity marker\n *\n * @param  {djs.model.Base} element\n *\n * @return {Array<Object>} a list of menu items\n */\n\n\nReplaceMenuProvider.prototype._getParticipantMultiplicity = function (element) {\n  var self = this;\n  var bpmnFactory = this._bpmnFactory;\n  var translate = this._translate;\n\n  function toggleParticipantMultiplicity(event, entry) {\n    var isActive = entry.active;\n    var participantMultiplicity;\n\n    if (!isActive) {\n      participantMultiplicity = bpmnFactory.create('bpmn:ParticipantMultiplicity');\n    }\n\n    self._modeling.updateProperties(element, {\n      participantMultiplicity: participantMultiplicity\n    });\n  }\n\n  var participantMultiplicity = element.businessObject.participantMultiplicity;\n  var participantEntries = [{\n    id: 'toggle-participant-multiplicity',\n    className: 'bpmn-icon-parallel-mi-marker',\n    title: translate('Participant Multiplicity'),\n    active: !!participantMultiplicity,\n    action: toggleParticipantMultiplicity\n  }];\n  return participantEntries;\n};\n/**\n * Get the menu items containing a button for the ad hoc marker\n *\n * @param  {djs.model.Base} element\n *\n * @return {Object} a menu item\n */\n\n\nReplaceMenuProvider.prototype._getAdHocEntry = function (element) {\n  var translate = this._translate;\n  var businessObject = getBusinessObject(element);\n  var isAdHoc = is(businessObject, 'bpmn:AdHocSubProcess');\n  var replaceElement = this._bpmnReplace.replaceElement;\n  var adHocEntry = {\n    id: 'toggle-adhoc',\n    className: 'bpmn-icon-ad-hoc-marker',\n    title: translate('Ad-hoc'),\n    active: isAdHoc,\n    action: function (event, entry) {\n      if (isAdHoc) {\n        return replaceElement(element, {\n          type: 'bpmn:SubProcess'\n        }, {\n          autoResize: false,\n          layoutConnection: false\n        });\n      } else {\n        return replaceElement(element, {\n          type: 'bpmn:AdHocSubProcess'\n        }, {\n          autoResize: false,\n          layoutConnection: false\n        });\n      }\n    }\n  };\n  return adHocEntry;\n};","map":{"version":3,"names":["getBusinessObject","is","isEventSubProcess","isExpanded","isDifferentType","forEach","filter","isUndefined","replaceOptions","ReplaceMenuProvider","bpmnFactory","popupMenu","modeling","moddle","bpmnReplace","rules","translate","_bpmnFactory","_popupMenu","_modeling","_moddle","_bpmnReplace","_rules","_translate","register","$inject","prototype","registerProvider","getEntries","element","businessObject","entries","allowed","differentType","_createEntries","DATA_OBJECT_REFERENCE","parent","DATA_STORE_REFERENCE","$parent","START_EVENT","PARTICIPANT","entry","target","EVENT_SUB_PROCESS_START_EVENT","isInterrupting","isInterruptingEqual","START_EVENT_SUB_PROCESS","END_EVENT","eventDefinitionType","BOUNDARY_EVENT","attachedToRef","cancelActivity","isCancelActivityEqual","INTERMEDIATE_EVENT","GATEWAY","TRANSACTION","EVENT_SUB_PROCESS","SUBPROCESS_EXPANDED","TASK","isTargetSubProcess","type","isTargetExpanded","_createSequenceFlowEntries","SEQUENCE_FLOW","label","getHeaderEntries","headerEntries","concat","_getLoopEntries","_getDataObjectIsCollection","_getParticipantMultiplicity","push","_getAdHocEntry","menuEntries","self","definition","_createMenuEntry","actionName","sourceRef","default","updateProperties","source","conditionExpression","create","body","undefined","action","replaceElement","replaceAction","menuEntry","className","id","toggleLoopEntry","event","newLoopCharacteristics","loopCharacteristics","active","options","isSequential","isLoop","isParallel","loopEntries","title","toggleIsCollection","updateModdleProperties","dataObject","isCollection","dataObjectRef","dataObjectEntries","toggleParticipantMultiplicity","isActive","participantMultiplicity","participantEntries","isAdHoc","adHocEntry","autoResize","layoutConnection"],"sources":["E:/Old_PC/Study/Angular/test-bpm/node_modules/bpmn-js/lib/features/popup-menu/ReplaceMenuProvider.js"],"sourcesContent":["import {\n  getBusinessObject,\n  is\n} from '../../util/ModelUtil';\n\nimport {\n  isEventSubProcess,\n  isExpanded\n} from '../../util/DiUtil';\n\nimport {\n  isDifferentType\n} from './util/TypeUtil';\n\nimport {\n  forEach,\n  filter,\n  isUndefined\n} from 'min-dash';\n\nimport * as replaceOptions from '../replace/ReplaceOptions';\n\n\n/**\n * This module is an element agnostic replace menu provider for the popup menu.\n */\nexport default function ReplaceMenuProvider(\n    bpmnFactory, popupMenu, modeling, moddle,\n    bpmnReplace, rules, translate) {\n\n  this._bpmnFactory = bpmnFactory;\n  this._popupMenu = popupMenu;\n  this._modeling = modeling;\n  this._moddle = moddle;\n  this._bpmnReplace = bpmnReplace;\n  this._rules = rules;\n  this._translate = translate;\n\n  this.register();\n}\n\nReplaceMenuProvider.$inject = [\n  'bpmnFactory',\n  'popupMenu',\n  'modeling',\n  'moddle',\n  'bpmnReplace',\n  'rules',\n  'translate'\n];\n\n\n/**\n * Register replace menu provider in the popup menu\n */\nReplaceMenuProvider.prototype.register = function() {\n  this._popupMenu.registerProvider('bpmn-replace', this);\n};\n\n\n/**\n * Get all entries from replaceOptions for the given element and apply filters\n * on them. Get for example only elements, which are different from the current one.\n *\n * @param {djs.model.Base} element\n *\n * @return {Array<Object>} a list of menu entry items\n */\nReplaceMenuProvider.prototype.getEntries = function(element) {\n\n  var businessObject = element.businessObject;\n\n  var rules = this._rules;\n\n  var entries;\n\n  if (!rules.allowed('shape.replace', { element: element })) {\n    return [];\n  }\n\n  var differentType = isDifferentType(element);\n\n  if (is(businessObject, 'bpmn:DataObjectReference')) {\n    return this._createEntries(element, replaceOptions.DATA_OBJECT_REFERENCE);\n  }\n\n  if (is(businessObject, 'bpmn:DataStoreReference') && !is(element.parent, 'bpmn:Collaboration')) {\n    return this._createEntries(element, replaceOptions.DATA_STORE_REFERENCE);\n  }\n\n  // start events outside sub processes\n  if (is(businessObject, 'bpmn:StartEvent') && !is(businessObject.$parent, 'bpmn:SubProcess')) {\n\n    entries = filter(replaceOptions.START_EVENT, differentType);\n\n    return this._createEntries(element, entries);\n  }\n\n  // expanded/collapsed pools\n  if (is(businessObject, 'bpmn:Participant')) {\n\n    entries = filter(replaceOptions.PARTICIPANT, function(entry) {\n      return isExpanded(element) !== entry.target.isExpanded;\n    });\n\n    return this._createEntries(element, entries);\n  }\n\n  // start events inside event sub processes\n  if (is(businessObject, 'bpmn:StartEvent') && isEventSubProcess(businessObject.$parent)) {\n    entries = filter(replaceOptions.EVENT_SUB_PROCESS_START_EVENT, function(entry) {\n\n      var target = entry.target;\n\n      var isInterrupting = target.isInterrupting !== false;\n\n      var isInterruptingEqual = getBusinessObject(element).isInterrupting === isInterrupting;\n\n      // filters elements which types and event definition are equal but have have different interrupting types\n      return differentType(entry) || !differentType(entry) && !isInterruptingEqual;\n\n    });\n\n    return this._createEntries(element, entries);\n  }\n\n  // start events inside sub processes\n  if (is(businessObject, 'bpmn:StartEvent') && !isEventSubProcess(businessObject.$parent)\n      && is(businessObject.$parent, 'bpmn:SubProcess')) {\n    entries = filter(replaceOptions.START_EVENT_SUB_PROCESS, differentType);\n\n    return this._createEntries(element, entries);\n  }\n\n  // end events\n  if (is(businessObject, 'bpmn:EndEvent')) {\n\n    entries = filter(replaceOptions.END_EVENT, function(entry) {\n      var target = entry.target;\n\n      // hide cancel end events outside transactions\n      if (target.eventDefinitionType == 'bpmn:CancelEventDefinition' && !is(businessObject.$parent, 'bpmn:Transaction')) {\n        return false;\n      }\n\n      return differentType(entry);\n    });\n\n    return this._createEntries(element, entries);\n  }\n\n  // boundary events\n  if (is(businessObject, 'bpmn:BoundaryEvent')) {\n\n    entries = filter(replaceOptions.BOUNDARY_EVENT, function(entry) {\n\n      var target = entry.target;\n\n      if (target.eventDefinitionType == 'bpmn:CancelEventDefinition' &&\n         !is(businessObject.attachedToRef, 'bpmn:Transaction')) {\n        return false;\n      }\n      var cancelActivity = target.cancelActivity !== false;\n\n      var isCancelActivityEqual = businessObject.cancelActivity == cancelActivity;\n\n      return differentType(entry) || !differentType(entry) && !isCancelActivityEqual;\n    });\n\n    return this._createEntries(element, entries);\n  }\n\n  // intermediate events\n  if (is(businessObject, 'bpmn:IntermediateCatchEvent') ||\n      is(businessObject, 'bpmn:IntermediateThrowEvent')) {\n\n    entries = filter(replaceOptions.INTERMEDIATE_EVENT, differentType);\n\n    return this._createEntries(element, entries);\n  }\n\n  // gateways\n  if (is(businessObject, 'bpmn:Gateway')) {\n\n    entries = filter(replaceOptions.GATEWAY, differentType);\n\n    return this._createEntries(element, entries);\n  }\n\n  // transactions\n  if (is(businessObject, 'bpmn:Transaction')) {\n\n    entries = filter(replaceOptions.TRANSACTION, differentType);\n\n    return this._createEntries(element, entries);\n  }\n\n  // expanded event sub processes\n  if (isEventSubProcess(businessObject) && isExpanded(element)) {\n\n    entries = filter(replaceOptions.EVENT_SUB_PROCESS, differentType);\n\n    return this._createEntries(element, entries);\n  }\n\n  // expanded sub processes\n  if (is(businessObject, 'bpmn:SubProcess') && isExpanded(element)) {\n\n    entries = filter(replaceOptions.SUBPROCESS_EXPANDED, differentType);\n\n    return this._createEntries(element, entries);\n  }\n\n  // collapsed ad hoc sub processes\n  if (is(businessObject, 'bpmn:AdHocSubProcess') && !isExpanded(element)) {\n\n    entries = filter(replaceOptions.TASK, function(entry) {\n\n      var target = entry.target;\n\n      var isTargetSubProcess = target.type === 'bpmn:SubProcess';\n\n      var isTargetExpanded = target.isExpanded === true;\n\n      return isDifferentType(element, target) && (!isTargetSubProcess || isTargetExpanded);\n    });\n\n    return this._createEntries(element, entries);\n  }\n\n  // sequence flows\n  if (is(businessObject, 'bpmn:SequenceFlow')) {\n    return this._createSequenceFlowEntries(element, replaceOptions.SEQUENCE_FLOW);\n  }\n\n  // flow nodes\n  if (is(businessObject, 'bpmn:FlowNode')) {\n    entries = filter(replaceOptions.TASK, differentType);\n\n    // collapsed SubProcess can not be replaced with itself\n    if (is(businessObject, 'bpmn:SubProcess') && !isExpanded(element)) {\n      entries = filter(entries, function(entry) {\n        return entry.label !== 'Sub Process (collapsed)';\n      });\n    }\n\n    return this._createEntries(element, entries);\n  }\n\n  return [];\n};\n\n\n/**\n * Get a list of header items for the given element. This includes buttons\n * for multi instance markers and for the ad hoc marker.\n *\n * @param {djs.model.Base} element\n *\n * @return {Array<Object>} a list of menu entry items\n */\nReplaceMenuProvider.prototype.getHeaderEntries = function(element) {\n\n  var headerEntries = [];\n\n  if (is(element, 'bpmn:Activity') && !isEventSubProcess(element)) {\n    headerEntries = headerEntries.concat(this._getLoopEntries(element));\n  }\n\n  if (is(element, 'bpmn:DataObjectReference')) {\n    headerEntries = headerEntries.concat(this._getDataObjectIsCollection(element));\n  }\n\n  if (is(element, 'bpmn:Participant')) {\n    headerEntries = headerEntries.concat(this._getParticipantMultiplicity(element));\n  }\n\n  if (is(element, 'bpmn:SubProcess') &&\n      !is(element, 'bpmn:Transaction') &&\n      !isEventSubProcess(element)) {\n    headerEntries.push(this._getAdHocEntry(element));\n  }\n\n  return headerEntries;\n};\n\n\n/**\n * Creates an array of menu entry objects for a given element and filters the replaceOptions\n * according to a filter function.\n *\n * @param  {djs.model.Base} element\n * @param  {Object} replaceOptions\n *\n * @return {Array<Object>} a list of menu items\n */\nReplaceMenuProvider.prototype._createEntries = function(element, replaceOptions) {\n  var menuEntries = [];\n\n  var self = this;\n\n  forEach(replaceOptions, function(definition) {\n    var entry = self._createMenuEntry(definition, element);\n\n    menuEntries.push(entry);\n  });\n\n  return menuEntries;\n};\n\n/**\n * Creates an array of menu entry objects for a given sequence flow.\n *\n * @param  {djs.model.Base} element\n * @param  {Object} replaceOptions\n\n * @return {Array<Object>} a list of menu items\n */\nReplaceMenuProvider.prototype._createSequenceFlowEntries = function(element, replaceOptions) {\n\n  var businessObject = getBusinessObject(element);\n\n  var menuEntries = [];\n\n  var modeling = this._modeling,\n      moddle = this._moddle;\n\n  var self = this;\n\n  forEach(replaceOptions, function(entry) {\n\n    switch (entry.actionName) {\n    case 'replace-with-default-flow':\n      if (businessObject.sourceRef.default !== businessObject &&\n            (is(businessObject.sourceRef, 'bpmn:ExclusiveGateway') ||\n             is(businessObject.sourceRef, 'bpmn:InclusiveGateway') ||\n             is(businessObject.sourceRef, 'bpmn:ComplexGateway') ||\n             is(businessObject.sourceRef, 'bpmn:Activity'))) {\n\n        menuEntries.push(self._createMenuEntry(entry, element, function() {\n          modeling.updateProperties(element.source, { default: businessObject });\n        }));\n      }\n      break;\n    case 'replace-with-conditional-flow':\n      if (!businessObject.conditionExpression && is(businessObject.sourceRef, 'bpmn:Activity')) {\n\n        menuEntries.push(self._createMenuEntry(entry, element, function() {\n          var conditionExpression = moddle.create('bpmn:FormalExpression', { body: '' });\n\n          modeling.updateProperties(element, { conditionExpression: conditionExpression });\n        }));\n      }\n      break;\n    default:\n\n      // default flows\n      if (is(businessObject.sourceRef, 'bpmn:Activity') && businessObject.conditionExpression) {\n        return menuEntries.push(self._createMenuEntry(entry, element, function() {\n          modeling.updateProperties(element, { conditionExpression: undefined });\n        }));\n      }\n\n      // conditional flows\n      if ((is(businessObject.sourceRef, 'bpmn:ExclusiveGateway') ||\n           is(businessObject.sourceRef, 'bpmn:InclusiveGateway') ||\n           is(businessObject.sourceRef, 'bpmn:ComplexGateway') ||\n           is(businessObject.sourceRef, 'bpmn:Activity')) &&\n           businessObject.sourceRef.default === businessObject) {\n\n        return menuEntries.push(self._createMenuEntry(entry, element, function() {\n          modeling.updateProperties(element.source, { default: undefined });\n        }));\n      }\n    }\n  });\n\n  return menuEntries;\n};\n\n\n/**\n * Creates and returns a single menu entry item.\n *\n * @param  {Object} definition a single replace options definition object\n * @param  {djs.model.Base} element\n * @param  {Function} [action] an action callback function which gets called when\n *                             the menu entry is being triggered.\n *\n * @return {Object} menu entry item\n */\nReplaceMenuProvider.prototype._createMenuEntry = function(definition, element, action) {\n  var translate = this._translate;\n  var replaceElement = this._bpmnReplace.replaceElement;\n\n  var replaceAction = function() {\n    return replaceElement(element, definition.target);\n  };\n\n  var label = definition.label;\n  if (label && typeof label === 'function') {\n    label = label(element);\n  }\n\n  action = action || replaceAction;\n\n  var menuEntry = {\n    label: translate(label),\n    className: definition.className,\n    id: definition.actionName,\n    action: action\n  };\n\n  return menuEntry;\n};\n\n/**\n * Get a list of menu items containing buttons for multi instance markers\n *\n * @param  {djs.model.Base} element\n *\n * @return {Array<Object>} a list of menu items\n */\nReplaceMenuProvider.prototype._getLoopEntries = function(element) {\n\n  var self = this;\n  var translate = this._translate;\n\n  function toggleLoopEntry(event, entry) {\n    var newLoopCharacteristics = getBusinessObject(element).loopCharacteristics;\n\n    if (entry.active) {\n      newLoopCharacteristics = undefined;\n    } else {\n      if (isUndefined(entry.options.isSequential) || !newLoopCharacteristics\n      || !is(newLoopCharacteristics, entry.options.loopCharacteristics)) {\n        newLoopCharacteristics = self._moddle.create(entry.options.loopCharacteristics);\n      }\n\n      newLoopCharacteristics.isSequential = entry.options.isSequential;\n    }\n    self._modeling.updateProperties(element, { loopCharacteristics: newLoopCharacteristics });\n  }\n\n  var businessObject = getBusinessObject(element),\n      loopCharacteristics = businessObject.loopCharacteristics;\n\n  var isSequential,\n      isLoop,\n      isParallel;\n\n  if (loopCharacteristics) {\n    isSequential = loopCharacteristics.isSequential;\n    isLoop = loopCharacteristics.isSequential === undefined;\n    isParallel = loopCharacteristics.isSequential !== undefined && !loopCharacteristics.isSequential;\n  }\n\n\n  var loopEntries = [\n    {\n      id: 'toggle-parallel-mi',\n      className: 'bpmn-icon-parallel-mi-marker',\n      title: translate('Parallel Multi Instance'),\n      active: isParallel,\n      action: toggleLoopEntry,\n      options: {\n        loopCharacteristics: 'bpmn:MultiInstanceLoopCharacteristics',\n        isSequential: false\n      }\n    },\n    {\n      id: 'toggle-sequential-mi',\n      className: 'bpmn-icon-sequential-mi-marker',\n      title: translate('Sequential Multi Instance'),\n      active: isSequential,\n      action: toggleLoopEntry,\n      options: {\n        loopCharacteristics: 'bpmn:MultiInstanceLoopCharacteristics',\n        isSequential: true\n      }\n    },\n    {\n      id: 'toggle-loop',\n      className: 'bpmn-icon-loop-marker',\n      title: translate('Loop'),\n      active: isLoop,\n      action: toggleLoopEntry,\n      options: {\n        loopCharacteristics: 'bpmn:StandardLoopCharacteristics'\n      }\n    }\n  ];\n  return loopEntries;\n};\n\n/**\n * Get a list of menu items containing a button for the collection marker\n *\n * @param  {djs.model.Base} element\n *\n * @return {Array<Object>} a list of menu items\n */\nReplaceMenuProvider.prototype._getDataObjectIsCollection = function(element) {\n\n  var self = this;\n  var translate = this._translate;\n\n  function toggleIsCollection(event, entry) {\n    self._modeling.updateModdleProperties(\n      element,\n      dataObject,\n      { isCollection: !entry.active });\n  }\n\n  var dataObject = element.businessObject.dataObjectRef,\n      isCollection = dataObject.isCollection;\n\n  var dataObjectEntries = [\n    {\n      id: 'toggle-is-collection',\n      className: 'bpmn-icon-parallel-mi-marker',\n      title: translate('Collection'),\n      active: isCollection,\n      action: toggleIsCollection,\n    }\n  ];\n  return dataObjectEntries;\n};\n\n/**\n * Get a list of menu items containing a button for the participant multiplicity marker\n *\n * @param  {djs.model.Base} element\n *\n * @return {Array<Object>} a list of menu items\n */\nReplaceMenuProvider.prototype._getParticipantMultiplicity = function(element) {\n\n  var self = this;\n  var bpmnFactory = this._bpmnFactory;\n  var translate = this._translate;\n\n  function toggleParticipantMultiplicity(event, entry) {\n    var isActive = entry.active;\n    var participantMultiplicity;\n\n    if (!isActive) {\n      participantMultiplicity = bpmnFactory.create('bpmn:ParticipantMultiplicity');\n    }\n\n    self._modeling.updateProperties(\n      element,\n      { participantMultiplicity: participantMultiplicity });\n  }\n\n  var participantMultiplicity = element.businessObject.participantMultiplicity;\n\n  var participantEntries = [\n    {\n      id: 'toggle-participant-multiplicity',\n      className: 'bpmn-icon-parallel-mi-marker',\n      title: translate('Participant Multiplicity'),\n      active: !!participantMultiplicity,\n      action: toggleParticipantMultiplicity,\n    }\n  ];\n  return participantEntries;\n};\n\n\n/**\n * Get the menu items containing a button for the ad hoc marker\n *\n * @param  {djs.model.Base} element\n *\n * @return {Object} a menu item\n */\nReplaceMenuProvider.prototype._getAdHocEntry = function(element) {\n  var translate = this._translate;\n  var businessObject = getBusinessObject(element);\n\n  var isAdHoc = is(businessObject, 'bpmn:AdHocSubProcess');\n\n  var replaceElement = this._bpmnReplace.replaceElement;\n\n  var adHocEntry = {\n    id: 'toggle-adhoc',\n    className: 'bpmn-icon-ad-hoc-marker',\n    title: translate('Ad-hoc'),\n    active: isAdHoc,\n    action: function(event, entry) {\n      if (isAdHoc) {\n        return replaceElement(element, { type: 'bpmn:SubProcess' }, {\n          autoResize: false,\n          layoutConnection: false\n        });\n      } else {\n        return replaceElement(element, { type: 'bpmn:AdHocSubProcess' }, {\n          autoResize: false,\n          layoutConnection: false\n        });\n      }\n    }\n  };\n\n  return adHocEntry;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}