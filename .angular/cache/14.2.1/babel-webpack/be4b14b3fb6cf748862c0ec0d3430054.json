{"ast":null,"code":"import { filter, isNumber } from 'min-dash';\nvar max = Math.max,\n    min = Math.min;\nvar DEFAULT_CHILD_BOX_PADDING = 20;\nimport { getBBox } from '../../util/Elements';\nimport { asTRBL, asBounds } from '../../layout/LayoutUtil';\n/**\n * Substract a TRBL from another\n *\n * @param  {TRBL} trblA\n * @param  {TRBL} trblB\n *\n * @return {TRBL}\n */\n\nexport function substractTRBL(trblA, trblB) {\n  return {\n    top: trblA.top - trblB.top,\n    right: trblA.right - trblB.right,\n    bottom: trblA.bottom - trblB.bottom,\n    left: trblA.left - trblB.left\n  };\n}\n/**\n * Resize the given bounds by the specified delta from a given anchor point.\n *\n * @param {Bounds} bounds the bounding box that should be resized\n * @param {string} direction in which the element is resized (nw, ne, se, sw)\n * @param {Point} delta of the resize operation\n *\n * @return {Bounds} resized bounding box\n */\n\nexport function resizeBounds(bounds, direction, delta) {\n  var dx = delta.x,\n      dy = delta.y;\n  var newBounds = {\n    x: bounds.x,\n    y: bounds.y,\n    width: bounds.width,\n    height: bounds.height\n  };\n\n  if (direction.indexOf('n') !== -1) {\n    newBounds.y = bounds.y + dy;\n    newBounds.height = bounds.height - dy;\n  } else if (direction.indexOf('s') !== -1) {\n    newBounds.height = bounds.height + dy;\n  }\n\n  if (direction.indexOf('e') !== -1) {\n    newBounds.width = bounds.width + dx;\n  } else if (direction.indexOf('w') !== -1) {\n    newBounds.x = bounds.x + dx;\n    newBounds.width = bounds.width - dx;\n  }\n\n  return newBounds;\n}\n/**\n * Resize the given bounds by applying the passed\n * { top, right, bottom, left } delta.\n *\n * @param {Bounds} bounds\n * @param {TRBL} trblResize\n *\n * @return {Bounds}\n */\n\nexport function resizeTRBL(bounds, resize) {\n  return {\n    x: bounds.x + (resize.left || 0),\n    y: bounds.y + (resize.top || 0),\n    width: bounds.width - (resize.left || 0) + (resize.right || 0),\n    height: bounds.height - (resize.top || 0) + (resize.bottom || 0)\n  };\n}\nexport function reattachPoint(bounds, newBounds, point) {\n  var sx = bounds.width / newBounds.width,\n      sy = bounds.height / newBounds.height;\n  return {\n    x: Math.round(newBounds.x + newBounds.width / 2) - Math.floor((bounds.x + bounds.width / 2 - point.x) / sx),\n    y: Math.round(newBounds.y + newBounds.height / 2) - Math.floor((bounds.y + bounds.height / 2 - point.y) / sy)\n  };\n}\n\nfunction applyConstraints(attr, trbl, resizeConstraints) {\n  var value = trbl[attr],\n      minValue = resizeConstraints.min && resizeConstraints.min[attr],\n      maxValue = resizeConstraints.max && resizeConstraints.max[attr];\n\n  if (isNumber(minValue)) {\n    value = (/top|left/.test(attr) ? min : max)(value, minValue);\n  }\n\n  if (isNumber(maxValue)) {\n    value = (/top|left/.test(attr) ? max : min)(value, maxValue);\n  }\n\n  return value;\n}\n\nexport function ensureConstraints(currentBounds, resizeConstraints) {\n  if (!resizeConstraints) {\n    return currentBounds;\n  }\n\n  var currentTrbl = asTRBL(currentBounds);\n  return asBounds({\n    top: applyConstraints('top', currentTrbl, resizeConstraints),\n    right: applyConstraints('right', currentTrbl, resizeConstraints),\n    bottom: applyConstraints('bottom', currentTrbl, resizeConstraints),\n    left: applyConstraints('left', currentTrbl, resizeConstraints)\n  });\n}\nexport function getMinResizeBounds(direction, currentBounds, minDimensions, childrenBounds) {\n  var currentBox = asTRBL(currentBounds);\n  var minBox = {\n    top: /n/.test(direction) ? currentBox.bottom - minDimensions.height : currentBox.top,\n    left: /w/.test(direction) ? currentBox.right - minDimensions.width : currentBox.left,\n    bottom: /s/.test(direction) ? currentBox.top + minDimensions.height : currentBox.bottom,\n    right: /e/.test(direction) ? currentBox.left + minDimensions.width : currentBox.right\n  };\n  var childrenBox = childrenBounds ? asTRBL(childrenBounds) : minBox;\n  var combinedBox = {\n    top: min(minBox.top, childrenBox.top),\n    left: min(minBox.left, childrenBox.left),\n    bottom: max(minBox.bottom, childrenBox.bottom),\n    right: max(minBox.right, childrenBox.right)\n  };\n  return asBounds(combinedBox);\n}\n\nfunction asPadding(mayBePadding, defaultValue) {\n  if (typeof mayBePadding !== 'undefined') {\n    return mayBePadding;\n  } else {\n    return DEFAULT_CHILD_BOX_PADDING;\n  }\n}\n\nexport function addPadding(bbox, padding) {\n  var left, right, top, bottom;\n\n  if (typeof padding === 'object') {\n    left = asPadding(padding.left);\n    right = asPadding(padding.right);\n    top = asPadding(padding.top);\n    bottom = asPadding(padding.bottom);\n  } else {\n    left = right = top = bottom = asPadding(padding);\n  }\n\n  return {\n    x: bbox.x - left,\n    y: bbox.y - top,\n    width: bbox.width + left + right,\n    height: bbox.height + top + bottom\n  };\n}\n/**\n * Is the given element part of the resize\n * targets min boundary box?\n *\n * This is the default implementation which excludes\n * connections and labels.\n *\n * @param {djs.model.Base} element\n */\n\nfunction isBBoxChild(element) {\n  // exclude connections\n  if (element.waypoints) {\n    return false;\n  } // exclude labels\n\n\n  if (element.type === 'label') {\n    return false;\n  }\n\n  return true;\n}\n/**\n * Return children bounding computed from a shapes children\n * or a list of prefiltered children.\n *\n * @param  {djs.model.Shape|Array<djs.model.Shape>} shapeOrChildren\n * @param  {number|Object} padding\n *\n * @return {Bounds}\n */\n\n\nexport function computeChildrenBBox(shapeOrChildren, padding) {\n  var elements; // compute based on shape\n\n  if (shapeOrChildren.length === undefined) {\n    // grab all the children that are part of the\n    // parents children box\n    elements = filter(shapeOrChildren.children, isBBoxChild);\n  } else {\n    elements = shapeOrChildren;\n  }\n\n  if (elements.length) {\n    return addPadding(getBBox(elements), padding);\n  }\n}","map":{"version":3,"names":["filter","isNumber","max","Math","min","DEFAULT_CHILD_BOX_PADDING","getBBox","asTRBL","asBounds","substractTRBL","trblA","trblB","top","right","bottom","left","resizeBounds","bounds","direction","delta","dx","x","dy","y","newBounds","width","height","indexOf","resizeTRBL","resize","reattachPoint","point","sx","sy","round","floor","applyConstraints","attr","trbl","resizeConstraints","value","minValue","maxValue","test","ensureConstraints","currentBounds","currentTrbl","getMinResizeBounds","minDimensions","childrenBounds","currentBox","minBox","childrenBox","combinedBox","asPadding","mayBePadding","defaultValue","addPadding","bbox","padding","isBBoxChild","element","waypoints","type","computeChildrenBBox","shapeOrChildren","elements","length","undefined","children"],"sources":["E:/Old_PC/Study/Angular/test-bpm/node_modules/diagram-js/lib/features/resize/ResizeUtil.js"],"sourcesContent":["import {\n  filter,\n  isNumber\n} from 'min-dash';\n\nvar max = Math.max,\n    min = Math.min;\n\nvar DEFAULT_CHILD_BOX_PADDING = 20;\n\nimport {\n  getBBox\n} from '../../util/Elements';\n\nimport {\n  asTRBL,\n  asBounds\n} from '../../layout/LayoutUtil';\n\n\n/**\n * Substract a TRBL from another\n *\n * @param  {TRBL} trblA\n * @param  {TRBL} trblB\n *\n * @return {TRBL}\n */\nexport function substractTRBL(trblA, trblB) {\n  return {\n    top: trblA.top - trblB.top,\n    right: trblA.right - trblB.right,\n    bottom: trblA.bottom - trblB.bottom,\n    left: trblA.left - trblB.left\n  };\n}\n\n/**\n * Resize the given bounds by the specified delta from a given anchor point.\n *\n * @param {Bounds} bounds the bounding box that should be resized\n * @param {string} direction in which the element is resized (nw, ne, se, sw)\n * @param {Point} delta of the resize operation\n *\n * @return {Bounds} resized bounding box\n */\nexport function resizeBounds(bounds, direction, delta) {\n  var dx = delta.x,\n      dy = delta.y;\n\n  var newBounds = {\n    x: bounds.x,\n    y: bounds.y,\n    width: bounds.width,\n    height: bounds.height\n  };\n\n  if (direction.indexOf('n') !== -1) {\n    newBounds.y = bounds.y + dy;\n    newBounds.height = bounds.height - dy;\n  } else if (direction.indexOf('s') !== -1) {\n    newBounds.height = bounds.height + dy;\n  }\n\n  if (direction.indexOf('e') !== -1) {\n    newBounds.width = bounds.width + dx;\n  } else if (direction.indexOf('w') !== -1) {\n    newBounds.x = bounds.x + dx;\n    newBounds.width = bounds.width - dx;\n  }\n\n  return newBounds;\n}\n\n\n/**\n * Resize the given bounds by applying the passed\n * { top, right, bottom, left } delta.\n *\n * @param {Bounds} bounds\n * @param {TRBL} trblResize\n *\n * @return {Bounds}\n */\nexport function resizeTRBL(bounds, resize) {\n  return {\n    x: bounds.x + (resize.left || 0),\n    y: bounds.y + (resize.top || 0),\n    width: bounds.width - (resize.left || 0) + (resize.right || 0),\n    height: bounds.height - (resize.top || 0) + (resize.bottom || 0)\n  };\n}\n\n\nexport function reattachPoint(bounds, newBounds, point) {\n\n  var sx = bounds.width / newBounds.width,\n      sy = bounds.height / newBounds.height;\n\n  return {\n    x: Math.round((newBounds.x + newBounds.width / 2)) - Math.floor(((bounds.x + bounds.width / 2) - point.x) / sx),\n    y: Math.round((newBounds.y + newBounds.height / 2)) - Math.floor(((bounds.y + bounds.height / 2) - point.y) / sy)\n  };\n}\n\n\nfunction applyConstraints(attr, trbl, resizeConstraints) {\n\n  var value = trbl[attr],\n      minValue = resizeConstraints.min && resizeConstraints.min[attr],\n      maxValue = resizeConstraints.max && resizeConstraints.max[attr];\n\n  if (isNumber(minValue)) {\n    value = (/top|left/.test(attr) ? min : max)(value, minValue);\n  }\n\n  if (isNumber(maxValue)) {\n    value = (/top|left/.test(attr) ? max : min)(value, maxValue);\n  }\n\n  return value;\n}\n\nexport function ensureConstraints(currentBounds, resizeConstraints) {\n\n  if (!resizeConstraints) {\n    return currentBounds;\n  }\n\n  var currentTrbl = asTRBL(currentBounds);\n\n  return asBounds({\n    top: applyConstraints('top', currentTrbl, resizeConstraints),\n    right: applyConstraints('right', currentTrbl, resizeConstraints),\n    bottom: applyConstraints('bottom', currentTrbl, resizeConstraints),\n    left: applyConstraints('left', currentTrbl, resizeConstraints)\n  });\n}\n\n\nexport function getMinResizeBounds(direction, currentBounds, minDimensions, childrenBounds) {\n\n  var currentBox = asTRBL(currentBounds);\n\n  var minBox = {\n    top: /n/.test(direction) ? currentBox.bottom - minDimensions.height : currentBox.top,\n    left: /w/.test(direction) ? currentBox.right - minDimensions.width : currentBox.left,\n    bottom: /s/.test(direction) ? currentBox.top + minDimensions.height : currentBox.bottom,\n    right: /e/.test(direction) ? currentBox.left + minDimensions.width : currentBox.right\n  };\n\n  var childrenBox = childrenBounds ? asTRBL(childrenBounds) : minBox;\n\n  var combinedBox = {\n    top: min(minBox.top, childrenBox.top),\n    left: min(minBox.left, childrenBox.left),\n    bottom: max(minBox.bottom, childrenBox.bottom),\n    right: max(minBox.right, childrenBox.right)\n  };\n\n  return asBounds(combinedBox);\n}\n\nfunction asPadding(mayBePadding, defaultValue) {\n  if (typeof mayBePadding !== 'undefined') {\n    return mayBePadding;\n  } else {\n    return DEFAULT_CHILD_BOX_PADDING;\n  }\n}\n\nexport function addPadding(bbox, padding) {\n  var left, right, top, bottom;\n\n  if (typeof padding === 'object') {\n    left = asPadding(padding.left);\n    right = asPadding(padding.right);\n    top = asPadding(padding.top);\n    bottom = asPadding(padding.bottom);\n  } else {\n    left = right = top = bottom = asPadding(padding);\n  }\n\n  return {\n    x: bbox.x - left,\n    y: bbox.y - top,\n    width: bbox.width + left + right,\n    height: bbox.height + top + bottom\n  };\n}\n\n\n/**\n * Is the given element part of the resize\n * targets min boundary box?\n *\n * This is the default implementation which excludes\n * connections and labels.\n *\n * @param {djs.model.Base} element\n */\nfunction isBBoxChild(element) {\n\n  // exclude connections\n  if (element.waypoints) {\n    return false;\n  }\n\n  // exclude labels\n  if (element.type === 'label') {\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Return children bounding computed from a shapes children\n * or a list of prefiltered children.\n *\n * @param  {djs.model.Shape|Array<djs.model.Shape>} shapeOrChildren\n * @param  {number|Object} padding\n *\n * @return {Bounds}\n */\nexport function computeChildrenBBox(shapeOrChildren, padding) {\n\n  var elements;\n\n  // compute based on shape\n  if (shapeOrChildren.length === undefined) {\n\n    // grab all the children that are part of the\n    // parents children box\n    elements = filter(shapeOrChildren.children, isBBoxChild);\n\n  } else {\n    elements = shapeOrChildren;\n  }\n\n  if (elements.length) {\n    return addPadding(getBBox(elements), padding);\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}