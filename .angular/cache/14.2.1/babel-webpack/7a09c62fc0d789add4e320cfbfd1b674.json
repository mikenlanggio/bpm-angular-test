{"ast":null,"code":"import inherits from 'inherits-browser';\nimport CreateMoveSnapping from 'diagram-js/lib/features/snapping/CreateMoveSnapping';\nimport { isSnapped, setSnapped, topLeft, bottomRight } from 'diagram-js/lib/features/snapping/SnapUtil';\nimport { isExpanded } from '../../util/DiUtil';\nimport { is } from '../../util/ModelUtil';\nimport { asTRBL, getMid } from 'diagram-js/lib/layout/LayoutUtil';\nimport { getBoundaryAttachment } from './BpmnSnappingUtil';\nimport { forEach } from 'min-dash';\nvar HIGH_PRIORITY = 1500;\n/**\n * Snap during create and move.\n *\n * @param {EventBus} eventBus\n * @param {Injector} injector\n */\n\nexport default function BpmnCreateMoveSnapping(eventBus, injector) {\n  injector.invoke(CreateMoveSnapping, this); // creating first participant\n\n  eventBus.on(['create.move', 'create.end'], HIGH_PRIORITY, setSnappedIfConstrained); // snap boundary events\n\n  eventBus.on(['create.move', 'create.end', 'shape.move.move', 'shape.move.end'], HIGH_PRIORITY, function (event) {\n    var context = event.context,\n        canExecute = context.canExecute,\n        target = context.target;\n    var canAttach = canExecute && (canExecute === 'attach' || canExecute.attach);\n\n    if (canAttach && !isSnapped(event)) {\n      snapBoundaryEvent(event, target);\n    }\n  });\n}\ninherits(BpmnCreateMoveSnapping, CreateMoveSnapping);\nBpmnCreateMoveSnapping.$inject = ['eventBus', 'injector'];\n\nBpmnCreateMoveSnapping.prototype.initSnap = function (event) {\n  var snapContext = CreateMoveSnapping.prototype.initSnap.call(this, event);\n  var shape = event.shape;\n  var isMove = !!this._elementRegistry.get(shape.id); // snap to docking points\n\n  forEach(shape.outgoing, function (connection) {\n    var docking = connection.waypoints[0];\n    docking = docking.original || docking;\n    snapContext.setSnapOrigin(connection.id + '-docking', getDockingSnapOrigin(docking, isMove, event));\n  });\n  forEach(shape.incoming, function (connection) {\n    var docking = connection.waypoints[connection.waypoints.length - 1];\n    docking = docking.original || docking;\n    snapContext.setSnapOrigin(connection.id + '-docking', getDockingSnapOrigin(docking, isMove, event));\n  });\n\n  if (is(shape, 'bpmn:Participant')) {\n    // snap to borders with higher priority\n    snapContext.setSnapLocations(['top-left', 'bottom-right', 'mid']);\n  }\n\n  return snapContext;\n};\n\nBpmnCreateMoveSnapping.prototype.addSnapTargetPoints = function (snapPoints, shape, target) {\n  CreateMoveSnapping.prototype.addSnapTargetPoints.call(this, snapPoints, shape, target);\n  var snapTargets = this.getSnapTargets(shape, target);\n  forEach(snapTargets, function (snapTarget) {\n    // handle TRBL alignment\n    //\n    // * with container elements\n    // * with text annotations\n    if (isContainer(snapTarget) || areAll([shape, snapTarget], 'bpmn:TextAnnotation')) {\n      snapPoints.add('top-left', topLeft(snapTarget));\n      snapPoints.add('bottom-right', bottomRight(snapTarget));\n    }\n  });\n  var elementRegistry = this._elementRegistry; // snap to docking points if not create mode\n\n  forEach(shape.incoming, function (connection) {\n    if (elementRegistry.get(shape.id)) {\n      if (!includes(snapTargets, connection.source)) {\n        snapPoints.add('mid', getMid(connection.source));\n      }\n\n      var docking = connection.waypoints[0];\n      snapPoints.add(connection.id + '-docking', docking.original || docking);\n    }\n  });\n  forEach(shape.outgoing, function (connection) {\n    if (elementRegistry.get(shape.id)) {\n      if (!includes(snapTargets, connection.target)) {\n        snapPoints.add('mid', getMid(connection.target));\n      }\n\n      var docking = connection.waypoints[connection.waypoints.length - 1];\n      snapPoints.add(connection.id + '-docking', docking.original || docking);\n    }\n  }); // add sequence flow parents as snap targets\n\n  if (is(target, 'bpmn:SequenceFlow')) {\n    snapPoints = this.addSnapTargetPoints(snapPoints, shape, target.parent);\n  }\n\n  return snapPoints;\n};\n\nBpmnCreateMoveSnapping.prototype.getSnapTargets = function (shape, target) {\n  return CreateMoveSnapping.prototype.getSnapTargets.call(this, shape, target).filter(function (snapTarget) {\n    // do not snap to lanes\n    return !is(snapTarget, 'bpmn:Lane');\n  });\n}; // helpers //////////\n\n\nfunction snapBoundaryEvent(event, target) {\n  var targetTRBL = asTRBL(target);\n  var direction = getBoundaryAttachment(event, target);\n  var context = event.context,\n      shape = context.shape;\n  var offset;\n\n  if (shape.parent) {\n    offset = {\n      x: 0,\n      y: 0\n    };\n  } else {\n    offset = getMid(shape);\n  }\n\n  if (/top/.test(direction)) {\n    setSnapped(event, 'y', targetTRBL.top - offset.y);\n  } else if (/bottom/.test(direction)) {\n    setSnapped(event, 'y', targetTRBL.bottom - offset.y);\n  }\n\n  if (/left/.test(direction)) {\n    setSnapped(event, 'x', targetTRBL.left - offset.x);\n  } else if (/right/.test(direction)) {\n    setSnapped(event, 'x', targetTRBL.right - offset.x);\n  }\n}\n\nfunction areAll(elements, type) {\n  return elements.every(function (el) {\n    return is(el, type);\n  });\n}\n\nfunction isContainer(element) {\n  if (is(element, 'bpmn:SubProcess') && isExpanded(element)) {\n    return true;\n  }\n\n  return is(element, 'bpmn:Participant');\n}\n\nfunction setSnappedIfConstrained(event) {\n  var context = event.context,\n      createConstraints = context.createConstraints;\n\n  if (!createConstraints) {\n    return;\n  }\n\n  var top = createConstraints.top,\n      right = createConstraints.right,\n      bottom = createConstraints.bottom,\n      left = createConstraints.left;\n\n  if (left && left >= event.x || right && right <= event.x) {\n    setSnapped(event, 'x', event.x);\n  }\n\n  if (top && top >= event.y || bottom && bottom <= event.y) {\n    setSnapped(event, 'y', event.y);\n  }\n}\n\nfunction includes(array, value) {\n  return array.indexOf(value) !== -1;\n}\n\nfunction getDockingSnapOrigin(docking, isMove, event) {\n  return isMove ? {\n    x: docking.x - event.x,\n    y: docking.y - event.y\n  } : {\n    x: docking.x,\n    y: docking.y\n  };\n}","map":{"version":3,"names":["inherits","CreateMoveSnapping","isSnapped","setSnapped","topLeft","bottomRight","isExpanded","is","asTRBL","getMid","getBoundaryAttachment","forEach","HIGH_PRIORITY","BpmnCreateMoveSnapping","eventBus","injector","invoke","on","setSnappedIfConstrained","event","context","canExecute","target","canAttach","attach","snapBoundaryEvent","$inject","prototype","initSnap","snapContext","call","shape","isMove","_elementRegistry","get","id","outgoing","connection","docking","waypoints","original","setSnapOrigin","getDockingSnapOrigin","incoming","length","setSnapLocations","addSnapTargetPoints","snapPoints","snapTargets","getSnapTargets","snapTarget","isContainer","areAll","add","elementRegistry","includes","source","parent","filter","targetTRBL","direction","offset","x","y","test","top","bottom","left","right","elements","type","every","el","element","createConstraints","array","value","indexOf"],"sources":["E:/Old_PC/Study/Angular/test-bpm/node_modules/bpmn-js/lib/features/snapping/BpmnCreateMoveSnapping.js"],"sourcesContent":["import inherits from 'inherits-browser';\n\nimport CreateMoveSnapping from 'diagram-js/lib/features/snapping/CreateMoveSnapping';\n\nimport {\n  isSnapped,\n  setSnapped,\n  topLeft,\n  bottomRight\n} from 'diagram-js/lib/features/snapping/SnapUtil';\n\nimport { isExpanded } from '../../util/DiUtil';\n\nimport { is } from '../../util/ModelUtil';\n\nimport {\n  asTRBL,\n  getMid\n} from 'diagram-js/lib/layout/LayoutUtil';\n\nimport { getBoundaryAttachment } from './BpmnSnappingUtil';\n\nimport { forEach } from 'min-dash';\n\nvar HIGH_PRIORITY = 1500;\n\n\n/**\n * Snap during create and move.\n *\n * @param {EventBus} eventBus\n * @param {Injector} injector\n */\nexport default function BpmnCreateMoveSnapping(eventBus, injector) {\n  injector.invoke(CreateMoveSnapping, this);\n\n  // creating first participant\n  eventBus.on([ 'create.move', 'create.end' ], HIGH_PRIORITY, setSnappedIfConstrained);\n\n  // snap boundary events\n  eventBus.on([\n    'create.move',\n    'create.end',\n    'shape.move.move',\n    'shape.move.end'\n  ], HIGH_PRIORITY, function(event) {\n    var context = event.context,\n        canExecute = context.canExecute,\n        target = context.target;\n\n    var canAttach = canExecute && (canExecute === 'attach' || canExecute.attach);\n\n    if (canAttach && !isSnapped(event)) {\n      snapBoundaryEvent(event, target);\n    }\n  });\n}\n\ninherits(BpmnCreateMoveSnapping, CreateMoveSnapping);\n\nBpmnCreateMoveSnapping.$inject = [\n  'eventBus',\n  'injector'\n];\n\nBpmnCreateMoveSnapping.prototype.initSnap = function(event) {\n  var snapContext = CreateMoveSnapping.prototype.initSnap.call(this, event);\n\n  var shape = event.shape;\n\n  var isMove = !!this._elementRegistry.get(shape.id);\n\n  // snap to docking points\n  forEach(shape.outgoing, function(connection) {\n    var docking = connection.waypoints[0];\n\n    docking = docking.original || docking;\n\n    snapContext.setSnapOrigin(connection.id + '-docking', getDockingSnapOrigin(docking, isMove, event));\n  });\n\n  forEach(shape.incoming, function(connection) {\n    var docking = connection.waypoints[connection.waypoints.length - 1];\n\n    docking = docking.original || docking;\n\n    snapContext.setSnapOrigin(connection.id + '-docking', getDockingSnapOrigin(docking, isMove, event));\n  });\n\n  if (is(shape, 'bpmn:Participant')) {\n\n    // snap to borders with higher priority\n    snapContext.setSnapLocations([ 'top-left', 'bottom-right', 'mid' ]);\n  }\n\n  return snapContext;\n};\n\nBpmnCreateMoveSnapping.prototype.addSnapTargetPoints = function(snapPoints, shape, target) {\n  CreateMoveSnapping.prototype.addSnapTargetPoints.call(this, snapPoints, shape, target);\n\n  var snapTargets = this.getSnapTargets(shape, target);\n\n  forEach(snapTargets, function(snapTarget) {\n\n    // handle TRBL alignment\n    //\n    // * with container elements\n    // * with text annotations\n    if (isContainer(snapTarget) || areAll([ shape, snapTarget ], 'bpmn:TextAnnotation')) {\n      snapPoints.add('top-left', topLeft(snapTarget));\n      snapPoints.add('bottom-right', bottomRight(snapTarget));\n    }\n  });\n\n  var elementRegistry = this._elementRegistry;\n\n  // snap to docking points if not create mode\n  forEach(shape.incoming, function(connection) {\n    if (elementRegistry.get(shape.id)) {\n\n      if (!includes(snapTargets, connection.source)) {\n        snapPoints.add('mid', getMid(connection.source));\n      }\n\n      var docking = connection.waypoints[0];\n      snapPoints.add(connection.id + '-docking', docking.original || docking);\n    }\n  });\n\n  forEach(shape.outgoing, function(connection) {\n    if (elementRegistry.get(shape.id)) {\n\n      if (!includes(snapTargets, connection.target)) {\n        snapPoints.add('mid', getMid(connection.target));\n      }\n\n      var docking = connection.waypoints[ connection.waypoints.length - 1 ];\n\n      snapPoints.add(connection.id + '-docking', docking.original || docking);\n    }\n  });\n\n  // add sequence flow parents as snap targets\n  if (is(target, 'bpmn:SequenceFlow')) {\n    snapPoints = this.addSnapTargetPoints(snapPoints, shape, target.parent);\n  }\n\n  return snapPoints;\n};\n\nBpmnCreateMoveSnapping.prototype.getSnapTargets = function(shape, target) {\n  return CreateMoveSnapping.prototype.getSnapTargets.call(this, shape, target)\n    .filter(function(snapTarget) {\n\n      // do not snap to lanes\n      return !is(snapTarget, 'bpmn:Lane');\n    });\n};\n\n// helpers //////////\n\nfunction snapBoundaryEvent(event, target) {\n  var targetTRBL = asTRBL(target);\n\n  var direction = getBoundaryAttachment(event, target);\n\n  var context = event.context,\n      shape = context.shape;\n\n  var offset;\n\n  if (shape.parent) {\n    offset = { x: 0, y: 0 };\n  } else {\n    offset = getMid(shape);\n  }\n\n  if (/top/.test(direction)) {\n    setSnapped(event, 'y', targetTRBL.top - offset.y);\n  } else if (/bottom/.test(direction)) {\n    setSnapped(event, 'y', targetTRBL.bottom - offset.y);\n  }\n\n  if (/left/.test(direction)) {\n    setSnapped(event, 'x', targetTRBL.left - offset.x);\n  } else if (/right/.test(direction)) {\n    setSnapped(event, 'x', targetTRBL.right - offset.x);\n  }\n}\n\nfunction areAll(elements, type) {\n  return elements.every(function(el) {\n    return is(el, type);\n  });\n}\n\nfunction isContainer(element) {\n  if (is(element, 'bpmn:SubProcess') && isExpanded(element)) {\n    return true;\n  }\n\n  return is(element, 'bpmn:Participant');\n}\n\n\nfunction setSnappedIfConstrained(event) {\n  var context = event.context,\n      createConstraints = context.createConstraints;\n\n  if (!createConstraints) {\n    return;\n  }\n\n  var top = createConstraints.top,\n      right = createConstraints.right,\n      bottom = createConstraints.bottom,\n      left = createConstraints.left;\n\n  if ((left && left >= event.x) || (right && right <= event.x)) {\n    setSnapped(event, 'x', event.x);\n  }\n\n  if ((top && top >= event.y) || (bottom && bottom <= event.y)) {\n    setSnapped(event, 'y', event.y);\n  }\n}\n\nfunction includes(array, value) {\n  return array.indexOf(value) !== -1;\n}\n\nfunction getDockingSnapOrigin(docking, isMove, event) {\n  return isMove ? (\n    {\n      x: docking.x - event.x,\n      y: docking.y - event.y\n    }\n  ) : {\n    x: docking.x,\n    y: docking.y\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}