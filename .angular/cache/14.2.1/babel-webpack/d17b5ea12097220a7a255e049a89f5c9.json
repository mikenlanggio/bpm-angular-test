{"ast":null,"code":"import { isArray } from 'min-dash';\n/**\n * Reconnect connection handler\n */\n\nexport default function ReconnectConnectionHandler(modeling) {\n  this._modeling = modeling;\n}\nReconnectConnectionHandler.$inject = ['modeling'];\n\nReconnectConnectionHandler.prototype.execute = function (context) {\n  var newSource = context.newSource,\n      newTarget = context.newTarget,\n      connection = context.connection,\n      dockingOrPoints = context.dockingOrPoints;\n\n  if (!newSource && !newTarget) {\n    throw new Error('newSource or newTarget required');\n  }\n\n  if (isArray(dockingOrPoints)) {\n    context.oldWaypoints = connection.waypoints;\n    connection.waypoints = dockingOrPoints;\n  }\n\n  if (newSource) {\n    context.oldSource = connection.source;\n    connection.source = newSource;\n  }\n\n  if (newTarget) {\n    context.oldTarget = connection.target;\n    connection.target = newTarget;\n  }\n\n  return connection;\n};\n\nReconnectConnectionHandler.prototype.postExecute = function (context) {\n  var connection = context.connection,\n      newSource = context.newSource,\n      newTarget = context.newTarget,\n      dockingOrPoints = context.dockingOrPoints,\n      hints = context.hints || {};\n  var layoutConnectionHints = {};\n\n  if (hints.connectionStart) {\n    layoutConnectionHints.connectionStart = hints.connectionStart;\n  }\n\n  if (hints.connectionEnd) {\n    layoutConnectionHints.connectionEnd = hints.connectionEnd;\n  }\n\n  if (hints.layoutConnection === false) {\n    return;\n  }\n\n  if (newSource && (!newTarget || hints.docking === 'source')) {\n    layoutConnectionHints.connectionStart = layoutConnectionHints.connectionStart || getDocking(isArray(dockingOrPoints) ? dockingOrPoints[0] : dockingOrPoints);\n  }\n\n  if (newTarget && (!newSource || hints.docking === 'target')) {\n    layoutConnectionHints.connectionEnd = layoutConnectionHints.connectionEnd || getDocking(isArray(dockingOrPoints) ? dockingOrPoints[dockingOrPoints.length - 1] : dockingOrPoints);\n  }\n\n  if (hints.newWaypoints) {\n    layoutConnectionHints.waypoints = hints.newWaypoints;\n  }\n\n  this._modeling.layoutConnection(connection, layoutConnectionHints);\n};\n\nReconnectConnectionHandler.prototype.revert = function (context) {\n  var oldSource = context.oldSource,\n      oldTarget = context.oldTarget,\n      oldWaypoints = context.oldWaypoints,\n      connection = context.connection;\n\n  if (oldSource) {\n    connection.source = oldSource;\n  }\n\n  if (oldTarget) {\n    connection.target = oldTarget;\n  }\n\n  if (oldWaypoints) {\n    connection.waypoints = oldWaypoints;\n  }\n\n  return connection;\n}; // helpers //////////\n\n\nfunction getDocking(point) {\n  return point.original || point;\n}","map":{"version":3,"names":["isArray","ReconnectConnectionHandler","modeling","_modeling","$inject","prototype","execute","context","newSource","newTarget","connection","dockingOrPoints","Error","oldWaypoints","waypoints","oldSource","source","oldTarget","target","postExecute","hints","layoutConnectionHints","connectionStart","connectionEnd","layoutConnection","docking","getDocking","length","newWaypoints","revert","point","original"],"sources":["E:/Old_PC/Study/Angular/test-bpm/node_modules/diagram-js/lib/features/modeling/cmd/ReconnectConnectionHandler.js"],"sourcesContent":["import { isArray } from 'min-dash';\n\n\n/**\n * Reconnect connection handler\n */\nexport default function ReconnectConnectionHandler(modeling) {\n  this._modeling = modeling;\n}\n\nReconnectConnectionHandler.$inject = [ 'modeling' ];\n\nReconnectConnectionHandler.prototype.execute = function(context) {\n  var newSource = context.newSource,\n      newTarget = context.newTarget,\n      connection = context.connection,\n      dockingOrPoints = context.dockingOrPoints;\n\n  if (!newSource && !newTarget) {\n    throw new Error('newSource or newTarget required');\n  }\n\n  if (isArray(dockingOrPoints)) {\n    context.oldWaypoints = connection.waypoints;\n    connection.waypoints = dockingOrPoints;\n  }\n\n  if (newSource) {\n    context.oldSource = connection.source;\n    connection.source = newSource;\n  }\n\n  if (newTarget) {\n    context.oldTarget = connection.target;\n    connection.target = newTarget;\n  }\n\n  return connection;\n};\n\nReconnectConnectionHandler.prototype.postExecute = function(context) {\n  var connection = context.connection,\n      newSource = context.newSource,\n      newTarget = context.newTarget,\n      dockingOrPoints = context.dockingOrPoints,\n      hints = context.hints || {};\n\n  var layoutConnectionHints = {};\n\n  if (hints.connectionStart) {\n    layoutConnectionHints.connectionStart = hints.connectionStart;\n  }\n\n  if (hints.connectionEnd) {\n    layoutConnectionHints.connectionEnd = hints.connectionEnd;\n  }\n\n  if (hints.layoutConnection === false) {\n    return;\n  }\n\n  if (newSource && (!newTarget || hints.docking === 'source')) {\n    layoutConnectionHints.connectionStart = layoutConnectionHints.connectionStart\n      || getDocking(isArray(dockingOrPoints) ? dockingOrPoints[ 0 ] : dockingOrPoints);\n  }\n\n  if (newTarget && (!newSource || hints.docking === 'target')) {\n    layoutConnectionHints.connectionEnd = layoutConnectionHints.connectionEnd\n      || getDocking(isArray(dockingOrPoints) ? dockingOrPoints[ dockingOrPoints.length - 1 ] : dockingOrPoints);\n  }\n\n  if (hints.newWaypoints) {\n    layoutConnectionHints.waypoints = hints.newWaypoints;\n  }\n\n  this._modeling.layoutConnection(connection, layoutConnectionHints);\n};\n\nReconnectConnectionHandler.prototype.revert = function(context) {\n  var oldSource = context.oldSource,\n      oldTarget = context.oldTarget,\n      oldWaypoints = context.oldWaypoints,\n      connection = context.connection;\n\n  if (oldSource) {\n    connection.source = oldSource;\n  }\n\n  if (oldTarget) {\n    connection.target = oldTarget;\n  }\n\n  if (oldWaypoints) {\n    connection.waypoints = oldWaypoints;\n  }\n\n  return connection;\n};\n\n\n\n// helpers //////////\n\nfunction getDocking(point) {\n  return point.original || point;\n}"],"mappings":"AAAA,SAASA,OAAT,QAAwB,UAAxB;AAGA;AACA;AACA;;AACA,eAAe,SAASC,0BAAT,CAAoCC,QAApC,EAA8C;EAC3D,KAAKC,SAAL,GAAiBD,QAAjB;AACD;AAEDD,0BAA0B,CAACG,OAA3B,GAAqC,CAAE,UAAF,CAArC;;AAEAH,0BAA0B,CAACI,SAA3B,CAAqCC,OAArC,GAA+C,UAASC,OAAT,EAAkB;EAC/D,IAAIC,SAAS,GAAGD,OAAO,CAACC,SAAxB;EAAA,IACIC,SAAS,GAAGF,OAAO,CAACE,SADxB;EAAA,IAEIC,UAAU,GAAGH,OAAO,CAACG,UAFzB;EAAA,IAGIC,eAAe,GAAGJ,OAAO,CAACI,eAH9B;;EAKA,IAAI,CAACH,SAAD,IAAc,CAACC,SAAnB,EAA8B;IAC5B,MAAM,IAAIG,KAAJ,CAAU,iCAAV,CAAN;EACD;;EAED,IAAIZ,OAAO,CAACW,eAAD,CAAX,EAA8B;IAC5BJ,OAAO,CAACM,YAAR,GAAuBH,UAAU,CAACI,SAAlC;IACAJ,UAAU,CAACI,SAAX,GAAuBH,eAAvB;EACD;;EAED,IAAIH,SAAJ,EAAe;IACbD,OAAO,CAACQ,SAAR,GAAoBL,UAAU,CAACM,MAA/B;IACAN,UAAU,CAACM,MAAX,GAAoBR,SAApB;EACD;;EAED,IAAIC,SAAJ,EAAe;IACbF,OAAO,CAACU,SAAR,GAAoBP,UAAU,CAACQ,MAA/B;IACAR,UAAU,CAACQ,MAAX,GAAoBT,SAApB;EACD;;EAED,OAAOC,UAAP;AACD,CA1BD;;AA4BAT,0BAA0B,CAACI,SAA3B,CAAqCc,WAArC,GAAmD,UAASZ,OAAT,EAAkB;EACnE,IAAIG,UAAU,GAAGH,OAAO,CAACG,UAAzB;EAAA,IACIF,SAAS,GAAGD,OAAO,CAACC,SADxB;EAAA,IAEIC,SAAS,GAAGF,OAAO,CAACE,SAFxB;EAAA,IAGIE,eAAe,GAAGJ,OAAO,CAACI,eAH9B;EAAA,IAIIS,KAAK,GAAGb,OAAO,CAACa,KAAR,IAAiB,EAJ7B;EAMA,IAAIC,qBAAqB,GAAG,EAA5B;;EAEA,IAAID,KAAK,CAACE,eAAV,EAA2B;IACzBD,qBAAqB,CAACC,eAAtB,GAAwCF,KAAK,CAACE,eAA9C;EACD;;EAED,IAAIF,KAAK,CAACG,aAAV,EAAyB;IACvBF,qBAAqB,CAACE,aAAtB,GAAsCH,KAAK,CAACG,aAA5C;EACD;;EAED,IAAIH,KAAK,CAACI,gBAAN,KAA2B,KAA/B,EAAsC;IACpC;EACD;;EAED,IAAIhB,SAAS,KAAK,CAACC,SAAD,IAAcW,KAAK,CAACK,OAAN,KAAkB,QAArC,CAAb,EAA6D;IAC3DJ,qBAAqB,CAACC,eAAtB,GAAwCD,qBAAqB,CAACC,eAAtB,IACnCI,UAAU,CAAC1B,OAAO,CAACW,eAAD,CAAP,GAA2BA,eAAe,CAAE,CAAF,CAA1C,GAAkDA,eAAnD,CADf;EAED;;EAED,IAAIF,SAAS,KAAK,CAACD,SAAD,IAAcY,KAAK,CAACK,OAAN,KAAkB,QAArC,CAAb,EAA6D;IAC3DJ,qBAAqB,CAACE,aAAtB,GAAsCF,qBAAqB,CAACE,aAAtB,IACjCG,UAAU,CAAC1B,OAAO,CAACW,eAAD,CAAP,GAA2BA,eAAe,CAAEA,eAAe,CAACgB,MAAhB,GAAyB,CAA3B,CAA1C,GAA2EhB,eAA5E,CADf;EAED;;EAED,IAAIS,KAAK,CAACQ,YAAV,EAAwB;IACtBP,qBAAqB,CAACP,SAAtB,GAAkCM,KAAK,CAACQ,YAAxC;EACD;;EAED,KAAKzB,SAAL,CAAeqB,gBAAf,CAAgCd,UAAhC,EAA4CW,qBAA5C;AACD,CApCD;;AAsCApB,0BAA0B,CAACI,SAA3B,CAAqCwB,MAArC,GAA8C,UAAStB,OAAT,EAAkB;EAC9D,IAAIQ,SAAS,GAAGR,OAAO,CAACQ,SAAxB;EAAA,IACIE,SAAS,GAAGV,OAAO,CAACU,SADxB;EAAA,IAEIJ,YAAY,GAAGN,OAAO,CAACM,YAF3B;EAAA,IAGIH,UAAU,GAAGH,OAAO,CAACG,UAHzB;;EAKA,IAAIK,SAAJ,EAAe;IACbL,UAAU,CAACM,MAAX,GAAoBD,SAApB;EACD;;EAED,IAAIE,SAAJ,EAAe;IACbP,UAAU,CAACQ,MAAX,GAAoBD,SAApB;EACD;;EAED,IAAIJ,YAAJ,EAAkB;IAChBH,UAAU,CAACI,SAAX,GAAuBD,YAAvB;EACD;;EAED,OAAOH,UAAP;AACD,CAnBD,C,CAuBA;;;AAEA,SAASgB,UAAT,CAAoBI,KAApB,EAA2B;EACzB,OAAOA,KAAK,CAACC,QAAN,IAAkBD,KAAzB;AACD"},"metadata":{},"sourceType":"module"}