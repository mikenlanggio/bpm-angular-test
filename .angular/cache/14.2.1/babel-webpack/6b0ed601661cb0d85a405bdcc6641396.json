{"ast":null,"code":"import { assign } from 'min-dash';\nimport inherits from 'inherits-browser';\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\nimport { getConnectionAdjustment as getConnectionAnchorPoint } from './util/ConnectionLayoutUtil';\n/**\n * A component that makes sure that Associations connected to Connections\n * are updated together with the Connection.\n *\n * @param {EventBus} eventBus\n * @param {Modeling} modeling\n */\n\nexport default function LayoutConnectionBehavior(eventBus, modeling) {\n  CommandInterceptor.call(this, eventBus);\n\n  function getnewAnchorPoint(event, point) {\n    var context = event.context,\n        connection = context.connection,\n        hints = assign({}, context.hints),\n        newWaypoints = context.newWaypoints || connection.waypoints,\n        oldWaypoints = context.oldWaypoints;\n\n    if (typeof hints.startChanged === 'undefined') {\n      hints.startChanged = !!hints.connectionStart;\n    }\n\n    if (typeof hints.endChanged === 'undefined') {\n      hints.endChanged = !!hints.connectionEnd;\n    }\n\n    return getConnectionAnchorPoint(point, newWaypoints, oldWaypoints, hints);\n  }\n\n  this.postExecute(['connection.layout', 'connection.updateWaypoints'], function (event) {\n    var context = event.context;\n    var connection = context.connection,\n        outgoing = connection.outgoing,\n        incoming = connection.incoming;\n    incoming.forEach(function (connection) {\n      var endPoint = connection.waypoints[connection.waypoints.length - 1];\n      var newEndpoint = getnewAnchorPoint(event, endPoint);\n      var newWaypoints = [].concat(connection.waypoints.slice(0, -1), [newEndpoint]);\n      modeling.updateWaypoints(connection, newWaypoints);\n    });\n    outgoing.forEach(function (connection) {\n      var startpoint = connection.waypoints[0];\n      var newStartpoint = getnewAnchorPoint(event, startpoint);\n      var newWaypoints = [].concat([newStartpoint], connection.waypoints.slice(1));\n      modeling.updateWaypoints(connection, newWaypoints);\n    });\n  });\n  this.postExecute(['connection.move'], function (event) {\n    var context = event.context;\n    var connection = context.connection,\n        outgoing = connection.outgoing,\n        incoming = connection.incoming,\n        delta = context.delta;\n    incoming.forEach(function (connection) {\n      var endPoint = connection.waypoints[connection.waypoints.length - 1];\n      var newEndpoint = {\n        x: endPoint.x + delta.x,\n        y: endPoint.y + delta.y\n      };\n      var newWaypoints = [].concat(connection.waypoints.slice(0, -1), [newEndpoint]);\n      modeling.updateWaypoints(connection, newWaypoints);\n    });\n    outgoing.forEach(function (connection) {\n      var startpoint = connection.waypoints[0];\n      var newStartpoint = {\n        x: startpoint.x + delta.x,\n        y: startpoint.y + delta.y\n      };\n      var newWaypoints = [].concat([newStartpoint], connection.waypoints.slice(1));\n      modeling.updateWaypoints(connection, newWaypoints);\n    });\n  });\n}\ninherits(LayoutConnectionBehavior, CommandInterceptor);\nLayoutConnectionBehavior.$inject = ['eventBus', 'modeling'];","map":{"version":3,"names":["assign","inherits","CommandInterceptor","getConnectionAdjustment","getConnectionAnchorPoint","LayoutConnectionBehavior","eventBus","modeling","call","getnewAnchorPoint","event","point","context","connection","hints","newWaypoints","waypoints","oldWaypoints","startChanged","connectionStart","endChanged","connectionEnd","postExecute","outgoing","incoming","forEach","endPoint","length","newEndpoint","concat","slice","updateWaypoints","startpoint","newStartpoint","delta","x","y","$inject"],"sources":["E:/Old_PC/Study/Angular/test-bpm/node_modules/bpmn-js/lib/features/modeling/behavior/LayoutConnectionBehavior.js"],"sourcesContent":["import {\n  assign\n} from 'min-dash';\n\nimport inherits from 'inherits-browser';\n\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\n\nimport { getConnectionAdjustment as getConnectionAnchorPoint } from './util/ConnectionLayoutUtil';\n\n/**\n * A component that makes sure that Associations connected to Connections\n * are updated together with the Connection.\n *\n * @param {EventBus} eventBus\n * @param {Modeling} modeling\n */\nexport default function LayoutConnectionBehavior(\n    eventBus, modeling) {\n\n  CommandInterceptor.call(this, eventBus);\n\n  function getnewAnchorPoint(event, point) {\n\n    var context = event.context,\n        connection = context.connection,\n        hints = assign({}, context.hints),\n        newWaypoints = context.newWaypoints || connection.waypoints,\n        oldWaypoints = context.oldWaypoints;\n\n\n    if (typeof hints.startChanged === 'undefined') {\n      hints.startChanged = !!hints.connectionStart;\n    }\n\n    if (typeof hints.endChanged === 'undefined') {\n      hints.endChanged = !!hints.connectionEnd;\n    }\n\n    return getConnectionAnchorPoint(point, newWaypoints, oldWaypoints, hints);\n  }\n\n  this.postExecute([\n    'connection.layout',\n    'connection.updateWaypoints'\n  ], function(event) {\n    var context = event.context;\n\n    var connection = context.connection,\n        outgoing = connection.outgoing,\n        incoming = connection.incoming;\n\n    incoming.forEach(function(connection) {\n      var endPoint = connection.waypoints[connection.waypoints.length - 1];\n      var newEndpoint = getnewAnchorPoint(event, endPoint);\n\n      var newWaypoints = [].concat(connection.waypoints.slice(0, -1), [ newEndpoint ]);\n\n      modeling.updateWaypoints(connection, newWaypoints);\n    });\n\n    outgoing.forEach(function(connection) {\n      var startpoint = connection.waypoints[0];\n      var newStartpoint = getnewAnchorPoint(event, startpoint);\n\n      var newWaypoints = [].concat([ newStartpoint ], connection.waypoints.slice(1));\n\n      modeling.updateWaypoints(connection, newWaypoints);\n    });\n\n  });\n\n\n  this.postExecute([\n    'connection.move'\n  ], function(event) {\n    var context = event.context;\n\n    var connection = context.connection,\n        outgoing = connection.outgoing,\n        incoming = connection.incoming,\n        delta = context.delta;\n\n    incoming.forEach(function(connection) {\n      var endPoint = connection.waypoints[connection.waypoints.length - 1];\n      var newEndpoint = {\n        x: endPoint.x + delta.x,\n        y: endPoint.y + delta.y\n      };\n\n      var newWaypoints = [].concat(connection.waypoints.slice(0, -1), [ newEndpoint ]);\n\n      modeling.updateWaypoints(connection, newWaypoints);\n    });\n\n    outgoing.forEach(function(connection) {\n      var startpoint = connection.waypoints[0];\n      var newStartpoint = {\n        x: startpoint.x + delta.x,\n        y: startpoint.y + delta.y\n      };\n\n      var newWaypoints = [].concat([ newStartpoint ], connection.waypoints.slice(1));\n\n      modeling.updateWaypoints(connection, newWaypoints);\n    });\n\n  });\n\n}\n\ninherits(LayoutConnectionBehavior, CommandInterceptor);\n\nLayoutConnectionBehavior.$inject = [\n  'eventBus',\n  'modeling'\n];\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}