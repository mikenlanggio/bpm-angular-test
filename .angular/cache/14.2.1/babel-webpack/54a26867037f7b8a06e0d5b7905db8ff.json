{"ast":null,"code":"import { forEach } from 'min-dash';\nvar MARKER_DRAGGING = 'djs-dragging',\n    MARKER_RESIZING = 'djs-resizing';\nvar LOW_PRIORITY = 250;\nimport { append as svgAppend, attr as svgAttr, classes as svgClasses, create as svgCreate, remove as svgRemove } from 'tiny-svg';\nimport { translate } from '../../util/SvgTransformUtil';\nvar max = Math.max;\n/**\n * Provides previews for selecting/moving/resizing shapes when creating/removing space.\n *\n * @param {EventBus} eventBus\n * @param {ElementRegistry} elementRegistry\n * @param {Canvas} canvas\n * @param {Styles} styles\n */\n\nexport default function SpaceToolPreview(eventBus, elementRegistry, canvas, styles, previewSupport) {\n  function addPreviewGfx(collection, dragGroup) {\n    forEach(collection, function (element) {\n      previewSupport.addDragger(element, dragGroup);\n      canvas.addMarker(element, MARKER_DRAGGING);\n    });\n  } // add crosshair\n\n\n  eventBus.on('spaceTool.selection.start', function (event) {\n    var space = canvas.getLayer('space'),\n        context = event.context;\n    var orientation = {\n      x: 'M 0,-10000 L 0,10000',\n      y: 'M -10000,0 L 10000,0'\n    };\n    var crosshairGroup = svgCreate('g');\n    svgAttr(crosshairGroup, styles.cls('djs-crosshair-group', ['no-events']));\n    svgAppend(space, crosshairGroup); // horizontal path\n\n    var pathX = svgCreate('path');\n    svgAttr(pathX, 'd', orientation.x);\n    svgClasses(pathX).add('djs-crosshair');\n    svgAppend(crosshairGroup, pathX); // vertical path\n\n    var pathY = svgCreate('path');\n    svgAttr(pathY, 'd', orientation.y);\n    svgClasses(pathY).add('djs-crosshair');\n    svgAppend(crosshairGroup, pathY);\n    context.crosshairGroup = crosshairGroup;\n  }); // update crosshair\n\n  eventBus.on('spaceTool.selection.move', function (event) {\n    var crosshairGroup = event.context.crosshairGroup;\n    translate(crosshairGroup, event.x, event.y);\n  }); // remove crosshair\n\n  eventBus.on('spaceTool.selection.cleanup', function (event) {\n    var context = event.context,\n        crosshairGroup = context.crosshairGroup;\n\n    if (crosshairGroup) {\n      svgRemove(crosshairGroup);\n    }\n  }); // add and update move/resize previews\n\n  eventBus.on('spaceTool.move', LOW_PRIORITY, function (event) {\n    var context = event.context,\n        line = context.line,\n        axis = context.axis,\n        movingShapes = context.movingShapes,\n        resizingShapes = context.resizingShapes;\n\n    if (!context.initialized) {\n      return;\n    }\n\n    if (!context.dragGroup) {\n      var spaceLayer = canvas.getLayer('space');\n      line = svgCreate('path');\n      svgAttr(line, 'd', 'M0,0 L0,0');\n      svgClasses(line).add('djs-crosshair');\n      svgAppend(spaceLayer, line);\n      context.line = line;\n      var dragGroup = svgCreate('g');\n      svgAttr(dragGroup, styles.cls('djs-drag-group', ['no-events']));\n      svgAppend(canvas.getActiveLayer(), dragGroup); // shapes\n\n      addPreviewGfx(movingShapes, dragGroup); // connections\n\n      var movingConnections = context.movingConnections = elementRegistry.filter(function (element) {\n        var sourceIsMoving = false;\n        forEach(movingShapes, function (shape) {\n          forEach(shape.outgoing, function (connection) {\n            if (element === connection) {\n              sourceIsMoving = true;\n            }\n          });\n        });\n        var targetIsMoving = false;\n        forEach(movingShapes, function (shape) {\n          forEach(shape.incoming, function (connection) {\n            if (element === connection) {\n              targetIsMoving = true;\n            }\n          });\n        });\n        var sourceIsResizing = false;\n        forEach(resizingShapes, function (shape) {\n          forEach(shape.outgoing, function (connection) {\n            if (element === connection) {\n              sourceIsResizing = true;\n            }\n          });\n        });\n        var targetIsResizing = false;\n        forEach(resizingShapes, function (shape) {\n          forEach(shape.incoming, function (connection) {\n            if (element === connection) {\n              targetIsResizing = true;\n            }\n          });\n        });\n        return isConnection(element) && (sourceIsMoving || sourceIsResizing) && (targetIsMoving || targetIsResizing);\n      });\n      addPreviewGfx(movingConnections, dragGroup);\n      context.dragGroup = dragGroup;\n    }\n\n    if (!context.frameGroup) {\n      var frameGroup = svgCreate('g');\n      svgAttr(frameGroup, styles.cls('djs-frame-group', ['no-events']));\n      svgAppend(canvas.getActiveLayer(), frameGroup);\n      var frames = [];\n      forEach(resizingShapes, function (shape) {\n        var frame = previewSupport.addFrame(shape, frameGroup);\n        var initialBounds = frame.getBBox();\n        frames.push({\n          element: frame,\n          initialBounds: initialBounds\n        });\n        canvas.addMarker(shape, MARKER_RESIZING);\n      });\n      context.frameGroup = frameGroup;\n      context.frames = frames;\n    }\n\n    var orientation = {\n      x: 'M' + event.x + ', -10000 L' + event.x + ', 10000',\n      y: 'M -10000, ' + event.y + ' L 10000, ' + event.y\n    };\n    svgAttr(line, {\n      d: orientation[axis]\n    });\n    var opposite = {\n      x: 'y',\n      y: 'x'\n    };\n    var delta = {\n      x: event.dx,\n      y: event.dy\n    };\n    delta[opposite[context.axis]] = 0; // update move previews\n\n    translate(context.dragGroup, delta.x, delta.y); // update resize previews\n\n    forEach(context.frames, function (frame) {\n      var element = frame.element,\n          initialBounds = frame.initialBounds,\n          width,\n          height;\n\n      if (context.direction === 'e') {\n        svgAttr(element, {\n          width: max(initialBounds.width + delta.x, 5)\n        });\n      } else {\n        width = max(initialBounds.width - delta.x, 5);\n        svgAttr(element, {\n          width: width,\n          x: initialBounds.x + initialBounds.width - width\n        });\n      }\n\n      if (context.direction === 's') {\n        svgAttr(element, {\n          height: max(initialBounds.height + delta.y, 5)\n        });\n      } else {\n        height = max(initialBounds.height - delta.y, 5);\n        svgAttr(element, {\n          height: height,\n          y: initialBounds.y + initialBounds.height - height\n        });\n      }\n    });\n  }); // remove move/resize previews\n\n  eventBus.on('spaceTool.cleanup', function (event) {\n    var context = event.context,\n        movingShapes = context.movingShapes,\n        movingConnections = context.movingConnections,\n        resizingShapes = context.resizingShapes,\n        line = context.line,\n        dragGroup = context.dragGroup,\n        frameGroup = context.frameGroup; // moving shapes\n\n    forEach(movingShapes, function (shape) {\n      canvas.removeMarker(shape, MARKER_DRAGGING);\n    }); // moving connections\n\n    forEach(movingConnections, function (connection) {\n      canvas.removeMarker(connection, MARKER_DRAGGING);\n    });\n\n    if (dragGroup) {\n      svgRemove(line);\n      svgRemove(dragGroup);\n    }\n\n    forEach(resizingShapes, function (shape) {\n      canvas.removeMarker(shape, MARKER_RESIZING);\n    });\n\n    if (frameGroup) {\n      svgRemove(frameGroup);\n    }\n  });\n}\nSpaceToolPreview.$inject = ['eventBus', 'elementRegistry', 'canvas', 'styles', 'previewSupport']; // helpers //////////////////////\n\n/**\n * Checks if an element is a connection.\n */\n\nfunction isConnection(element) {\n  return element.waypoints;\n}","map":{"version":3,"names":["forEach","MARKER_DRAGGING","MARKER_RESIZING","LOW_PRIORITY","append","svgAppend","attr","svgAttr","classes","svgClasses","create","svgCreate","remove","svgRemove","translate","max","Math","SpaceToolPreview","eventBus","elementRegistry","canvas","styles","previewSupport","addPreviewGfx","collection","dragGroup","element","addDragger","addMarker","on","event","space","getLayer","context","orientation","x","y","crosshairGroup","cls","pathX","add","pathY","line","axis","movingShapes","resizingShapes","initialized","spaceLayer","getActiveLayer","movingConnections","filter","sourceIsMoving","shape","outgoing","connection","targetIsMoving","incoming","sourceIsResizing","targetIsResizing","isConnection","frameGroup","frames","frame","addFrame","initialBounds","getBBox","push","d","opposite","delta","dx","dy","width","height","direction","removeMarker","$inject","waypoints"],"sources":["E:/Old_PC/Study/Angular/test-bpm/node_modules/diagram-js/lib/features/space-tool/SpaceToolPreview.js"],"sourcesContent":["import {\n  forEach\n} from 'min-dash';\n\nvar MARKER_DRAGGING = 'djs-dragging',\n    MARKER_RESIZING = 'djs-resizing';\n\nvar LOW_PRIORITY = 250;\n\nimport {\n  append as svgAppend,\n  attr as svgAttr,\n  classes as svgClasses,\n  create as svgCreate,\n  remove as svgRemove\n} from 'tiny-svg';\n\nimport {\n  translate\n} from '../../util/SvgTransformUtil';\n\nvar max = Math.max;\n\n\n/**\n * Provides previews for selecting/moving/resizing shapes when creating/removing space.\n *\n * @param {EventBus} eventBus\n * @param {ElementRegistry} elementRegistry\n * @param {Canvas} canvas\n * @param {Styles} styles\n */\nexport default function SpaceToolPreview(\n    eventBus, elementRegistry, canvas,\n    styles, previewSupport) {\n\n  function addPreviewGfx(collection, dragGroup) {\n    forEach(collection, function(element) {\n      previewSupport.addDragger(element, dragGroup);\n\n      canvas.addMarker(element, MARKER_DRAGGING);\n    });\n  }\n\n  // add crosshair\n  eventBus.on('spaceTool.selection.start', function(event) {\n    var space = canvas.getLayer('space'),\n        context = event.context;\n\n    var orientation = {\n      x: 'M 0,-10000 L 0,10000',\n      y: 'M -10000,0 L 10000,0'\n    };\n\n    var crosshairGroup = svgCreate('g');\n    svgAttr(crosshairGroup, styles.cls('djs-crosshair-group', [ 'no-events' ]));\n\n    svgAppend(space, crosshairGroup);\n\n    // horizontal path\n    var pathX = svgCreate('path');\n    svgAttr(pathX, 'd', orientation.x);\n    svgClasses(pathX).add('djs-crosshair');\n\n    svgAppend(crosshairGroup, pathX);\n\n    // vertical path\n    var pathY = svgCreate('path');\n    svgAttr(pathY, 'd', orientation.y);\n    svgClasses(pathY).add('djs-crosshair');\n\n    svgAppend(crosshairGroup, pathY);\n\n    context.crosshairGroup = crosshairGroup;\n  });\n\n  // update crosshair\n  eventBus.on('spaceTool.selection.move', function(event) {\n    var crosshairGroup = event.context.crosshairGroup;\n\n    translate(crosshairGroup, event.x, event.y);\n  });\n\n  // remove crosshair\n  eventBus.on('spaceTool.selection.cleanup', function(event) {\n    var context = event.context,\n        crosshairGroup = context.crosshairGroup;\n\n    if (crosshairGroup) {\n      svgRemove(crosshairGroup);\n    }\n  });\n\n  // add and update move/resize previews\n  eventBus.on('spaceTool.move', LOW_PRIORITY, function(event) {\n\n    var context = event.context,\n        line = context.line,\n        axis = context.axis,\n        movingShapes = context.movingShapes,\n        resizingShapes = context.resizingShapes;\n\n    if (!context.initialized) {\n      return;\n    }\n\n    if (!context.dragGroup) {\n      var spaceLayer = canvas.getLayer('space');\n\n      line = svgCreate('path');\n      svgAttr(line, 'd', 'M0,0 L0,0');\n      svgClasses(line).add('djs-crosshair');\n\n      svgAppend(spaceLayer, line);\n\n      context.line = line;\n\n      var dragGroup = svgCreate('g');\n      svgAttr(dragGroup, styles.cls('djs-drag-group', [ 'no-events' ]));\n\n      svgAppend(canvas.getActiveLayer(), dragGroup);\n\n      // shapes\n      addPreviewGfx(movingShapes, dragGroup);\n\n      // connections\n      var movingConnections = context.movingConnections = elementRegistry.filter(function(element) {\n        var sourceIsMoving = false;\n\n        forEach(movingShapes, function(shape) {\n          forEach(shape.outgoing, function(connection) {\n            if (element === connection) {\n              sourceIsMoving = true;\n            }\n          });\n        });\n\n        var targetIsMoving = false;\n\n        forEach(movingShapes, function(shape) {\n          forEach(shape.incoming, function(connection) {\n            if (element === connection) {\n              targetIsMoving = true;\n            }\n          });\n        });\n\n        var sourceIsResizing = false;\n\n        forEach(resizingShapes, function(shape) {\n          forEach(shape.outgoing, function(connection) {\n            if (element === connection) {\n              sourceIsResizing = true;\n            }\n          });\n        });\n\n        var targetIsResizing = false;\n\n        forEach(resizingShapes, function(shape) {\n          forEach(shape.incoming, function(connection) {\n            if (element === connection) {\n              targetIsResizing = true;\n            }\n          });\n        });\n\n        return isConnection(element)\n          && (sourceIsMoving || sourceIsResizing)\n          && (targetIsMoving || targetIsResizing);\n      });\n\n\n      addPreviewGfx(movingConnections, dragGroup);\n\n      context.dragGroup = dragGroup;\n    }\n\n    if (!context.frameGroup) {\n      var frameGroup = svgCreate('g');\n      svgAttr(frameGroup, styles.cls('djs-frame-group', [ 'no-events' ]));\n\n      svgAppend(canvas.getActiveLayer(), frameGroup);\n\n      var frames = [];\n\n      forEach(resizingShapes, function(shape) {\n        var frame = previewSupport.addFrame(shape, frameGroup);\n\n        var initialBounds = frame.getBBox();\n\n        frames.push({\n          element: frame,\n          initialBounds: initialBounds\n        });\n\n        canvas.addMarker(shape, MARKER_RESIZING);\n      });\n\n      context.frameGroup = frameGroup;\n      context.frames = frames;\n    }\n\n    var orientation = {\n      x: 'M' + event.x + ', -10000 L' + event.x + ', 10000',\n      y: 'M -10000, ' + event.y + ' L 10000, ' + event.y\n    };\n\n    svgAttr(line, { d: orientation[ axis ] });\n\n    var opposite = { x: 'y', y: 'x' };\n    var delta = { x: event.dx, y: event.dy };\n    delta[ opposite[ context.axis ] ] = 0;\n\n    // update move previews\n    translate(context.dragGroup, delta.x, delta.y);\n\n    // update resize previews\n    forEach(context.frames, function(frame) {\n      var element = frame.element,\n          initialBounds = frame.initialBounds,\n          width,\n          height;\n\n      if (context.direction === 'e') {\n        svgAttr(element, {\n          width: max(initialBounds.width + delta.x, 5)\n        });\n      } else {\n        width = max(initialBounds.width - delta.x, 5);\n\n        svgAttr(element, {\n          width: width,\n          x: initialBounds.x + initialBounds.width - width\n        });\n      }\n\n      if (context.direction === 's') {\n        svgAttr(element, {\n          height: max(initialBounds.height + delta.y, 5)\n        });\n      } else {\n        height = max(initialBounds.height - delta.y, 5);\n\n        svgAttr(element, {\n          height: height,\n          y: initialBounds.y + initialBounds.height - height\n        });\n      }\n    });\n\n  });\n\n  // remove move/resize previews\n  eventBus.on('spaceTool.cleanup', function(event) {\n\n    var context = event.context,\n        movingShapes = context.movingShapes,\n        movingConnections = context.movingConnections,\n        resizingShapes = context.resizingShapes,\n        line = context.line,\n        dragGroup = context.dragGroup,\n        frameGroup = context.frameGroup;\n\n    // moving shapes\n    forEach(movingShapes, function(shape) {\n      canvas.removeMarker(shape, MARKER_DRAGGING);\n    });\n\n    // moving connections\n    forEach(movingConnections, function(connection) {\n      canvas.removeMarker(connection, MARKER_DRAGGING);\n    });\n\n    if (dragGroup) {\n      svgRemove(line);\n      svgRemove(dragGroup);\n    }\n\n    forEach(resizingShapes, function(shape) {\n      canvas.removeMarker(shape, MARKER_RESIZING);\n    });\n\n    if (frameGroup) {\n      svgRemove(frameGroup);\n    }\n  });\n}\n\nSpaceToolPreview.$inject = [\n  'eventBus',\n  'elementRegistry',\n  'canvas',\n  'styles',\n  'previewSupport'\n];\n\n\n// helpers //////////////////////\n\n/**\n * Checks if an element is a connection.\n */\nfunction isConnection(element) {\n  return element.waypoints;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}