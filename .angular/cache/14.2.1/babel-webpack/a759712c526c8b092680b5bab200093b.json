{"ast":null,"code":"import { every, find, forEach, some } from 'min-dash';\nimport inherits from 'inherits-browser';\nimport { is, getBusinessObject } from '../../util/ModelUtil';\nimport { getParent, isAny } from '../modeling/util/ModelingUtil';\nimport { isLabel } from '../../util/LabelUtil';\nimport { isExpanded, isEventSubProcess, isInterrupting, hasErrorEventDefinition, hasEscalationEventDefinition, hasCompensateEventDefinition } from '../../util/DiUtil';\nimport RuleProvider from 'diagram-js/lib/features/rules/RuleProvider';\nimport { getBoundaryAttachment as isBoundaryAttachment } from '../snapping/BpmnSnappingUtil';\n/**\n * BPMN specific modeling rule\n */\n\nexport default function BpmnRules(eventBus) {\n  RuleProvider.call(this, eventBus);\n}\ninherits(BpmnRules, RuleProvider);\nBpmnRules.$inject = ['eventBus'];\n\nBpmnRules.prototype.init = function () {\n  this.addRule('connection.start', function (context) {\n    var source = context.source;\n    return canStartConnection(source);\n  });\n  this.addRule('connection.create', function (context) {\n    var source = context.source,\n        target = context.target,\n        hints = context.hints || {},\n        targetParent = hints.targetParent,\n        targetAttach = hints.targetAttach; // don't allow incoming connections on\n    // newly created boundary events\n    // to boundary events\n\n    if (targetAttach) {\n      return false;\n    } // temporarily set target parent for scoping\n    // checks to work\n\n\n    if (targetParent) {\n      target.parent = targetParent;\n    }\n\n    try {\n      return canConnect(source, target);\n    } finally {\n      // unset temporary target parent\n      if (targetParent) {\n        target.parent = null;\n      }\n    }\n  });\n  this.addRule('connection.reconnect', function (context) {\n    var connection = context.connection,\n        source = context.source,\n        target = context.target;\n    return canConnect(source, target, connection);\n  });\n  this.addRule('connection.updateWaypoints', function (context) {\n    return {\n      type: context.connection.type\n    };\n  });\n  this.addRule('shape.resize', function (context) {\n    var shape = context.shape,\n        newBounds = context.newBounds;\n    return canResize(shape, newBounds);\n  });\n  this.addRule('elements.create', function (context) {\n    var elements = context.elements,\n        position = context.position,\n        target = context.target;\n\n    if (isConnection(target) && !canInsert(elements, target, position)) {\n      return false;\n    }\n\n    return every(elements, function (element) {\n      if (isConnection(element)) {\n        return canConnect(element.source, element.target, element);\n      }\n\n      if (element.host) {\n        return canAttach(element, element.host, null, position);\n      }\n\n      return canCreate(element, target, null, position);\n    });\n  });\n  this.addRule('elements.move', function (context) {\n    var target = context.target,\n        shapes = context.shapes,\n        position = context.position;\n    return canAttach(shapes, target, null, position) || canReplace(shapes, target, position) || canMove(shapes, target, position) || canInsert(shapes, target, position);\n  });\n  this.addRule('shape.create', function (context) {\n    return canCreate(context.shape, context.target, context.source, context.position);\n  });\n  this.addRule('shape.attach', function (context) {\n    return canAttach(context.shape, context.target, null, context.position);\n  });\n  this.addRule('element.copy', function (context) {\n    var element = context.element,\n        elements = context.elements;\n    return canCopy(elements, element);\n  });\n};\n\nBpmnRules.prototype.canConnectMessageFlow = canConnectMessageFlow;\nBpmnRules.prototype.canConnectSequenceFlow = canConnectSequenceFlow;\nBpmnRules.prototype.canConnectDataAssociation = canConnectDataAssociation;\nBpmnRules.prototype.canConnectAssociation = canConnectAssociation;\nBpmnRules.prototype.canMove = canMove;\nBpmnRules.prototype.canAttach = canAttach;\nBpmnRules.prototype.canReplace = canReplace;\nBpmnRules.prototype.canDrop = canDrop;\nBpmnRules.prototype.canInsert = canInsert;\nBpmnRules.prototype.canCreate = canCreate;\nBpmnRules.prototype.canConnect = canConnect;\nBpmnRules.prototype.canResize = canResize;\nBpmnRules.prototype.canCopy = canCopy;\n/**\n * Utility functions for rule checking\n */\n\n/**\n * Checks if given element can be used for starting connection.\n *\n * @param  {Element} source\n * @return {boolean}\n */\n\nfunction canStartConnection(element) {\n  if (nonExistingOrLabel(element)) {\n    return null;\n  }\n\n  return isAny(element, ['bpmn:FlowNode', 'bpmn:InteractionNode', 'bpmn:DataObjectReference', 'bpmn:DataStoreReference', 'bpmn:Group', 'bpmn:TextAnnotation']);\n}\n\nfunction nonExistingOrLabel(element) {\n  return !element || isLabel(element);\n}\n\nfunction isSame(a, b) {\n  return a === b;\n}\n\nfunction getOrganizationalParent(element) {\n  do {\n    if (is(element, 'bpmn:Process')) {\n      return getBusinessObject(element);\n    }\n\n    if (is(element, 'bpmn:Participant')) {\n      return getBusinessObject(element).processRef || getBusinessObject(element);\n    }\n  } while (element = element.parent);\n}\n\nfunction isTextAnnotation(element) {\n  return is(element, 'bpmn:TextAnnotation');\n}\n\nfunction isGroup(element) {\n  return is(element, 'bpmn:Group') && !element.labelTarget;\n}\n\nfunction isCompensationBoundary(element) {\n  return is(element, 'bpmn:BoundaryEvent') && hasEventDefinition(element, 'bpmn:CompensateEventDefinition');\n}\n\nfunction isForCompensation(e) {\n  return getBusinessObject(e).isForCompensation;\n}\n\nfunction isSameOrganization(a, b) {\n  var parentA = getOrganizationalParent(a),\n      parentB = getOrganizationalParent(b);\n  return parentA === parentB;\n}\n\nfunction isMessageFlowSource(element) {\n  return is(element, 'bpmn:InteractionNode') && !is(element, 'bpmn:BoundaryEvent') && (!is(element, 'bpmn:Event') || is(element, 'bpmn:ThrowEvent') && hasEventDefinitionOrNone(element, 'bpmn:MessageEventDefinition'));\n}\n\nfunction isMessageFlowTarget(element) {\n  return is(element, 'bpmn:InteractionNode') && !isForCompensation(element) && (!is(element, 'bpmn:Event') || is(element, 'bpmn:CatchEvent') && hasEventDefinitionOrNone(element, 'bpmn:MessageEventDefinition')) && !(is(element, 'bpmn:BoundaryEvent') && !hasEventDefinition(element, 'bpmn:MessageEventDefinition'));\n}\n\nfunction getScopeParent(element) {\n  var parent = element;\n\n  while (parent = parent.parent) {\n    if (is(parent, 'bpmn:FlowElementsContainer')) {\n      return getBusinessObject(parent);\n    }\n\n    if (is(parent, 'bpmn:Participant')) {\n      return getBusinessObject(parent).processRef;\n    }\n  }\n\n  return null;\n}\n\nfunction isSameScope(a, b) {\n  var scopeParentA = getScopeParent(a),\n      scopeParentB = getScopeParent(b);\n  return scopeParentA === scopeParentB;\n}\n\nfunction hasEventDefinition(element, eventDefinition) {\n  var bo = getBusinessObject(element);\n  return !!find(bo.eventDefinitions || [], function (definition) {\n    return is(definition, eventDefinition);\n  });\n}\n\nfunction hasEventDefinitionOrNone(element, eventDefinition) {\n  var bo = getBusinessObject(element);\n  return (bo.eventDefinitions || []).every(function (definition) {\n    return is(definition, eventDefinition);\n  });\n}\n\nfunction isSequenceFlowSource(element) {\n  return is(element, 'bpmn:FlowNode') && !is(element, 'bpmn:EndEvent') && !isEventSubProcess(element) && !(is(element, 'bpmn:IntermediateThrowEvent') && hasEventDefinition(element, 'bpmn:LinkEventDefinition')) && !isCompensationBoundary(element) && !isForCompensation(element);\n}\n\nfunction isSequenceFlowTarget(element) {\n  return is(element, 'bpmn:FlowNode') && !is(element, 'bpmn:StartEvent') && !is(element, 'bpmn:BoundaryEvent') && !isEventSubProcess(element) && !(is(element, 'bpmn:IntermediateCatchEvent') && hasEventDefinition(element, 'bpmn:LinkEventDefinition')) && !isForCompensation(element);\n}\n\nfunction isEventBasedTarget(element) {\n  return is(element, 'bpmn:ReceiveTask') || is(element, 'bpmn:IntermediateCatchEvent') && (hasEventDefinition(element, 'bpmn:MessageEventDefinition') || hasEventDefinition(element, 'bpmn:TimerEventDefinition') || hasEventDefinition(element, 'bpmn:ConditionalEventDefinition') || hasEventDefinition(element, 'bpmn:SignalEventDefinition'));\n}\n\nfunction isConnection(element) {\n  return element.waypoints;\n}\n\nfunction getParents(element) {\n  var parents = [];\n\n  while (element) {\n    element = element.parent;\n\n    if (element) {\n      parents.push(element);\n    }\n  }\n\n  return parents;\n}\n\nfunction isParent(possibleParent, element) {\n  var allParents = getParents(element);\n  return allParents.indexOf(possibleParent) !== -1;\n}\n\nfunction canConnect(source, target, connection) {\n  if (nonExistingOrLabel(source) || nonExistingOrLabel(target)) {\n    return null;\n  }\n\n  if (!is(connection, 'bpmn:DataAssociation')) {\n    if (canConnectMessageFlow(source, target)) {\n      return {\n        type: 'bpmn:MessageFlow'\n      };\n    }\n\n    if (canConnectSequenceFlow(source, target)) {\n      return {\n        type: 'bpmn:SequenceFlow'\n      };\n    }\n  }\n\n  var connectDataAssociation = canConnectDataAssociation(source, target);\n\n  if (connectDataAssociation) {\n    return connectDataAssociation;\n  }\n\n  if (isCompensationBoundary(source) && isForCompensation(target)) {\n    return {\n      type: 'bpmn:Association',\n      associationDirection: 'One'\n    };\n  }\n\n  if (canConnectAssociation(source, target)) {\n    return {\n      type: 'bpmn:Association'\n    };\n  }\n\n  return false;\n}\n/**\n * Can an element be dropped into the target element\n *\n * @return {boolean}\n */\n\n\nfunction canDrop(element, target, position) {\n  // can move labels and groups everywhere\n  if (isLabel(element) || isGroup(element)) {\n    return true;\n  } // disallow to create elements on collapsed pools\n\n\n  if (is(target, 'bpmn:Participant') && !isExpanded(target)) {\n    return false;\n  } // allow to create new participants on\n  // existing collaboration and process diagrams\n\n\n  if (is(element, 'bpmn:Participant')) {\n    return is(target, 'bpmn:Process') || is(target, 'bpmn:Collaboration');\n  } // allow moving DataInput / DataOutput within its original container only\n\n\n  if (isAny(element, ['bpmn:DataInput', 'bpmn:DataOutput'])) {\n    if (element.parent) {\n      return target === element.parent;\n    }\n  } // allow creating lanes on participants and other lanes only\n\n\n  if (is(element, 'bpmn:Lane')) {\n    return is(target, 'bpmn:Participant') || is(target, 'bpmn:Lane');\n  } // disallow dropping boundary events which cannot replace with intermediate event\n\n\n  if (is(element, 'bpmn:BoundaryEvent') && !isDroppableBoundaryEvent(element)) {\n    return false;\n  } // drop flow elements onto flow element containers\n  // and participants\n\n\n  if (is(element, 'bpmn:FlowElement') && !is(element, 'bpmn:DataStoreReference')) {\n    if (is(target, 'bpmn:FlowElementsContainer')) {\n      return isExpanded(target);\n    }\n\n    return isAny(target, ['bpmn:Participant', 'bpmn:Lane']);\n  } // disallow dropping data store reference if there is no process to append to\n\n\n  if (is(element, 'bpmn:DataStoreReference') && is(target, 'bpmn:Collaboration')) {\n    return some(getBusinessObject(target).get('participants'), function (participant) {\n      return !!participant.get('processRef');\n    });\n  } // account for the fact that data associations are always\n  // rendered and moved to top (Process or Collaboration level)\n  //\n  // artifacts may be placed wherever, too\n\n\n  if (isAny(element, ['bpmn:Artifact', 'bpmn:DataAssociation', 'bpmn:DataStoreReference'])) {\n    return isAny(target, ['bpmn:Collaboration', 'bpmn:Lane', 'bpmn:Participant', 'bpmn:Process', 'bpmn:SubProcess']);\n  }\n\n  if (is(element, 'bpmn:MessageFlow')) {\n    return is(target, 'bpmn:Collaboration') || element.source.parent == target || element.target.parent == target;\n  }\n\n  return false;\n}\n\nfunction isDroppableBoundaryEvent(event) {\n  return getBusinessObject(event).cancelActivity && (hasNoEventDefinition(event) || hasCommonBoundaryIntermediateEventDefinition(event));\n}\n\nfunction isBoundaryEvent(element) {\n  return !isLabel(element) && is(element, 'bpmn:BoundaryEvent');\n}\n\nfunction isLane(element) {\n  return is(element, 'bpmn:Lane');\n}\n/**\n * We treat IntermediateThrowEvents as boundary events during create,\n * this must be reflected in the rules.\n */\n\n\nfunction isBoundaryCandidate(element) {\n  if (isBoundaryEvent(element)) {\n    return true;\n  }\n\n  if (is(element, 'bpmn:IntermediateThrowEvent') && hasNoEventDefinition(element)) {\n    return true;\n  }\n\n  return is(element, 'bpmn:IntermediateCatchEvent') && hasCommonBoundaryIntermediateEventDefinition(element);\n}\n\nfunction hasNoEventDefinition(element) {\n  var bo = getBusinessObject(element);\n  return bo && !(bo.eventDefinitions && bo.eventDefinitions.length);\n}\n\nfunction hasCommonBoundaryIntermediateEventDefinition(element) {\n  return hasOneOfEventDefinitions(element, ['bpmn:MessageEventDefinition', 'bpmn:TimerEventDefinition', 'bpmn:SignalEventDefinition', 'bpmn:ConditionalEventDefinition']);\n}\n\nfunction hasOneOfEventDefinitions(element, eventDefinitions) {\n  return eventDefinitions.some(function (definition) {\n    return hasEventDefinition(element, definition);\n  });\n}\n\nfunction isReceiveTaskAfterEventBasedGateway(element) {\n  return is(element, 'bpmn:ReceiveTask') && find(element.incoming, function (incoming) {\n    return is(incoming.source, 'bpmn:EventBasedGateway');\n  });\n}\n\nfunction canAttach(elements, target, source, position) {\n  if (!Array.isArray(elements)) {\n    elements = [elements];\n  } // only (re-)attach one element at a time\n\n\n  if (elements.length !== 1) {\n    return false;\n  }\n\n  var element = elements[0]; // do not attach labels\n\n  if (isLabel(element)) {\n    return false;\n  } // only handle boundary events\n\n\n  if (!isBoundaryCandidate(element)) {\n    return false;\n  } // disallow drop on event sub processes\n\n\n  if (isEventSubProcess(target)) {\n    return false;\n  } // only allow drop on non compensation activities\n\n\n  if (!is(target, 'bpmn:Activity') || isForCompensation(target)) {\n    return false;\n  } // only attach to subprocess border\n\n\n  if (position && !isBoundaryAttachment(position, target)) {\n    return false;\n  } // do not attach on receive tasks after event based gateways\n\n\n  if (isReceiveTaskAfterEventBasedGateway(target)) {\n    return false;\n  }\n\n  return 'attach';\n}\n/**\n * Defines how to replace elements for a given target.\n *\n * Returns an array containing all elements which will be replaced.\n *\n * @example\n *\n *  [{ id: 'IntermediateEvent_2',\n *     type: 'bpmn:StartEvent'\n *   },\n *   { id: 'IntermediateEvent_5',\n *     type: 'bpmn:EndEvent'\n *   }]\n *\n * @param  {Array} elements\n * @param  {Object} target\n *\n * @return {Object} an object containing all elements which have to be replaced\n */\n\n\nfunction canReplace(elements, target, position) {\n  if (!target) {\n    return false;\n  }\n\n  var canExecute = {\n    replacements: []\n  };\n  forEach(elements, function (element) {\n    if (!isEventSubProcess(target)) {\n      if (is(element, 'bpmn:StartEvent') && element.type !== 'label' && canDrop(element, target)) {\n        // replace a non-interrupting start event by a blank interrupting start event\n        // when the target is not an event sub process\n        if (!isInterrupting(element)) {\n          canExecute.replacements.push({\n            oldElementId: element.id,\n            newElementType: 'bpmn:StartEvent'\n          });\n        } // replace an error/escalation/compensate start event by a blank interrupting start event\n        // when the target is not an event sub process\n\n\n        if (hasErrorEventDefinition(element) || hasEscalationEventDefinition(element) || hasCompensateEventDefinition(element)) {\n          canExecute.replacements.push({\n            oldElementId: element.id,\n            newElementType: 'bpmn:StartEvent'\n          });\n        } // replace a typed start event by a blank interrupting start event\n        // when the target is a sub process but not an event sub process\n\n\n        if (hasOneOfEventDefinitions(element, ['bpmn:MessageEventDefinition', 'bpmn:TimerEventDefinition', 'bpmn:SignalEventDefinition', 'bpmn:ConditionalEventDefinition']) && is(target, 'bpmn:SubProcess')) {\n          canExecute.replacements.push({\n            oldElementId: element.id,\n            newElementType: 'bpmn:StartEvent'\n          });\n        }\n      }\n    }\n\n    if (!is(target, 'bpmn:Transaction')) {\n      if (hasEventDefinition(element, 'bpmn:CancelEventDefinition') && element.type !== 'label') {\n        if (is(element, 'bpmn:EndEvent') && canDrop(element, target)) {\n          canExecute.replacements.push({\n            oldElementId: element.id,\n            newElementType: 'bpmn:EndEvent'\n          });\n        }\n\n        if (is(element, 'bpmn:BoundaryEvent') && canAttach(element, target, null, position)) {\n          canExecute.replacements.push({\n            oldElementId: element.id,\n            newElementType: 'bpmn:BoundaryEvent'\n          });\n        }\n      }\n    }\n  });\n  return canExecute.replacements.length ? canExecute : false;\n}\n\nfunction canMove(elements, target) {\n  // do not move selection containing lanes\n  if (some(elements, isLane)) {\n    return false;\n  } // allow default move check to start move operation\n\n\n  if (!target) {\n    return true;\n  }\n\n  return elements.every(function (element) {\n    return canDrop(element, target);\n  });\n}\n\nfunction canCreate(shape, target, source, position) {\n  if (!target) {\n    return false;\n  }\n\n  if (isLabel(shape) || isGroup(shape)) {\n    return true;\n  }\n\n  if (isSame(source, target)) {\n    return false;\n  } // ensure we do not drop the element\n  // into source\n\n\n  if (source && isParent(source, target)) {\n    return false;\n  }\n\n  return canDrop(shape, target, position) || canInsert(shape, target, position);\n}\n\nfunction canResize(shape, newBounds) {\n  if (is(shape, 'bpmn:SubProcess')) {\n    return isExpanded(shape) && (!newBounds || newBounds.width >= 100 && newBounds.height >= 80);\n  }\n\n  if (is(shape, 'bpmn:Lane')) {\n    return !newBounds || newBounds.width >= 130 && newBounds.height >= 60;\n  }\n\n  if (is(shape, 'bpmn:Participant')) {\n    return !newBounds || newBounds.width >= 250 && newBounds.height >= 50;\n  }\n\n  if (isTextAnnotation(shape)) {\n    return true;\n  }\n\n  if (isGroup(shape)) {\n    return true;\n  }\n\n  return false;\n}\n/**\n * Check, whether one side of the relationship\n * is a text annotation.\n */\n\n\nfunction isOneTextAnnotation(source, target) {\n  var sourceTextAnnotation = isTextAnnotation(source),\n      targetTextAnnotation = isTextAnnotation(target);\n  return (sourceTextAnnotation || targetTextAnnotation) && sourceTextAnnotation !== targetTextAnnotation;\n}\n\nfunction canConnectAssociation(source, target) {\n  // compensation boundary events are exception\n  if (isCompensationBoundary(source) && isForCompensation(target)) {\n    return true;\n  } // don't connect parent <-> child\n\n\n  if (isParent(target, source) || isParent(source, target)) {\n    return false;\n  } // allow connection of associations between <!TextAnnotation> and <TextAnnotation>\n\n\n  if (isOneTextAnnotation(source, target)) {\n    return true;\n  } // can connect associations where we can connect\n  // data associations, too (!)\n\n\n  return !!canConnectDataAssociation(source, target);\n}\n\nfunction canConnectMessageFlow(source, target) {\n  // during connect user might move mouse out of canvas\n  // https://github.com/bpmn-io/bpmn-js/issues/1033\n  if (getRootElement(source) && !getRootElement(target)) {\n    return false;\n  }\n\n  return isMessageFlowSource(source) && isMessageFlowTarget(target) && !isSameOrganization(source, target);\n}\n\nfunction canConnectSequenceFlow(source, target) {\n  if (isEventBasedTarget(target) && target.incoming.length > 0 && areOutgoingEventBasedGatewayConnections(target.incoming) && !is(source, 'bpmn:EventBasedGateway')) {\n    return false;\n  }\n\n  return isSequenceFlowSource(source) && isSequenceFlowTarget(target) && isSameScope(source, target) && !(is(source, 'bpmn:EventBasedGateway') && !isEventBasedTarget(target));\n}\n\nfunction canConnectDataAssociation(source, target) {\n  if (isAny(source, ['bpmn:DataObjectReference', 'bpmn:DataStoreReference']) && isAny(target, ['bpmn:Activity', 'bpmn:ThrowEvent'])) {\n    return {\n      type: 'bpmn:DataInputAssociation'\n    };\n  }\n\n  if (isAny(target, ['bpmn:DataObjectReference', 'bpmn:DataStoreReference']) && isAny(source, ['bpmn:Activity', 'bpmn:CatchEvent'])) {\n    return {\n      type: 'bpmn:DataOutputAssociation'\n    };\n  }\n\n  return false;\n}\n\nfunction canInsert(shape, flow, position) {\n  if (!flow) {\n    return false;\n  }\n\n  if (Array.isArray(shape)) {\n    if (shape.length !== 1) {\n      return false;\n    }\n\n    shape = shape[0];\n  }\n\n  if (flow.source === shape || flow.target === shape) {\n    return false;\n  } // return true if we can drop on the\n  // underlying flow parent\n  //\n  // at this point we are not really able to talk\n  // about connection rules (yet)\n\n\n  return isAny(flow, ['bpmn:SequenceFlow', 'bpmn:MessageFlow']) && !isLabel(flow) && is(shape, 'bpmn:FlowNode') && !is(shape, 'bpmn:BoundaryEvent') && canDrop(shape, flow.parent, position);\n}\n\nfunction includes(elements, element) {\n  return elements && element && elements.indexOf(element) !== -1;\n}\n\nfunction canCopy(elements, element) {\n  if (isLabel(element)) {\n    return true;\n  }\n\n  if (is(element, 'bpmn:Lane') && !includes(elements, element.parent)) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction isOutgoingEventBasedGatewayConnection(connection) {\n  if (connection && connection.source) {\n    return is(connection.source, 'bpmn:EventBasedGateway');\n  }\n}\n\nfunction areOutgoingEventBasedGatewayConnections(connections) {\n  connections = connections || [];\n  return connections.some(isOutgoingEventBasedGatewayConnection);\n}\n\nfunction getRootElement(element) {\n  return getParent(element, 'bpmn:Process') || getParent(element, 'bpmn:Collaboration');\n}","map":{"version":3,"names":["every","find","forEach","some","inherits","is","getBusinessObject","getParent","isAny","isLabel","isExpanded","isEventSubProcess","isInterrupting","hasErrorEventDefinition","hasEscalationEventDefinition","hasCompensateEventDefinition","RuleProvider","getBoundaryAttachment","isBoundaryAttachment","BpmnRules","eventBus","call","$inject","prototype","init","addRule","context","source","canStartConnection","target","hints","targetParent","targetAttach","parent","canConnect","connection","type","shape","newBounds","canResize","elements","position","isConnection","canInsert","element","host","canAttach","canCreate","shapes","canReplace","canMove","canCopy","canConnectMessageFlow","canConnectSequenceFlow","canConnectDataAssociation","canConnectAssociation","canDrop","nonExistingOrLabel","isSame","a","b","getOrganizationalParent","processRef","isTextAnnotation","isGroup","labelTarget","isCompensationBoundary","hasEventDefinition","isForCompensation","e","isSameOrganization","parentA","parentB","isMessageFlowSource","hasEventDefinitionOrNone","isMessageFlowTarget","getScopeParent","isSameScope","scopeParentA","scopeParentB","eventDefinition","bo","eventDefinitions","definition","isSequenceFlowSource","isSequenceFlowTarget","isEventBasedTarget","waypoints","getParents","parents","push","isParent","possibleParent","allParents","indexOf","connectDataAssociation","associationDirection","isDroppableBoundaryEvent","get","participant","event","cancelActivity","hasNoEventDefinition","hasCommonBoundaryIntermediateEventDefinition","isBoundaryEvent","isLane","isBoundaryCandidate","length","hasOneOfEventDefinitions","isReceiveTaskAfterEventBasedGateway","incoming","Array","isArray","canExecute","replacements","oldElementId","id","newElementType","width","height","isOneTextAnnotation","sourceTextAnnotation","targetTextAnnotation","getRootElement","areOutgoingEventBasedGatewayConnections","flow","includes","isOutgoingEventBasedGatewayConnection","connections"],"sources":["E:/Old_PC/Study/Angular/test-bpm/node_modules/bpmn-js/lib/features/rules/BpmnRules.js"],"sourcesContent":["import {\n  every,\n  find,\n  forEach,\n  some\n} from 'min-dash';\n\nimport inherits from 'inherits-browser';\n\nimport {\n  is,\n  getBusinessObject\n} from '../../util/ModelUtil';\n\nimport {\n  getParent,\n  isAny\n} from '../modeling/util/ModelingUtil';\n\nimport {\n  isLabel\n} from '../../util/LabelUtil';\n\nimport {\n  isExpanded,\n  isEventSubProcess,\n  isInterrupting,\n  hasErrorEventDefinition,\n  hasEscalationEventDefinition,\n  hasCompensateEventDefinition\n} from '../../util/DiUtil';\n\nimport RuleProvider from 'diagram-js/lib/features/rules/RuleProvider';\n\nimport {\n  getBoundaryAttachment as isBoundaryAttachment\n} from '../snapping/BpmnSnappingUtil';\n\n\n/**\n * BPMN specific modeling rule\n */\nexport default function BpmnRules(eventBus) {\n  RuleProvider.call(this, eventBus);\n}\n\ninherits(BpmnRules, RuleProvider);\n\nBpmnRules.$inject = [ 'eventBus' ];\n\nBpmnRules.prototype.init = function() {\n\n  this.addRule('connection.start', function(context) {\n    var source = context.source;\n\n    return canStartConnection(source);\n  });\n\n  this.addRule('connection.create', function(context) {\n    var source = context.source,\n        target = context.target,\n        hints = context.hints || {},\n        targetParent = hints.targetParent,\n        targetAttach = hints.targetAttach;\n\n    // don't allow incoming connections on\n    // newly created boundary events\n    // to boundary events\n    if (targetAttach) {\n      return false;\n    }\n\n    // temporarily set target parent for scoping\n    // checks to work\n    if (targetParent) {\n      target.parent = targetParent;\n    }\n\n    try {\n      return canConnect(source, target);\n    } finally {\n\n      // unset temporary target parent\n      if (targetParent) {\n        target.parent = null;\n      }\n    }\n  });\n\n  this.addRule('connection.reconnect', function(context) {\n\n    var connection = context.connection,\n        source = context.source,\n        target = context.target;\n\n    return canConnect(source, target, connection);\n  });\n\n  this.addRule('connection.updateWaypoints', function(context) {\n    return {\n      type: context.connection.type\n    };\n  });\n\n  this.addRule('shape.resize', function(context) {\n\n    var shape = context.shape,\n        newBounds = context.newBounds;\n\n    return canResize(shape, newBounds);\n  });\n\n  this.addRule('elements.create', function(context) {\n    var elements = context.elements,\n        position = context.position,\n        target = context.target;\n\n    if (isConnection(target) && !canInsert(elements, target, position)) {\n      return false;\n    }\n\n    return every(elements, function(element) {\n      if (isConnection(element)) {\n        return canConnect(element.source, element.target, element);\n      }\n\n      if (element.host) {\n        return canAttach(element, element.host, null, position);\n      }\n\n      return canCreate(element, target, null, position);\n    });\n  });\n\n  this.addRule('elements.move', function(context) {\n\n    var target = context.target,\n        shapes = context.shapes,\n        position = context.position;\n\n    return canAttach(shapes, target, null, position) ||\n           canReplace(shapes, target, position) ||\n           canMove(shapes, target, position) ||\n           canInsert(shapes, target, position);\n  });\n\n  this.addRule('shape.create', function(context) {\n    return canCreate(\n      context.shape,\n      context.target,\n      context.source,\n      context.position\n    );\n  });\n\n  this.addRule('shape.attach', function(context) {\n\n    return canAttach(\n      context.shape,\n      context.target,\n      null,\n      context.position\n    );\n  });\n\n  this.addRule('element.copy', function(context) {\n    var element = context.element,\n        elements = context.elements;\n\n    return canCopy(elements, element);\n  });\n};\n\nBpmnRules.prototype.canConnectMessageFlow = canConnectMessageFlow;\n\nBpmnRules.prototype.canConnectSequenceFlow = canConnectSequenceFlow;\n\nBpmnRules.prototype.canConnectDataAssociation = canConnectDataAssociation;\n\nBpmnRules.prototype.canConnectAssociation = canConnectAssociation;\n\nBpmnRules.prototype.canMove = canMove;\n\nBpmnRules.prototype.canAttach = canAttach;\n\nBpmnRules.prototype.canReplace = canReplace;\n\nBpmnRules.prototype.canDrop = canDrop;\n\nBpmnRules.prototype.canInsert = canInsert;\n\nBpmnRules.prototype.canCreate = canCreate;\n\nBpmnRules.prototype.canConnect = canConnect;\n\nBpmnRules.prototype.canResize = canResize;\n\nBpmnRules.prototype.canCopy = canCopy;\n\n/**\n * Utility functions for rule checking\n */\n\n/**\n * Checks if given element can be used for starting connection.\n *\n * @param  {Element} source\n * @return {boolean}\n */\nfunction canStartConnection(element) {\n  if (nonExistingOrLabel(element)) {\n    return null;\n  }\n\n  return isAny(element, [\n    'bpmn:FlowNode',\n    'bpmn:InteractionNode',\n    'bpmn:DataObjectReference',\n    'bpmn:DataStoreReference',\n    'bpmn:Group',\n    'bpmn:TextAnnotation'\n  ]);\n}\n\nfunction nonExistingOrLabel(element) {\n  return !element || isLabel(element);\n}\n\nfunction isSame(a, b) {\n  return a === b;\n}\n\nfunction getOrganizationalParent(element) {\n\n  do {\n    if (is(element, 'bpmn:Process')) {\n      return getBusinessObject(element);\n    }\n\n    if (is(element, 'bpmn:Participant')) {\n      return (\n        getBusinessObject(element).processRef ||\n        getBusinessObject(element)\n      );\n    }\n  } while ((element = element.parent));\n\n}\n\nfunction isTextAnnotation(element) {\n  return is(element, 'bpmn:TextAnnotation');\n}\n\nfunction isGroup(element) {\n  return is(element, 'bpmn:Group') && !element.labelTarget;\n}\n\nfunction isCompensationBoundary(element) {\n  return is(element, 'bpmn:BoundaryEvent') &&\n         hasEventDefinition(element, 'bpmn:CompensateEventDefinition');\n}\n\nfunction isForCompensation(e) {\n  return getBusinessObject(e).isForCompensation;\n}\n\nfunction isSameOrganization(a, b) {\n  var parentA = getOrganizationalParent(a),\n      parentB = getOrganizationalParent(b);\n\n  return parentA === parentB;\n}\n\nfunction isMessageFlowSource(element) {\n  return (\n    is(element, 'bpmn:InteractionNode') &&\n    !is(element, 'bpmn:BoundaryEvent') && (\n      !is(element, 'bpmn:Event') || (\n        is(element, 'bpmn:ThrowEvent') &&\n        hasEventDefinitionOrNone(element, 'bpmn:MessageEventDefinition')\n      )\n    )\n  );\n}\n\nfunction isMessageFlowTarget(element) {\n  return (\n    is(element, 'bpmn:InteractionNode') &&\n    !isForCompensation(element) && (\n      !is(element, 'bpmn:Event') || (\n        is(element, 'bpmn:CatchEvent') &&\n        hasEventDefinitionOrNone(element, 'bpmn:MessageEventDefinition')\n      )\n    ) && !(\n      is(element, 'bpmn:BoundaryEvent') &&\n      !hasEventDefinition(element, 'bpmn:MessageEventDefinition')\n    )\n  );\n}\n\nfunction getScopeParent(element) {\n\n  var parent = element;\n\n  while ((parent = parent.parent)) {\n\n    if (is(parent, 'bpmn:FlowElementsContainer')) {\n      return getBusinessObject(parent);\n    }\n\n    if (is(parent, 'bpmn:Participant')) {\n      return getBusinessObject(parent).processRef;\n    }\n  }\n\n  return null;\n}\n\nfunction isSameScope(a, b) {\n  var scopeParentA = getScopeParent(a),\n      scopeParentB = getScopeParent(b);\n\n  return scopeParentA === scopeParentB;\n}\n\nfunction hasEventDefinition(element, eventDefinition) {\n  var bo = getBusinessObject(element);\n\n  return !!find(bo.eventDefinitions || [], function(definition) {\n    return is(definition, eventDefinition);\n  });\n}\n\nfunction hasEventDefinitionOrNone(element, eventDefinition) {\n  var bo = getBusinessObject(element);\n\n  return (bo.eventDefinitions || []).every(function(definition) {\n    return is(definition, eventDefinition);\n  });\n}\n\nfunction isSequenceFlowSource(element) {\n  return (\n    is(element, 'bpmn:FlowNode') &&\n    !is(element, 'bpmn:EndEvent') &&\n    !isEventSubProcess(element) &&\n    !(is(element, 'bpmn:IntermediateThrowEvent') &&\n      hasEventDefinition(element, 'bpmn:LinkEventDefinition')\n    ) &&\n    !isCompensationBoundary(element) &&\n    !isForCompensation(element)\n  );\n}\n\nfunction isSequenceFlowTarget(element) {\n  return (\n    is(element, 'bpmn:FlowNode') &&\n    !is(element, 'bpmn:StartEvent') &&\n    !is(element, 'bpmn:BoundaryEvent') &&\n    !isEventSubProcess(element) &&\n    !(is(element, 'bpmn:IntermediateCatchEvent') &&\n      hasEventDefinition(element, 'bpmn:LinkEventDefinition')\n    ) &&\n    !isForCompensation(element)\n  );\n}\n\nfunction isEventBasedTarget(element) {\n  return (\n    is(element, 'bpmn:ReceiveTask') || (\n      is(element, 'bpmn:IntermediateCatchEvent') && (\n        hasEventDefinition(element, 'bpmn:MessageEventDefinition') ||\n        hasEventDefinition(element, 'bpmn:TimerEventDefinition') ||\n        hasEventDefinition(element, 'bpmn:ConditionalEventDefinition') ||\n        hasEventDefinition(element, 'bpmn:SignalEventDefinition')\n      )\n    )\n  );\n}\n\nfunction isConnection(element) {\n  return element.waypoints;\n}\n\nfunction getParents(element) {\n\n  var parents = [];\n\n  while (element) {\n    element = element.parent;\n\n    if (element) {\n      parents.push(element);\n    }\n  }\n\n  return parents;\n}\n\nfunction isParent(possibleParent, element) {\n  var allParents = getParents(element);\n  return allParents.indexOf(possibleParent) !== -1;\n}\n\nfunction canConnect(source, target, connection) {\n\n  if (nonExistingOrLabel(source) || nonExistingOrLabel(target)) {\n    return null;\n  }\n\n  if (!is(connection, 'bpmn:DataAssociation')) {\n\n    if (canConnectMessageFlow(source, target)) {\n      return { type: 'bpmn:MessageFlow' };\n    }\n\n    if (canConnectSequenceFlow(source, target)) {\n      return { type: 'bpmn:SequenceFlow' };\n    }\n  }\n\n  var connectDataAssociation = canConnectDataAssociation(source, target);\n\n  if (connectDataAssociation) {\n    return connectDataAssociation;\n  }\n\n  if (isCompensationBoundary(source) && isForCompensation(target)) {\n    return {\n      type: 'bpmn:Association',\n      associationDirection: 'One'\n    };\n  }\n\n  if (canConnectAssociation(source, target)) {\n\n    return {\n      type: 'bpmn:Association'\n    };\n  }\n\n  return false;\n}\n\n/**\n * Can an element be dropped into the target element\n *\n * @return {boolean}\n */\nfunction canDrop(element, target, position) {\n\n  // can move labels and groups everywhere\n  if (isLabel(element) || isGroup(element)) {\n    return true;\n  }\n\n\n  // disallow to create elements on collapsed pools\n  if (is(target, 'bpmn:Participant') && !isExpanded(target)) {\n    return false;\n  }\n\n  // allow to create new participants on\n  // existing collaboration and process diagrams\n  if (is(element, 'bpmn:Participant')) {\n    return is(target, 'bpmn:Process') || is(target, 'bpmn:Collaboration');\n  }\n\n  // allow moving DataInput / DataOutput within its original container only\n  if (isAny(element, [ 'bpmn:DataInput', 'bpmn:DataOutput' ])) {\n\n    if (element.parent) {\n      return target === element.parent;\n    }\n  }\n\n  // allow creating lanes on participants and other lanes only\n  if (is(element, 'bpmn:Lane')) {\n    return is(target, 'bpmn:Participant') || is(target, 'bpmn:Lane');\n  }\n\n  // disallow dropping boundary events which cannot replace with intermediate event\n  if (is(element, 'bpmn:BoundaryEvent') && !isDroppableBoundaryEvent(element)) {\n    return false;\n  }\n\n  // drop flow elements onto flow element containers\n  // and participants\n  if (is(element, 'bpmn:FlowElement') && !is(element, 'bpmn:DataStoreReference')) {\n    if (is(target, 'bpmn:FlowElementsContainer')) {\n      return isExpanded(target);\n    }\n\n    return isAny(target, [ 'bpmn:Participant', 'bpmn:Lane' ]);\n  }\n\n  // disallow dropping data store reference if there is no process to append to\n  if (is(element, 'bpmn:DataStoreReference') && is(target, 'bpmn:Collaboration')) {\n    return some(getBusinessObject(target).get('participants'), function(participant) {\n      return !!participant.get('processRef');\n    });\n  }\n\n  // account for the fact that data associations are always\n  // rendered and moved to top (Process or Collaboration level)\n  //\n  // artifacts may be placed wherever, too\n  if (isAny(element, [ 'bpmn:Artifact', 'bpmn:DataAssociation', 'bpmn:DataStoreReference' ])) {\n    return isAny(target, [\n      'bpmn:Collaboration',\n      'bpmn:Lane',\n      'bpmn:Participant',\n      'bpmn:Process',\n      'bpmn:SubProcess' ]);\n  }\n\n  if (is(element, 'bpmn:MessageFlow')) {\n    return is(target, 'bpmn:Collaboration')\n      || element.source.parent == target\n      || element.target.parent == target;\n  }\n\n  return false;\n}\n\nfunction isDroppableBoundaryEvent(event) {\n  return getBusinessObject(event).cancelActivity && (\n    hasNoEventDefinition(event) || hasCommonBoundaryIntermediateEventDefinition(event)\n  );\n}\n\nfunction isBoundaryEvent(element) {\n  return !isLabel(element) && is(element, 'bpmn:BoundaryEvent');\n}\n\nfunction isLane(element) {\n  return is(element, 'bpmn:Lane');\n}\n\n/**\n * We treat IntermediateThrowEvents as boundary events during create,\n * this must be reflected in the rules.\n */\nfunction isBoundaryCandidate(element) {\n  if (isBoundaryEvent(element)) {\n    return true;\n  }\n\n  if (is(element, 'bpmn:IntermediateThrowEvent') && hasNoEventDefinition(element)) {\n    return true;\n  }\n\n  return (\n    is(element, 'bpmn:IntermediateCatchEvent') &&\n    hasCommonBoundaryIntermediateEventDefinition(element)\n  );\n}\n\nfunction hasNoEventDefinition(element) {\n  var bo = getBusinessObject(element);\n\n  return bo && !(bo.eventDefinitions && bo.eventDefinitions.length);\n}\n\nfunction hasCommonBoundaryIntermediateEventDefinition(element) {\n  return hasOneOfEventDefinitions(element, [\n    'bpmn:MessageEventDefinition',\n    'bpmn:TimerEventDefinition',\n    'bpmn:SignalEventDefinition',\n    'bpmn:ConditionalEventDefinition'\n  ]);\n}\n\nfunction hasOneOfEventDefinitions(element, eventDefinitions) {\n  return eventDefinitions.some(function(definition) {\n    return hasEventDefinition(element, definition);\n  });\n}\n\nfunction isReceiveTaskAfterEventBasedGateway(element) {\n  return (\n    is(element, 'bpmn:ReceiveTask') &&\n    find(element.incoming, function(incoming) {\n      return is(incoming.source, 'bpmn:EventBasedGateway');\n    })\n  );\n}\n\n\nfunction canAttach(elements, target, source, position) {\n\n  if (!Array.isArray(elements)) {\n    elements = [ elements ];\n  }\n\n  // only (re-)attach one element at a time\n  if (elements.length !== 1) {\n    return false;\n  }\n\n  var element = elements[0];\n\n  // do not attach labels\n  if (isLabel(element)) {\n    return false;\n  }\n\n  // only handle boundary events\n  if (!isBoundaryCandidate(element)) {\n    return false;\n  }\n\n  // disallow drop on event sub processes\n  if (isEventSubProcess(target)) {\n    return false;\n  }\n\n  // only allow drop on non compensation activities\n  if (!is(target, 'bpmn:Activity') || isForCompensation(target)) {\n    return false;\n  }\n\n  // only attach to subprocess border\n  if (position && !isBoundaryAttachment(position, target)) {\n    return false;\n  }\n\n  // do not attach on receive tasks after event based gateways\n  if (isReceiveTaskAfterEventBasedGateway(target)) {\n    return false;\n  }\n\n  return 'attach';\n}\n\n\n/**\n * Defines how to replace elements for a given target.\n *\n * Returns an array containing all elements which will be replaced.\n *\n * @example\n *\n *  [{ id: 'IntermediateEvent_2',\n *     type: 'bpmn:StartEvent'\n *   },\n *   { id: 'IntermediateEvent_5',\n *     type: 'bpmn:EndEvent'\n *   }]\n *\n * @param  {Array} elements\n * @param  {Object} target\n *\n * @return {Object} an object containing all elements which have to be replaced\n */\nfunction canReplace(elements, target, position) {\n\n  if (!target) {\n    return false;\n  }\n\n  var canExecute = {\n    replacements: []\n  };\n\n  forEach(elements, function(element) {\n\n    if (!isEventSubProcess(target)) {\n\n      if (is(element, 'bpmn:StartEvent') &&\n          element.type !== 'label' &&\n          canDrop(element, target)) {\n\n        // replace a non-interrupting start event by a blank interrupting start event\n        // when the target is not an event sub process\n        if (!isInterrupting(element)) {\n          canExecute.replacements.push({\n            oldElementId: element.id,\n            newElementType: 'bpmn:StartEvent'\n          });\n        }\n\n        // replace an error/escalation/compensate start event by a blank interrupting start event\n        // when the target is not an event sub process\n        if (hasErrorEventDefinition(element) ||\n            hasEscalationEventDefinition(element) ||\n            hasCompensateEventDefinition(element)) {\n          canExecute.replacements.push({\n            oldElementId: element.id,\n            newElementType: 'bpmn:StartEvent'\n          });\n        }\n\n        // replace a typed start event by a blank interrupting start event\n        // when the target is a sub process but not an event sub process\n        if (hasOneOfEventDefinitions(element,\n          [\n            'bpmn:MessageEventDefinition',\n            'bpmn:TimerEventDefinition',\n            'bpmn:SignalEventDefinition',\n            'bpmn:ConditionalEventDefinition'\n          ]) &&\n            is(target, 'bpmn:SubProcess')) {\n          canExecute.replacements.push({\n            oldElementId: element.id,\n            newElementType: 'bpmn:StartEvent'\n          });\n        }\n      }\n    }\n\n    if (!is(target, 'bpmn:Transaction')) {\n      if (hasEventDefinition(element, 'bpmn:CancelEventDefinition') &&\n          element.type !== 'label') {\n\n        if (is(element, 'bpmn:EndEvent') && canDrop(element, target)) {\n          canExecute.replacements.push({\n            oldElementId: element.id,\n            newElementType: 'bpmn:EndEvent'\n          });\n        }\n\n        if (is(element, 'bpmn:BoundaryEvent') && canAttach(element, target, null, position)) {\n          canExecute.replacements.push({\n            oldElementId: element.id,\n            newElementType: 'bpmn:BoundaryEvent'\n          });\n        }\n      }\n    }\n  });\n\n  return canExecute.replacements.length ? canExecute : false;\n}\n\nfunction canMove(elements, target) {\n\n  // do not move selection containing lanes\n  if (some(elements, isLane)) {\n    return false;\n  }\n\n  // allow default move check to start move operation\n  if (!target) {\n    return true;\n  }\n\n  return elements.every(function(element) {\n    return canDrop(element, target);\n  });\n}\n\nfunction canCreate(shape, target, source, position) {\n\n  if (!target) {\n    return false;\n  }\n\n  if (isLabel(shape) || isGroup(shape)) {\n    return true;\n  }\n\n  if (isSame(source, target)) {\n    return false;\n  }\n\n  // ensure we do not drop the element\n  // into source\n  if (source && isParent(source, target)) {\n    return false;\n  }\n\n  return canDrop(shape, target, position) || canInsert(shape, target, position);\n}\n\nfunction canResize(shape, newBounds) {\n  if (is(shape, 'bpmn:SubProcess')) {\n    return (\n      isExpanded(shape) && (\n        !newBounds || (newBounds.width >= 100 && newBounds.height >= 80)\n      )\n    );\n  }\n\n  if (is(shape, 'bpmn:Lane')) {\n    return !newBounds || (newBounds.width >= 130 && newBounds.height >= 60);\n  }\n\n  if (is(shape, 'bpmn:Participant')) {\n    return !newBounds || (newBounds.width >= 250 && newBounds.height >= 50);\n  }\n\n  if (isTextAnnotation(shape)) {\n    return true;\n  }\n\n  if (isGroup(shape)) {\n    return true;\n  }\n\n  return false;\n}\n\n/**\n * Check, whether one side of the relationship\n * is a text annotation.\n */\nfunction isOneTextAnnotation(source, target) {\n\n  var sourceTextAnnotation = isTextAnnotation(source),\n      targetTextAnnotation = isTextAnnotation(target);\n\n  return (\n    (sourceTextAnnotation || targetTextAnnotation) &&\n    (sourceTextAnnotation !== targetTextAnnotation)\n  );\n}\n\n\nfunction canConnectAssociation(source, target) {\n\n  // compensation boundary events are exception\n  if (isCompensationBoundary(source) && isForCompensation(target)) {\n    return true;\n  }\n\n  // don't connect parent <-> child\n  if (isParent(target, source) || isParent(source, target)) {\n    return false;\n  }\n\n  // allow connection of associations between <!TextAnnotation> and <TextAnnotation>\n  if (isOneTextAnnotation(source, target)) {\n    return true;\n  }\n\n  // can connect associations where we can connect\n  // data associations, too (!)\n  return !!canConnectDataAssociation(source, target);\n}\n\nfunction canConnectMessageFlow(source, target) {\n\n  // during connect user might move mouse out of canvas\n  // https://github.com/bpmn-io/bpmn-js/issues/1033\n  if (getRootElement(source) && !getRootElement(target)) {\n    return false;\n  }\n\n  return (\n    isMessageFlowSource(source) &&\n    isMessageFlowTarget(target) &&\n    !isSameOrganization(source, target)\n  );\n}\n\nfunction canConnectSequenceFlow(source, target) {\n\n  if (\n    isEventBasedTarget(target) &&\n    target.incoming.length > 0 &&\n    areOutgoingEventBasedGatewayConnections(target.incoming) &&\n    !is(source, 'bpmn:EventBasedGateway')\n  ) {\n    return false;\n  }\n\n  return isSequenceFlowSource(source) &&\n         isSequenceFlowTarget(target) &&\n         isSameScope(source, target) &&\n         !(is(source, 'bpmn:EventBasedGateway') && !isEventBasedTarget(target));\n}\n\n\nfunction canConnectDataAssociation(source, target) {\n\n  if (isAny(source, [ 'bpmn:DataObjectReference', 'bpmn:DataStoreReference' ]) &&\n      isAny(target, [ 'bpmn:Activity', 'bpmn:ThrowEvent' ])) {\n    return { type: 'bpmn:DataInputAssociation' };\n  }\n\n  if (isAny(target, [ 'bpmn:DataObjectReference', 'bpmn:DataStoreReference' ]) &&\n      isAny(source, [ 'bpmn:Activity', 'bpmn:CatchEvent' ])) {\n    return { type: 'bpmn:DataOutputAssociation' };\n  }\n\n  return false;\n}\n\nfunction canInsert(shape, flow, position) {\n\n  if (!flow) {\n    return false;\n  }\n\n  if (Array.isArray(shape)) {\n    if (shape.length !== 1) {\n      return false;\n    }\n\n    shape = shape[0];\n  }\n\n  if (flow.source === shape ||\n      flow.target === shape) {\n    return false;\n  }\n\n  // return true if we can drop on the\n  // underlying flow parent\n  //\n  // at this point we are not really able to talk\n  // about connection rules (yet)\n\n  return (\n    isAny(flow, [ 'bpmn:SequenceFlow', 'bpmn:MessageFlow' ]) &&\n    !isLabel(flow) &&\n    is(shape, 'bpmn:FlowNode') &&\n    !is(shape, 'bpmn:BoundaryEvent') &&\n    canDrop(shape, flow.parent, position));\n}\n\nfunction includes(elements, element) {\n  return (elements && element) && elements.indexOf(element) !== -1;\n}\n\nfunction canCopy(elements, element) {\n  if (isLabel(element)) {\n    return true;\n  }\n\n  if (is(element, 'bpmn:Lane') && !includes(elements, element.parent)) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction isOutgoingEventBasedGatewayConnection(connection) {\n\n  if (connection && connection.source) {\n    return is(connection.source, 'bpmn:EventBasedGateway');\n  }\n}\n\nfunction areOutgoingEventBasedGatewayConnections(connections) {\n  connections = connections || [];\n\n  return connections.some(isOutgoingEventBasedGatewayConnection);\n}\n\nfunction getRootElement(element) {\n  return getParent(element, 'bpmn:Process') || getParent(element, 'bpmn:Collaboration');\n}\n"],"mappings":"AAAA,SACEA,KADF,EAEEC,IAFF,EAGEC,OAHF,EAIEC,IAJF,QAKO,UALP;AAOA,OAAOC,QAAP,MAAqB,kBAArB;AAEA,SACEC,EADF,EAEEC,iBAFF,QAGO,sBAHP;AAKA,SACEC,SADF,EAEEC,KAFF,QAGO,+BAHP;AAKA,SACEC,OADF,QAEO,sBAFP;AAIA,SACEC,UADF,EAEEC,iBAFF,EAGEC,cAHF,EAIEC,uBAJF,EAKEC,4BALF,EAMEC,4BANF,QAOO,mBAPP;AASA,OAAOC,YAAP,MAAyB,4CAAzB;AAEA,SACEC,qBAAqB,IAAIC,oBAD3B,QAEO,8BAFP;AAKA;AACA;AACA;;AACA,eAAe,SAASC,SAAT,CAAmBC,QAAnB,EAA6B;EAC1CJ,YAAY,CAACK,IAAb,CAAkB,IAAlB,EAAwBD,QAAxB;AACD;AAEDhB,QAAQ,CAACe,SAAD,EAAYH,YAAZ,CAAR;AAEAG,SAAS,CAACG,OAAV,GAAoB,CAAE,UAAF,CAApB;;AAEAH,SAAS,CAACI,SAAV,CAAoBC,IAApB,GAA2B,YAAW;EAEpC,KAAKC,OAAL,CAAa,kBAAb,EAAiC,UAASC,OAAT,EAAkB;IACjD,IAAIC,MAAM,GAAGD,OAAO,CAACC,MAArB;IAEA,OAAOC,kBAAkB,CAACD,MAAD,CAAzB;EACD,CAJD;EAMA,KAAKF,OAAL,CAAa,mBAAb,EAAkC,UAASC,OAAT,EAAkB;IAClD,IAAIC,MAAM,GAAGD,OAAO,CAACC,MAArB;IAAA,IACIE,MAAM,GAAGH,OAAO,CAACG,MADrB;IAAA,IAEIC,KAAK,GAAGJ,OAAO,CAACI,KAAR,IAAiB,EAF7B;IAAA,IAGIC,YAAY,GAAGD,KAAK,CAACC,YAHzB;IAAA,IAIIC,YAAY,GAAGF,KAAK,CAACE,YAJzB,CADkD,CAOlD;IACA;IACA;;IACA,IAAIA,YAAJ,EAAkB;MAChB,OAAO,KAAP;IACD,CAZiD,CAclD;IACA;;;IACA,IAAID,YAAJ,EAAkB;MAChBF,MAAM,CAACI,MAAP,GAAgBF,YAAhB;IACD;;IAED,IAAI;MACF,OAAOG,UAAU,CAACP,MAAD,EAASE,MAAT,CAAjB;IACD,CAFD,SAEU;MAER;MACA,IAAIE,YAAJ,EAAkB;QAChBF,MAAM,CAACI,MAAP,GAAgB,IAAhB;MACD;IACF;EACF,CA7BD;EA+BA,KAAKR,OAAL,CAAa,sBAAb,EAAqC,UAASC,OAAT,EAAkB;IAErD,IAAIS,UAAU,GAAGT,OAAO,CAACS,UAAzB;IAAA,IACIR,MAAM,GAAGD,OAAO,CAACC,MADrB;IAAA,IAEIE,MAAM,GAAGH,OAAO,CAACG,MAFrB;IAIA,OAAOK,UAAU,CAACP,MAAD,EAASE,MAAT,EAAiBM,UAAjB,CAAjB;EACD,CAPD;EASA,KAAKV,OAAL,CAAa,4BAAb,EAA2C,UAASC,OAAT,EAAkB;IAC3D,OAAO;MACLU,IAAI,EAAEV,OAAO,CAACS,UAAR,CAAmBC;IADpB,CAAP;EAGD,CAJD;EAMA,KAAKX,OAAL,CAAa,cAAb,EAA6B,UAASC,OAAT,EAAkB;IAE7C,IAAIW,KAAK,GAAGX,OAAO,CAACW,KAApB;IAAA,IACIC,SAAS,GAAGZ,OAAO,CAACY,SADxB;IAGA,OAAOC,SAAS,CAACF,KAAD,EAAQC,SAAR,CAAhB;EACD,CAND;EAQA,KAAKb,OAAL,CAAa,iBAAb,EAAgC,UAASC,OAAT,EAAkB;IAChD,IAAIc,QAAQ,GAAGd,OAAO,CAACc,QAAvB;IAAA,IACIC,QAAQ,GAAGf,OAAO,CAACe,QADvB;IAAA,IAEIZ,MAAM,GAAGH,OAAO,CAACG,MAFrB;;IAIA,IAAIa,YAAY,CAACb,MAAD,CAAZ,IAAwB,CAACc,SAAS,CAACH,QAAD,EAAWX,MAAX,EAAmBY,QAAnB,CAAtC,EAAoE;MAClE,OAAO,KAAP;IACD;;IAED,OAAOzC,KAAK,CAACwC,QAAD,EAAW,UAASI,OAAT,EAAkB;MACvC,IAAIF,YAAY,CAACE,OAAD,CAAhB,EAA2B;QACzB,OAAOV,UAAU,CAACU,OAAO,CAACjB,MAAT,EAAiBiB,OAAO,CAACf,MAAzB,EAAiCe,OAAjC,CAAjB;MACD;;MAED,IAAIA,OAAO,CAACC,IAAZ,EAAkB;QAChB,OAAOC,SAAS,CAACF,OAAD,EAAUA,OAAO,CAACC,IAAlB,EAAwB,IAAxB,EAA8BJ,QAA9B,CAAhB;MACD;;MAED,OAAOM,SAAS,CAACH,OAAD,EAAUf,MAAV,EAAkB,IAAlB,EAAwBY,QAAxB,CAAhB;IACD,CAVW,CAAZ;EAWD,CApBD;EAsBA,KAAKhB,OAAL,CAAa,eAAb,EAA8B,UAASC,OAAT,EAAkB;IAE9C,IAAIG,MAAM,GAAGH,OAAO,CAACG,MAArB;IAAA,IACImB,MAAM,GAAGtB,OAAO,CAACsB,MADrB;IAAA,IAEIP,QAAQ,GAAGf,OAAO,CAACe,QAFvB;IAIA,OAAOK,SAAS,CAACE,MAAD,EAASnB,MAAT,EAAiB,IAAjB,EAAuBY,QAAvB,CAAT,IACAQ,UAAU,CAACD,MAAD,EAASnB,MAAT,EAAiBY,QAAjB,CADV,IAEAS,OAAO,CAACF,MAAD,EAASnB,MAAT,EAAiBY,QAAjB,CAFP,IAGAE,SAAS,CAACK,MAAD,EAASnB,MAAT,EAAiBY,QAAjB,CAHhB;EAID,CAVD;EAYA,KAAKhB,OAAL,CAAa,cAAb,EAA6B,UAASC,OAAT,EAAkB;IAC7C,OAAOqB,SAAS,CACdrB,OAAO,CAACW,KADM,EAEdX,OAAO,CAACG,MAFM,EAGdH,OAAO,CAACC,MAHM,EAIdD,OAAO,CAACe,QAJM,CAAhB;EAMD,CAPD;EASA,KAAKhB,OAAL,CAAa,cAAb,EAA6B,UAASC,OAAT,EAAkB;IAE7C,OAAOoB,SAAS,CACdpB,OAAO,CAACW,KADM,EAEdX,OAAO,CAACG,MAFM,EAGd,IAHc,EAIdH,OAAO,CAACe,QAJM,CAAhB;EAMD,CARD;EAUA,KAAKhB,OAAL,CAAa,cAAb,EAA6B,UAASC,OAAT,EAAkB;IAC7C,IAAIkB,OAAO,GAAGlB,OAAO,CAACkB,OAAtB;IAAA,IACIJ,QAAQ,GAAGd,OAAO,CAACc,QADvB;IAGA,OAAOW,OAAO,CAACX,QAAD,EAAWI,OAAX,CAAd;EACD,CALD;AAMD,CAzHD;;AA2HAzB,SAAS,CAACI,SAAV,CAAoB6B,qBAApB,GAA4CA,qBAA5C;AAEAjC,SAAS,CAACI,SAAV,CAAoB8B,sBAApB,GAA6CA,sBAA7C;AAEAlC,SAAS,CAACI,SAAV,CAAoB+B,yBAApB,GAAgDA,yBAAhD;AAEAnC,SAAS,CAACI,SAAV,CAAoBgC,qBAApB,GAA4CA,qBAA5C;AAEApC,SAAS,CAACI,SAAV,CAAoB2B,OAApB,GAA8BA,OAA9B;AAEA/B,SAAS,CAACI,SAAV,CAAoBuB,SAApB,GAAgCA,SAAhC;AAEA3B,SAAS,CAACI,SAAV,CAAoB0B,UAApB,GAAiCA,UAAjC;AAEA9B,SAAS,CAACI,SAAV,CAAoBiC,OAApB,GAA8BA,OAA9B;AAEArC,SAAS,CAACI,SAAV,CAAoBoB,SAApB,GAAgCA,SAAhC;AAEAxB,SAAS,CAACI,SAAV,CAAoBwB,SAApB,GAAgCA,SAAhC;AAEA5B,SAAS,CAACI,SAAV,CAAoBW,UAApB,GAAiCA,UAAjC;AAEAf,SAAS,CAACI,SAAV,CAAoBgB,SAApB,GAAgCA,SAAhC;AAEApB,SAAS,CAACI,SAAV,CAAoB4B,OAApB,GAA8BA,OAA9B;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASvB,kBAAT,CAA4BgB,OAA5B,EAAqC;EACnC,IAAIa,kBAAkB,CAACb,OAAD,CAAtB,EAAiC;IAC/B,OAAO,IAAP;EACD;;EAED,OAAOpC,KAAK,CAACoC,OAAD,EAAU,CACpB,eADoB,EAEpB,sBAFoB,EAGpB,0BAHoB,EAIpB,yBAJoB,EAKpB,YALoB,EAMpB,qBANoB,CAAV,CAAZ;AAQD;;AAED,SAASa,kBAAT,CAA4Bb,OAA5B,EAAqC;EACnC,OAAO,CAACA,OAAD,IAAYnC,OAAO,CAACmC,OAAD,CAA1B;AACD;;AAED,SAASc,MAAT,CAAgBC,CAAhB,EAAmBC,CAAnB,EAAsB;EACpB,OAAOD,CAAC,KAAKC,CAAb;AACD;;AAED,SAASC,uBAAT,CAAiCjB,OAAjC,EAA0C;EAExC,GAAG;IACD,IAAIvC,EAAE,CAACuC,OAAD,EAAU,cAAV,CAAN,EAAiC;MAC/B,OAAOtC,iBAAiB,CAACsC,OAAD,CAAxB;IACD;;IAED,IAAIvC,EAAE,CAACuC,OAAD,EAAU,kBAAV,CAAN,EAAqC;MACnC,OACEtC,iBAAiB,CAACsC,OAAD,CAAjB,CAA2BkB,UAA3B,IACAxD,iBAAiB,CAACsC,OAAD,CAFnB;IAID;EACF,CAXD,QAWUA,OAAO,GAAGA,OAAO,CAACX,MAX5B;AAaD;;AAED,SAAS8B,gBAAT,CAA0BnB,OAA1B,EAAmC;EACjC,OAAOvC,EAAE,CAACuC,OAAD,EAAU,qBAAV,CAAT;AACD;;AAED,SAASoB,OAAT,CAAiBpB,OAAjB,EAA0B;EACxB,OAAOvC,EAAE,CAACuC,OAAD,EAAU,YAAV,CAAF,IAA6B,CAACA,OAAO,CAACqB,WAA7C;AACD;;AAED,SAASC,sBAAT,CAAgCtB,OAAhC,EAAyC;EACvC,OAAOvC,EAAE,CAACuC,OAAD,EAAU,oBAAV,CAAF,IACAuB,kBAAkB,CAACvB,OAAD,EAAU,gCAAV,CADzB;AAED;;AAED,SAASwB,iBAAT,CAA2BC,CAA3B,EAA8B;EAC5B,OAAO/D,iBAAiB,CAAC+D,CAAD,CAAjB,CAAqBD,iBAA5B;AACD;;AAED,SAASE,kBAAT,CAA4BX,CAA5B,EAA+BC,CAA/B,EAAkC;EAChC,IAAIW,OAAO,GAAGV,uBAAuB,CAACF,CAAD,CAArC;EAAA,IACIa,OAAO,GAAGX,uBAAuB,CAACD,CAAD,CADrC;EAGA,OAAOW,OAAO,KAAKC,OAAnB;AACD;;AAED,SAASC,mBAAT,CAA6B7B,OAA7B,EAAsC;EACpC,OACEvC,EAAE,CAACuC,OAAD,EAAU,sBAAV,CAAF,IACA,CAACvC,EAAE,CAACuC,OAAD,EAAU,oBAAV,CADH,KAEE,CAACvC,EAAE,CAACuC,OAAD,EAAU,YAAV,CAAH,IACEvC,EAAE,CAACuC,OAAD,EAAU,iBAAV,CAAF,IACA8B,wBAAwB,CAAC9B,OAAD,EAAU,6BAAV,CAJ5B,CADF;AASD;;AAED,SAAS+B,mBAAT,CAA6B/B,OAA7B,EAAsC;EACpC,OACEvC,EAAE,CAACuC,OAAD,EAAU,sBAAV,CAAF,IACA,CAACwB,iBAAiB,CAACxB,OAAD,CADlB,KAEE,CAACvC,EAAE,CAACuC,OAAD,EAAU,YAAV,CAAH,IACEvC,EAAE,CAACuC,OAAD,EAAU,iBAAV,CAAF,IACA8B,wBAAwB,CAAC9B,OAAD,EAAU,6BAAV,CAJ5B,KAMK,EACHvC,EAAE,CAACuC,OAAD,EAAU,oBAAV,CAAF,IACA,CAACuB,kBAAkB,CAACvB,OAAD,EAAU,6BAAV,CAFhB,CAPP;AAYD;;AAED,SAASgC,cAAT,CAAwBhC,OAAxB,EAAiC;EAE/B,IAAIX,MAAM,GAAGW,OAAb;;EAEA,OAAQX,MAAM,GAAGA,MAAM,CAACA,MAAxB,EAAiC;IAE/B,IAAI5B,EAAE,CAAC4B,MAAD,EAAS,4BAAT,CAAN,EAA8C;MAC5C,OAAO3B,iBAAiB,CAAC2B,MAAD,CAAxB;IACD;;IAED,IAAI5B,EAAE,CAAC4B,MAAD,EAAS,kBAAT,CAAN,EAAoC;MAClC,OAAO3B,iBAAiB,CAAC2B,MAAD,CAAjB,CAA0B6B,UAAjC;IACD;EACF;;EAED,OAAO,IAAP;AACD;;AAED,SAASe,WAAT,CAAqBlB,CAArB,EAAwBC,CAAxB,EAA2B;EACzB,IAAIkB,YAAY,GAAGF,cAAc,CAACjB,CAAD,CAAjC;EAAA,IACIoB,YAAY,GAAGH,cAAc,CAAChB,CAAD,CADjC;EAGA,OAAOkB,YAAY,KAAKC,YAAxB;AACD;;AAED,SAASZ,kBAAT,CAA4BvB,OAA5B,EAAqCoC,eAArC,EAAsD;EACpD,IAAIC,EAAE,GAAG3E,iBAAiB,CAACsC,OAAD,CAA1B;EAEA,OAAO,CAAC,CAAC3C,IAAI,CAACgF,EAAE,CAACC,gBAAH,IAAuB,EAAxB,EAA4B,UAASC,UAAT,EAAqB;IAC5D,OAAO9E,EAAE,CAAC8E,UAAD,EAAaH,eAAb,CAAT;EACD,CAFY,CAAb;AAGD;;AAED,SAASN,wBAAT,CAAkC9B,OAAlC,EAA2CoC,eAA3C,EAA4D;EAC1D,IAAIC,EAAE,GAAG3E,iBAAiB,CAACsC,OAAD,CAA1B;EAEA,OAAO,CAACqC,EAAE,CAACC,gBAAH,IAAuB,EAAxB,EAA4BlF,KAA5B,CAAkC,UAASmF,UAAT,EAAqB;IAC5D,OAAO9E,EAAE,CAAC8E,UAAD,EAAaH,eAAb,CAAT;EACD,CAFM,CAAP;AAGD;;AAED,SAASI,oBAAT,CAA8BxC,OAA9B,EAAuC;EACrC,OACEvC,EAAE,CAACuC,OAAD,EAAU,eAAV,CAAF,IACA,CAACvC,EAAE,CAACuC,OAAD,EAAU,eAAV,CADH,IAEA,CAACjC,iBAAiB,CAACiC,OAAD,CAFlB,IAGA,EAAEvC,EAAE,CAACuC,OAAD,EAAU,6BAAV,CAAF,IACAuB,kBAAkB,CAACvB,OAAD,EAAU,0BAAV,CADpB,CAHA,IAMA,CAACsB,sBAAsB,CAACtB,OAAD,CANvB,IAOA,CAACwB,iBAAiB,CAACxB,OAAD,CARpB;AAUD;;AAED,SAASyC,oBAAT,CAA8BzC,OAA9B,EAAuC;EACrC,OACEvC,EAAE,CAACuC,OAAD,EAAU,eAAV,CAAF,IACA,CAACvC,EAAE,CAACuC,OAAD,EAAU,iBAAV,CADH,IAEA,CAACvC,EAAE,CAACuC,OAAD,EAAU,oBAAV,CAFH,IAGA,CAACjC,iBAAiB,CAACiC,OAAD,CAHlB,IAIA,EAAEvC,EAAE,CAACuC,OAAD,EAAU,6BAAV,CAAF,IACAuB,kBAAkB,CAACvB,OAAD,EAAU,0BAAV,CADpB,CAJA,IAOA,CAACwB,iBAAiB,CAACxB,OAAD,CARpB;AAUD;;AAED,SAAS0C,kBAAT,CAA4B1C,OAA5B,EAAqC;EACnC,OACEvC,EAAE,CAACuC,OAAD,EAAU,kBAAV,CAAF,IACEvC,EAAE,CAACuC,OAAD,EAAU,6BAAV,CAAF,KACEuB,kBAAkB,CAACvB,OAAD,EAAU,6BAAV,CAAlB,IACAuB,kBAAkB,CAACvB,OAAD,EAAU,2BAAV,CADlB,IAEAuB,kBAAkB,CAACvB,OAAD,EAAU,iCAAV,CAFlB,IAGAuB,kBAAkB,CAACvB,OAAD,EAAU,4BAAV,CAJpB,CAFJ;AAUD;;AAED,SAASF,YAAT,CAAsBE,OAAtB,EAA+B;EAC7B,OAAOA,OAAO,CAAC2C,SAAf;AACD;;AAED,SAASC,UAAT,CAAoB5C,OAApB,EAA6B;EAE3B,IAAI6C,OAAO,GAAG,EAAd;;EAEA,OAAO7C,OAAP,EAAgB;IACdA,OAAO,GAAGA,OAAO,CAACX,MAAlB;;IAEA,IAAIW,OAAJ,EAAa;MACX6C,OAAO,CAACC,IAAR,CAAa9C,OAAb;IACD;EACF;;EAED,OAAO6C,OAAP;AACD;;AAED,SAASE,QAAT,CAAkBC,cAAlB,EAAkChD,OAAlC,EAA2C;EACzC,IAAIiD,UAAU,GAAGL,UAAU,CAAC5C,OAAD,CAA3B;EACA,OAAOiD,UAAU,CAACC,OAAX,CAAmBF,cAAnB,MAAuC,CAAC,CAA/C;AACD;;AAED,SAAS1D,UAAT,CAAoBP,MAApB,EAA4BE,MAA5B,EAAoCM,UAApC,EAAgD;EAE9C,IAAIsB,kBAAkB,CAAC9B,MAAD,CAAlB,IAA8B8B,kBAAkB,CAAC5B,MAAD,CAApD,EAA8D;IAC5D,OAAO,IAAP;EACD;;EAED,IAAI,CAACxB,EAAE,CAAC8B,UAAD,EAAa,sBAAb,CAAP,EAA6C;IAE3C,IAAIiB,qBAAqB,CAACzB,MAAD,EAASE,MAAT,CAAzB,EAA2C;MACzC,OAAO;QAAEO,IAAI,EAAE;MAAR,CAAP;IACD;;IAED,IAAIiB,sBAAsB,CAAC1B,MAAD,EAASE,MAAT,CAA1B,EAA4C;MAC1C,OAAO;QAAEO,IAAI,EAAE;MAAR,CAAP;IACD;EACF;;EAED,IAAI2D,sBAAsB,GAAGzC,yBAAyB,CAAC3B,MAAD,EAASE,MAAT,CAAtD;;EAEA,IAAIkE,sBAAJ,EAA4B;IAC1B,OAAOA,sBAAP;EACD;;EAED,IAAI7B,sBAAsB,CAACvC,MAAD,CAAtB,IAAkCyC,iBAAiB,CAACvC,MAAD,CAAvD,EAAiE;IAC/D,OAAO;MACLO,IAAI,EAAE,kBADD;MAEL4D,oBAAoB,EAAE;IAFjB,CAAP;EAID;;EAED,IAAIzC,qBAAqB,CAAC5B,MAAD,EAASE,MAAT,CAAzB,EAA2C;IAEzC,OAAO;MACLO,IAAI,EAAE;IADD,CAAP;EAGD;;EAED,OAAO,KAAP;AACD;AAED;AACA;AACA;AACA;AACA;;;AACA,SAASoB,OAAT,CAAiBZ,OAAjB,EAA0Bf,MAA1B,EAAkCY,QAAlC,EAA4C;EAE1C;EACA,IAAIhC,OAAO,CAACmC,OAAD,CAAP,IAAoBoB,OAAO,CAACpB,OAAD,CAA/B,EAA0C;IACxC,OAAO,IAAP;EACD,CALyC,CAQ1C;;;EACA,IAAIvC,EAAE,CAACwB,MAAD,EAAS,kBAAT,CAAF,IAAkC,CAACnB,UAAU,CAACmB,MAAD,CAAjD,EAA2D;IACzD,OAAO,KAAP;EACD,CAXyC,CAa1C;EACA;;;EACA,IAAIxB,EAAE,CAACuC,OAAD,EAAU,kBAAV,CAAN,EAAqC;IACnC,OAAOvC,EAAE,CAACwB,MAAD,EAAS,cAAT,CAAF,IAA8BxB,EAAE,CAACwB,MAAD,EAAS,oBAAT,CAAvC;EACD,CAjByC,CAmB1C;;;EACA,IAAIrB,KAAK,CAACoC,OAAD,EAAU,CAAE,gBAAF,EAAoB,iBAApB,CAAV,CAAT,EAA6D;IAE3D,IAAIA,OAAO,CAACX,MAAZ,EAAoB;MAClB,OAAOJ,MAAM,KAAKe,OAAO,CAACX,MAA1B;IACD;EACF,CAzByC,CA2B1C;;;EACA,IAAI5B,EAAE,CAACuC,OAAD,EAAU,WAAV,CAAN,EAA8B;IAC5B,OAAOvC,EAAE,CAACwB,MAAD,EAAS,kBAAT,CAAF,IAAkCxB,EAAE,CAACwB,MAAD,EAAS,WAAT,CAA3C;EACD,CA9ByC,CAgC1C;;;EACA,IAAIxB,EAAE,CAACuC,OAAD,EAAU,oBAAV,CAAF,IAAqC,CAACqD,wBAAwB,CAACrD,OAAD,CAAlE,EAA6E;IAC3E,OAAO,KAAP;EACD,CAnCyC,CAqC1C;EACA;;;EACA,IAAIvC,EAAE,CAACuC,OAAD,EAAU,kBAAV,CAAF,IAAmC,CAACvC,EAAE,CAACuC,OAAD,EAAU,yBAAV,CAA1C,EAAgF;IAC9E,IAAIvC,EAAE,CAACwB,MAAD,EAAS,4BAAT,CAAN,EAA8C;MAC5C,OAAOnB,UAAU,CAACmB,MAAD,CAAjB;IACD;;IAED,OAAOrB,KAAK,CAACqB,MAAD,EAAS,CAAE,kBAAF,EAAsB,WAAtB,CAAT,CAAZ;EACD,CA7CyC,CA+C1C;;;EACA,IAAIxB,EAAE,CAACuC,OAAD,EAAU,yBAAV,CAAF,IAA0CvC,EAAE,CAACwB,MAAD,EAAS,oBAAT,CAAhD,EAAgF;IAC9E,OAAO1B,IAAI,CAACG,iBAAiB,CAACuB,MAAD,CAAjB,CAA0BqE,GAA1B,CAA8B,cAA9B,CAAD,EAAgD,UAASC,WAAT,EAAsB;MAC/E,OAAO,CAAC,CAACA,WAAW,CAACD,GAAZ,CAAgB,YAAhB,CAAT;IACD,CAFU,CAAX;EAGD,CApDyC,CAsD1C;EACA;EACA;EACA;;;EACA,IAAI1F,KAAK,CAACoC,OAAD,EAAU,CAAE,eAAF,EAAmB,sBAAnB,EAA2C,yBAA3C,CAAV,CAAT,EAA4F;IAC1F,OAAOpC,KAAK,CAACqB,MAAD,EAAS,CACnB,oBADmB,EAEnB,WAFmB,EAGnB,kBAHmB,EAInB,cAJmB,EAKnB,iBALmB,CAAT,CAAZ;EAMD;;EAED,IAAIxB,EAAE,CAACuC,OAAD,EAAU,kBAAV,CAAN,EAAqC;IACnC,OAAOvC,EAAE,CAACwB,MAAD,EAAS,oBAAT,CAAF,IACFe,OAAO,CAACjB,MAAR,CAAeM,MAAf,IAAyBJ,MADvB,IAEFe,OAAO,CAACf,MAAR,CAAeI,MAAf,IAAyBJ,MAF9B;EAGD;;EAED,OAAO,KAAP;AACD;;AAED,SAASoE,wBAAT,CAAkCG,KAAlC,EAAyC;EACvC,OAAO9F,iBAAiB,CAAC8F,KAAD,CAAjB,CAAyBC,cAAzB,KACLC,oBAAoB,CAACF,KAAD,CAApB,IAA+BG,4CAA4C,CAACH,KAAD,CADtE,CAAP;AAGD;;AAED,SAASI,eAAT,CAAyB5D,OAAzB,EAAkC;EAChC,OAAO,CAACnC,OAAO,CAACmC,OAAD,CAAR,IAAqBvC,EAAE,CAACuC,OAAD,EAAU,oBAAV,CAA9B;AACD;;AAED,SAAS6D,MAAT,CAAgB7D,OAAhB,EAAyB;EACvB,OAAOvC,EAAE,CAACuC,OAAD,EAAU,WAAV,CAAT;AACD;AAED;AACA;AACA;AACA;;;AACA,SAAS8D,mBAAT,CAA6B9D,OAA7B,EAAsC;EACpC,IAAI4D,eAAe,CAAC5D,OAAD,CAAnB,EAA8B;IAC5B,OAAO,IAAP;EACD;;EAED,IAAIvC,EAAE,CAACuC,OAAD,EAAU,6BAAV,CAAF,IAA8C0D,oBAAoB,CAAC1D,OAAD,CAAtE,EAAiF;IAC/E,OAAO,IAAP;EACD;;EAED,OACEvC,EAAE,CAACuC,OAAD,EAAU,6BAAV,CAAF,IACA2D,4CAA4C,CAAC3D,OAAD,CAF9C;AAID;;AAED,SAAS0D,oBAAT,CAA8B1D,OAA9B,EAAuC;EACrC,IAAIqC,EAAE,GAAG3E,iBAAiB,CAACsC,OAAD,CAA1B;EAEA,OAAOqC,EAAE,IAAI,EAAEA,EAAE,CAACC,gBAAH,IAAuBD,EAAE,CAACC,gBAAH,CAAoByB,MAA7C,CAAb;AACD;;AAED,SAASJ,4CAAT,CAAsD3D,OAAtD,EAA+D;EAC7D,OAAOgE,wBAAwB,CAAChE,OAAD,EAAU,CACvC,6BADuC,EAEvC,2BAFuC,EAGvC,4BAHuC,EAIvC,iCAJuC,CAAV,CAA/B;AAMD;;AAED,SAASgE,wBAAT,CAAkChE,OAAlC,EAA2CsC,gBAA3C,EAA6D;EAC3D,OAAOA,gBAAgB,CAAC/E,IAAjB,CAAsB,UAASgF,UAAT,EAAqB;IAChD,OAAOhB,kBAAkB,CAACvB,OAAD,EAAUuC,UAAV,CAAzB;EACD,CAFM,CAAP;AAGD;;AAED,SAAS0B,mCAAT,CAA6CjE,OAA7C,EAAsD;EACpD,OACEvC,EAAE,CAACuC,OAAD,EAAU,kBAAV,CAAF,IACA3C,IAAI,CAAC2C,OAAO,CAACkE,QAAT,EAAmB,UAASA,QAAT,EAAmB;IACxC,OAAOzG,EAAE,CAACyG,QAAQ,CAACnF,MAAV,EAAkB,wBAAlB,CAAT;EACD,CAFG,CAFN;AAMD;;AAGD,SAASmB,SAAT,CAAmBN,QAAnB,EAA6BX,MAA7B,EAAqCF,MAArC,EAA6Cc,QAA7C,EAAuD;EAErD,IAAI,CAACsE,KAAK,CAACC,OAAN,CAAcxE,QAAd,CAAL,EAA8B;IAC5BA,QAAQ,GAAG,CAAEA,QAAF,CAAX;EACD,CAJoD,CAMrD;;;EACA,IAAIA,QAAQ,CAACmE,MAAT,KAAoB,CAAxB,EAA2B;IACzB,OAAO,KAAP;EACD;;EAED,IAAI/D,OAAO,GAAGJ,QAAQ,CAAC,CAAD,CAAtB,CAXqD,CAarD;;EACA,IAAI/B,OAAO,CAACmC,OAAD,CAAX,EAAsB;IACpB,OAAO,KAAP;EACD,CAhBoD,CAkBrD;;;EACA,IAAI,CAAC8D,mBAAmB,CAAC9D,OAAD,CAAxB,EAAmC;IACjC,OAAO,KAAP;EACD,CArBoD,CAuBrD;;;EACA,IAAIjC,iBAAiB,CAACkB,MAAD,CAArB,EAA+B;IAC7B,OAAO,KAAP;EACD,CA1BoD,CA4BrD;;;EACA,IAAI,CAACxB,EAAE,CAACwB,MAAD,EAAS,eAAT,CAAH,IAAgCuC,iBAAiB,CAACvC,MAAD,CAArD,EAA+D;IAC7D,OAAO,KAAP;EACD,CA/BoD,CAiCrD;;;EACA,IAAIY,QAAQ,IAAI,CAACvB,oBAAoB,CAACuB,QAAD,EAAWZ,MAAX,CAArC,EAAyD;IACvD,OAAO,KAAP;EACD,CApCoD,CAsCrD;;;EACA,IAAIgF,mCAAmC,CAAChF,MAAD,CAAvC,EAAiD;IAC/C,OAAO,KAAP;EACD;;EAED,OAAO,QAAP;AACD;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASoB,UAAT,CAAoBT,QAApB,EAA8BX,MAA9B,EAAsCY,QAAtC,EAAgD;EAE9C,IAAI,CAACZ,MAAL,EAAa;IACX,OAAO,KAAP;EACD;;EAED,IAAIoF,UAAU,GAAG;IACfC,YAAY,EAAE;EADC,CAAjB;EAIAhH,OAAO,CAACsC,QAAD,EAAW,UAASI,OAAT,EAAkB;IAElC,IAAI,CAACjC,iBAAiB,CAACkB,MAAD,CAAtB,EAAgC;MAE9B,IAAIxB,EAAE,CAACuC,OAAD,EAAU,iBAAV,CAAF,IACAA,OAAO,CAACR,IAAR,KAAiB,OADjB,IAEAoB,OAAO,CAACZ,OAAD,EAAUf,MAAV,CAFX,EAE8B;QAE5B;QACA;QACA,IAAI,CAACjB,cAAc,CAACgC,OAAD,CAAnB,EAA8B;UAC5BqE,UAAU,CAACC,YAAX,CAAwBxB,IAAxB,CAA6B;YAC3ByB,YAAY,EAAEvE,OAAO,CAACwE,EADK;YAE3BC,cAAc,EAAE;UAFW,CAA7B;QAID,CAT2B,CAW5B;QACA;;;QACA,IAAIxG,uBAAuB,CAAC+B,OAAD,CAAvB,IACA9B,4BAA4B,CAAC8B,OAAD,CAD5B,IAEA7B,4BAA4B,CAAC6B,OAAD,CAFhC,EAE2C;UACzCqE,UAAU,CAACC,YAAX,CAAwBxB,IAAxB,CAA6B;YAC3ByB,YAAY,EAAEvE,OAAO,CAACwE,EADK;YAE3BC,cAAc,EAAE;UAFW,CAA7B;QAID,CApB2B,CAsB5B;QACA;;;QACA,IAAIT,wBAAwB,CAAChE,OAAD,EAC1B,CACE,6BADF,EAEE,2BAFF,EAGE,4BAHF,EAIE,iCAJF,CAD0B,CAAxB,IAOAvC,EAAE,CAACwB,MAAD,EAAS,iBAAT,CAPN,EAOmC;UACjCoF,UAAU,CAACC,YAAX,CAAwBxB,IAAxB,CAA6B;YAC3ByB,YAAY,EAAEvE,OAAO,CAACwE,EADK;YAE3BC,cAAc,EAAE;UAFW,CAA7B;QAID;MACF;IACF;;IAED,IAAI,CAAChH,EAAE,CAACwB,MAAD,EAAS,kBAAT,CAAP,EAAqC;MACnC,IAAIsC,kBAAkB,CAACvB,OAAD,EAAU,4BAAV,CAAlB,IACAA,OAAO,CAACR,IAAR,KAAiB,OADrB,EAC8B;QAE5B,IAAI/B,EAAE,CAACuC,OAAD,EAAU,eAAV,CAAF,IAAgCY,OAAO,CAACZ,OAAD,EAAUf,MAAV,CAA3C,EAA8D;UAC5DoF,UAAU,CAACC,YAAX,CAAwBxB,IAAxB,CAA6B;YAC3ByB,YAAY,EAAEvE,OAAO,CAACwE,EADK;YAE3BC,cAAc,EAAE;UAFW,CAA7B;QAID;;QAED,IAAIhH,EAAE,CAACuC,OAAD,EAAU,oBAAV,CAAF,IAAqCE,SAAS,CAACF,OAAD,EAAUf,MAAV,EAAkB,IAAlB,EAAwBY,QAAxB,CAAlD,EAAqF;UACnFwE,UAAU,CAACC,YAAX,CAAwBxB,IAAxB,CAA6B;YAC3ByB,YAAY,EAAEvE,OAAO,CAACwE,EADK;YAE3BC,cAAc,EAAE;UAFW,CAA7B;QAID;MACF;IACF;EACF,CAjEM,CAAP;EAmEA,OAAOJ,UAAU,CAACC,YAAX,CAAwBP,MAAxB,GAAiCM,UAAjC,GAA8C,KAArD;AACD;;AAED,SAAS/D,OAAT,CAAiBV,QAAjB,EAA2BX,MAA3B,EAAmC;EAEjC;EACA,IAAI1B,IAAI,CAACqC,QAAD,EAAWiE,MAAX,CAAR,EAA4B;IAC1B,OAAO,KAAP;EACD,CALgC,CAOjC;;;EACA,IAAI,CAAC5E,MAAL,EAAa;IACX,OAAO,IAAP;EACD;;EAED,OAAOW,QAAQ,CAACxC,KAAT,CAAe,UAAS4C,OAAT,EAAkB;IACtC,OAAOY,OAAO,CAACZ,OAAD,EAAUf,MAAV,CAAd;EACD,CAFM,CAAP;AAGD;;AAED,SAASkB,SAAT,CAAmBV,KAAnB,EAA0BR,MAA1B,EAAkCF,MAAlC,EAA0Cc,QAA1C,EAAoD;EAElD,IAAI,CAACZ,MAAL,EAAa;IACX,OAAO,KAAP;EACD;;EAED,IAAIpB,OAAO,CAAC4B,KAAD,CAAP,IAAkB2B,OAAO,CAAC3B,KAAD,CAA7B,EAAsC;IACpC,OAAO,IAAP;EACD;;EAED,IAAIqB,MAAM,CAAC/B,MAAD,EAASE,MAAT,CAAV,EAA4B;IAC1B,OAAO,KAAP;EACD,CAZiD,CAclD;EACA;;;EACA,IAAIF,MAAM,IAAIgE,QAAQ,CAAChE,MAAD,EAASE,MAAT,CAAtB,EAAwC;IACtC,OAAO,KAAP;EACD;;EAED,OAAO2B,OAAO,CAACnB,KAAD,EAAQR,MAAR,EAAgBY,QAAhB,CAAP,IAAoCE,SAAS,CAACN,KAAD,EAAQR,MAAR,EAAgBY,QAAhB,CAApD;AACD;;AAED,SAASF,SAAT,CAAmBF,KAAnB,EAA0BC,SAA1B,EAAqC;EACnC,IAAIjC,EAAE,CAACgC,KAAD,EAAQ,iBAAR,CAAN,EAAkC;IAChC,OACE3B,UAAU,CAAC2B,KAAD,CAAV,KACE,CAACC,SAAD,IAAeA,SAAS,CAACgF,KAAV,IAAmB,GAAnB,IAA0BhF,SAAS,CAACiF,MAAV,IAAoB,EAD/D,CADF;EAKD;;EAED,IAAIlH,EAAE,CAACgC,KAAD,EAAQ,WAAR,CAAN,EAA4B;IAC1B,OAAO,CAACC,SAAD,IAAeA,SAAS,CAACgF,KAAV,IAAmB,GAAnB,IAA0BhF,SAAS,CAACiF,MAAV,IAAoB,EAApE;EACD;;EAED,IAAIlH,EAAE,CAACgC,KAAD,EAAQ,kBAAR,CAAN,EAAmC;IACjC,OAAO,CAACC,SAAD,IAAeA,SAAS,CAACgF,KAAV,IAAmB,GAAnB,IAA0BhF,SAAS,CAACiF,MAAV,IAAoB,EAApE;EACD;;EAED,IAAIxD,gBAAgB,CAAC1B,KAAD,CAApB,EAA6B;IAC3B,OAAO,IAAP;EACD;;EAED,IAAI2B,OAAO,CAAC3B,KAAD,CAAX,EAAoB;IAClB,OAAO,IAAP;EACD;;EAED,OAAO,KAAP;AACD;AAED;AACA;AACA;AACA;;;AACA,SAASmF,mBAAT,CAA6B7F,MAA7B,EAAqCE,MAArC,EAA6C;EAE3C,IAAI4F,oBAAoB,GAAG1D,gBAAgB,CAACpC,MAAD,CAA3C;EAAA,IACI+F,oBAAoB,GAAG3D,gBAAgB,CAAClC,MAAD,CAD3C;EAGA,OACE,CAAC4F,oBAAoB,IAAIC,oBAAzB,KACCD,oBAAoB,KAAKC,oBAF5B;AAID;;AAGD,SAASnE,qBAAT,CAA+B5B,MAA/B,EAAuCE,MAAvC,EAA+C;EAE7C;EACA,IAAIqC,sBAAsB,CAACvC,MAAD,CAAtB,IAAkCyC,iBAAiB,CAACvC,MAAD,CAAvD,EAAiE;IAC/D,OAAO,IAAP;EACD,CAL4C,CAO7C;;;EACA,IAAI8D,QAAQ,CAAC9D,MAAD,EAASF,MAAT,CAAR,IAA4BgE,QAAQ,CAAChE,MAAD,EAASE,MAAT,CAAxC,EAA0D;IACxD,OAAO,KAAP;EACD,CAV4C,CAY7C;;;EACA,IAAI2F,mBAAmB,CAAC7F,MAAD,EAASE,MAAT,CAAvB,EAAyC;IACvC,OAAO,IAAP;EACD,CAf4C,CAiB7C;EACA;;;EACA,OAAO,CAAC,CAACyB,yBAAyB,CAAC3B,MAAD,EAASE,MAAT,CAAlC;AACD;;AAED,SAASuB,qBAAT,CAA+BzB,MAA/B,EAAuCE,MAAvC,EAA+C;EAE7C;EACA;EACA,IAAI8F,cAAc,CAAChG,MAAD,CAAd,IAA0B,CAACgG,cAAc,CAAC9F,MAAD,CAA7C,EAAuD;IACrD,OAAO,KAAP;EACD;;EAED,OACE4C,mBAAmB,CAAC9C,MAAD,CAAnB,IACAgD,mBAAmB,CAAC9C,MAAD,CADnB,IAEA,CAACyC,kBAAkB,CAAC3C,MAAD,EAASE,MAAT,CAHrB;AAKD;;AAED,SAASwB,sBAAT,CAAgC1B,MAAhC,EAAwCE,MAAxC,EAAgD;EAE9C,IACEyD,kBAAkB,CAACzD,MAAD,CAAlB,IACAA,MAAM,CAACiF,QAAP,CAAgBH,MAAhB,GAAyB,CADzB,IAEAiB,uCAAuC,CAAC/F,MAAM,CAACiF,QAAR,CAFvC,IAGA,CAACzG,EAAE,CAACsB,MAAD,EAAS,wBAAT,CAJL,EAKE;IACA,OAAO,KAAP;EACD;;EAED,OAAOyD,oBAAoB,CAACzD,MAAD,CAApB,IACA0D,oBAAoB,CAACxD,MAAD,CADpB,IAEAgD,WAAW,CAAClD,MAAD,EAASE,MAAT,CAFX,IAGA,EAAExB,EAAE,CAACsB,MAAD,EAAS,wBAAT,CAAF,IAAwC,CAAC2D,kBAAkB,CAACzD,MAAD,CAA7D,CAHP;AAID;;AAGD,SAASyB,yBAAT,CAAmC3B,MAAnC,EAA2CE,MAA3C,EAAmD;EAEjD,IAAIrB,KAAK,CAACmB,MAAD,EAAS,CAAE,0BAAF,EAA8B,yBAA9B,CAAT,CAAL,IACAnB,KAAK,CAACqB,MAAD,EAAS,CAAE,eAAF,EAAmB,iBAAnB,CAAT,CADT,EAC2D;IACzD,OAAO;MAAEO,IAAI,EAAE;IAAR,CAAP;EACD;;EAED,IAAI5B,KAAK,CAACqB,MAAD,EAAS,CAAE,0BAAF,EAA8B,yBAA9B,CAAT,CAAL,IACArB,KAAK,CAACmB,MAAD,EAAS,CAAE,eAAF,EAAmB,iBAAnB,CAAT,CADT,EAC2D;IACzD,OAAO;MAAES,IAAI,EAAE;IAAR,CAAP;EACD;;EAED,OAAO,KAAP;AACD;;AAED,SAASO,SAAT,CAAmBN,KAAnB,EAA0BwF,IAA1B,EAAgCpF,QAAhC,EAA0C;EAExC,IAAI,CAACoF,IAAL,EAAW;IACT,OAAO,KAAP;EACD;;EAED,IAAId,KAAK,CAACC,OAAN,CAAc3E,KAAd,CAAJ,EAA0B;IACxB,IAAIA,KAAK,CAACsE,MAAN,KAAiB,CAArB,EAAwB;MACtB,OAAO,KAAP;IACD;;IAEDtE,KAAK,GAAGA,KAAK,CAAC,CAAD,CAAb;EACD;;EAED,IAAIwF,IAAI,CAAClG,MAAL,KAAgBU,KAAhB,IACAwF,IAAI,CAAChG,MAAL,KAAgBQ,KADpB,EAC2B;IACzB,OAAO,KAAP;EACD,CAjBuC,CAmBxC;EACA;EACA;EACA;EACA;;;EAEA,OACE7B,KAAK,CAACqH,IAAD,EAAO,CAAE,mBAAF,EAAuB,kBAAvB,CAAP,CAAL,IACA,CAACpH,OAAO,CAACoH,IAAD,CADR,IAEAxH,EAAE,CAACgC,KAAD,EAAQ,eAAR,CAFF,IAGA,CAAChC,EAAE,CAACgC,KAAD,EAAQ,oBAAR,CAHH,IAIAmB,OAAO,CAACnB,KAAD,EAAQwF,IAAI,CAAC5F,MAAb,EAAqBQ,QAArB,CALT;AAMD;;AAED,SAASqF,QAAT,CAAkBtF,QAAlB,EAA4BI,OAA5B,EAAqC;EACnC,OAAQJ,QAAQ,IAAII,OAAb,IAAyBJ,QAAQ,CAACsD,OAAT,CAAiBlD,OAAjB,MAA8B,CAAC,CAA/D;AACD;;AAED,SAASO,OAAT,CAAiBX,QAAjB,EAA2BI,OAA3B,EAAoC;EAClC,IAAInC,OAAO,CAACmC,OAAD,CAAX,EAAsB;IACpB,OAAO,IAAP;EACD;;EAED,IAAIvC,EAAE,CAACuC,OAAD,EAAU,WAAV,CAAF,IAA4B,CAACkF,QAAQ,CAACtF,QAAD,EAAWI,OAAO,CAACX,MAAnB,CAAzC,EAAqE;IACnE,OAAO,KAAP;EACD;;EAED,OAAO,IAAP;AACD;;AAED,SAAS8F,qCAAT,CAA+C5F,UAA/C,EAA2D;EAEzD,IAAIA,UAAU,IAAIA,UAAU,CAACR,MAA7B,EAAqC;IACnC,OAAOtB,EAAE,CAAC8B,UAAU,CAACR,MAAZ,EAAoB,wBAApB,CAAT;EACD;AACF;;AAED,SAASiG,uCAAT,CAAiDI,WAAjD,EAA8D;EAC5DA,WAAW,GAAGA,WAAW,IAAI,EAA7B;EAEA,OAAOA,WAAW,CAAC7H,IAAZ,CAAiB4H,qCAAjB,CAAP;AACD;;AAED,SAASJ,cAAT,CAAwB/E,OAAxB,EAAiC;EAC/B,OAAOrC,SAAS,CAACqC,OAAD,EAAU,cAAV,CAAT,IAAsCrC,SAAS,CAACqC,OAAD,EAAU,oBAAV,CAAtD;AACD"},"metadata":{},"sourceType":"module"}